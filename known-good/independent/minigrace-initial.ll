;-------------LLVM IR------------ 

%method = type { i8*, %object*(%object *, i32, %object**)*,
    %object***, %object*(%object *, i32, %object**,
        %object***)*}
%object = type { [32 x i8], %method**, %object**, i8**, i32, i32 }
 
define %object* @reader_type_5(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_5(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_7(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_7(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: identifiertok 
define %object* @meth_identifiertok2(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_s = getelementptr %object** %args, i32 0 
  %obj3 = call %object* @alloc_obj() 
  %str4 = getelementptr [11 x i8]* @.str0, i32 0, i32 0 
  %string4 = call %object* @alloc_String(i8* %str4) 
; compilenode returning %string4 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj3, %object* %string4, i32 0) 
  call void @addmethod(%object* %obj3, i8* getelementptr([5 x i8]* @.str.methname5, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_5)) 
  call void @addmethod(%object* %obj3, i8* getelementptr([7 x i8]* @.str.methnamew5, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_5)) 
  %var_val_s6 = load %object** %var_s 
; compilenode returning %var_val_s6 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj3, %object* %var_val_s6, i32 1) 
  call void @addmethod(%object* %obj3, i8* getelementptr([6 x i8]* @.str.methname7, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_7)) 
  call void @addmethod(%object* %obj3, i8* getelementptr([8 x i8]* @.str.methnamew7, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_7)) 
; compilenode returning %obj3 
  ret %object* %obj3 
} 
;;;; ENDS 
define %object* @reader_type_11(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_11(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_13(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_13(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: stringtok 
define %object* @meth_stringtok8(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_s = getelementptr %object** %args, i32 0 
  %obj9 = call %object* @alloc_obj() 
  %str10 = getelementptr [7 x i8]* @.str6, i32 0, i32 0 
  %string10 = call %object* @alloc_String(i8* %str10) 
; compilenode returning %string10 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj9, %object* %string10, i32 0) 
  call void @addmethod(%object* %obj9, i8* getelementptr([5 x i8]* @.str.methname11, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_11)) 
  call void @addmethod(%object* %obj9, i8* getelementptr([7 x i8]* @.str.methnamew11, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_11)) 
  %var_val_s12 = load %object** %var_s 
; compilenode returning %var_val_s12 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj9, %object* %var_val_s12, i32 1) 
  call void @addmethod(%object* %obj9, i8* getelementptr([6 x i8]* @.str.methname13, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_13)) 
  call void @addmethod(%object* %obj9, i8* getelementptr([8 x i8]* @.str.methnamew13, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_13)) 
; compilenode returning %obj9 
  ret %object* %obj9 
} 
;;;; ENDS 
define %object* @reader_type_17(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_17(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_19(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_19(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: lbracetok 
define %object* @meth_lbracetok14(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj15 = call %object* @alloc_obj() 
  %str16 = getelementptr [7 x i8]* @.str12, i32 0, i32 0 
  %string16 = call %object* @alloc_String(i8* %str16) 
; compilenode returning %string16 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj15, %object* %string16, i32 0) 
  call void @addmethod(%object* %obj15, i8* getelementptr([5 x i8]* @.str.methname17, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_17)) 
  call void @addmethod(%object* %obj15, i8* getelementptr([7 x i8]* @.str.methnamew17, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_17)) 
  %str18 = getelementptr [2 x i8]* @.str15, i32 0, i32 0 
  %string18 = call %object* @alloc_String(i8* %str18) 
; compilenode returning %string18 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj15, %object* %string18, i32 1) 
  call void @addmethod(%object* %obj15, i8* getelementptr([6 x i8]* @.str.methname19, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_19)) 
  call void @addmethod(%object* %obj15, i8* getelementptr([8 x i8]* @.str.methnamew19, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_19)) 
; compilenode returning %obj15 
  ret %object* %obj15 
} 
;;;; ENDS 
define %object* @reader_type_23(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_23(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_25(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_25(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: rbracetok 
define %object* @meth_rbracetok20(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj21 = call %object* @alloc_obj() 
  %str22 = getelementptr [7 x i8]* @.str19, i32 0, i32 0 
  %string22 = call %object* @alloc_String(i8* %str22) 
; compilenode returning %string22 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj21, %object* %string22, i32 0) 
  call void @addmethod(%object* %obj21, i8* getelementptr([5 x i8]* @.str.methname23, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_23)) 
  call void @addmethod(%object* %obj21, i8* getelementptr([7 x i8]* @.str.methnamew23, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_23)) 
  %str24 = getelementptr [2 x i8]* @.str22, i32 0, i32 0 
  %string24 = call %object* @alloc_String(i8* %str24) 
; compilenode returning %string24 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj21, %object* %string24, i32 1) 
  call void @addmethod(%object* %obj21, i8* getelementptr([6 x i8]* @.str.methname25, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_25)) 
  call void @addmethod(%object* %obj21, i8* getelementptr([8 x i8]* @.str.methnamew25, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_25)) 
; compilenode returning %obj21 
  ret %object* %obj21 
} 
;;;; ENDS 
define %object* @reader_type_29(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_29(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_31(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_31(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: lparentok 
define %object* @meth_lparentok26(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj27 = call %object* @alloc_obj() 
  %str28 = getelementptr [7 x i8]* @.str26, i32 0, i32 0 
  %string28 = call %object* @alloc_String(i8* %str28) 
; compilenode returning %string28 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj27, %object* %string28, i32 0) 
  call void @addmethod(%object* %obj27, i8* getelementptr([5 x i8]* @.str.methname29, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_29)) 
  call void @addmethod(%object* %obj27, i8* getelementptr([7 x i8]* @.str.methnamew29, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_29)) 
  %str30 = getelementptr [2 x i8]* @.str29, i32 0, i32 0 
  %string30 = call %object* @alloc_String(i8* %str30) 
; compilenode returning %string30 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj27, %object* %string30, i32 1) 
  call void @addmethod(%object* %obj27, i8* getelementptr([6 x i8]* @.str.methname31, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_31)) 
  call void @addmethod(%object* %obj27, i8* getelementptr([8 x i8]* @.str.methnamew31, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_31)) 
; compilenode returning %obj27 
  ret %object* %obj27 
} 
;;;; ENDS 
define %object* @reader_type_35(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_35(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_37(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_37(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: rparentok 
define %object* @meth_rparentok32(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj33 = call %object* @alloc_obj() 
  %str34 = getelementptr [7 x i8]* @.str33, i32 0, i32 0 
  %string34 = call %object* @alloc_String(i8* %str34) 
; compilenode returning %string34 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj33, %object* %string34, i32 0) 
  call void @addmethod(%object* %obj33, i8* getelementptr([5 x i8]* @.str.methname35, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_35)) 
  call void @addmethod(%object* %obj33, i8* getelementptr([7 x i8]* @.str.methnamew35, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_35)) 
  %str36 = getelementptr [2 x i8]* @.str36, i32 0, i32 0 
  %string36 = call %object* @alloc_String(i8* %str36) 
; compilenode returning %string36 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj33, %object* %string36, i32 1) 
  call void @addmethod(%object* %obj33, i8* getelementptr([6 x i8]* @.str.methname37, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_37)) 
  call void @addmethod(%object* %obj33, i8* getelementptr([8 x i8]* @.str.methnamew37, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_37)) 
; compilenode returning %obj33 
  ret %object* %obj33 
} 
;;;; ENDS 
define %object* @reader_type_41(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_41(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_43(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_43(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: lsquaretok 
define %object* @meth_lsquaretok38(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj39 = call %object* @alloc_obj() 
  %str40 = getelementptr [8 x i8]* @.str40, i32 0, i32 0 
  %string40 = call %object* @alloc_String(i8* %str40) 
; compilenode returning %string40 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj39, %object* %string40, i32 0) 
  call void @addmethod(%object* %obj39, i8* getelementptr([5 x i8]* @.str.methname41, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_41)) 
  call void @addmethod(%object* %obj39, i8* getelementptr([7 x i8]* @.str.methnamew41, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_41)) 
  %str42 = getelementptr [2 x i8]* @.str43, i32 0, i32 0 
  %string42 = call %object* @alloc_String(i8* %str42) 
; compilenode returning %string42 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj39, %object* %string42, i32 1) 
  call void @addmethod(%object* %obj39, i8* getelementptr([6 x i8]* @.str.methname43, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_43)) 
  call void @addmethod(%object* %obj39, i8* getelementptr([8 x i8]* @.str.methnamew43, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_43)) 
; compilenode returning %obj39 
  ret %object* %obj39 
} 
;;;; ENDS 
define %object* @reader_type_47(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_47(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_49(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_49(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: rsquaretok 
define %object* @meth_rsquaretok44(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj45 = call %object* @alloc_obj() 
  %str46 = getelementptr [8 x i8]* @.str47, i32 0, i32 0 
  %string46 = call %object* @alloc_String(i8* %str46) 
; compilenode returning %string46 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj45, %object* %string46, i32 0) 
  call void @addmethod(%object* %obj45, i8* getelementptr([5 x i8]* @.str.methname47, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_47)) 
  call void @addmethod(%object* %obj45, i8* getelementptr([7 x i8]* @.str.methnamew47, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_47)) 
  %str48 = getelementptr [2 x i8]* @.str50, i32 0, i32 0 
  %string48 = call %object* @alloc_String(i8* %str48) 
; compilenode returning %string48 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj45, %object* %string48, i32 1) 
  call void @addmethod(%object* %obj45, i8* getelementptr([6 x i8]* @.str.methname49, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_49)) 
  call void @addmethod(%object* %obj45, i8* getelementptr([8 x i8]* @.str.methnamew49, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_49)) 
; compilenode returning %obj45 
  ret %object* %obj45 
} 
;;;; ENDS 
define %object* @reader_type_53(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_53(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_55(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_55(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: commatok 
define %object* @meth_commatok50(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj51 = call %object* @alloc_obj() 
  %str52 = getelementptr [6 x i8]* @.str54, i32 0, i32 0 
  %string52 = call %object* @alloc_String(i8* %str52) 
; compilenode returning %string52 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj51, %object* %string52, i32 0) 
  call void @addmethod(%object* %obj51, i8* getelementptr([5 x i8]* @.str.methname53, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_53)) 
  call void @addmethod(%object* %obj51, i8* getelementptr([7 x i8]* @.str.methnamew53, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_53)) 
  %str54 = getelementptr [2 x i8]* @.str57, i32 0, i32 0 
  %string54 = call %object* @alloc_String(i8* %str54) 
; compilenode returning %string54 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj51, %object* %string54, i32 1) 
  call void @addmethod(%object* %obj51, i8* getelementptr([6 x i8]* @.str.methname55, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_55)) 
  call void @addmethod(%object* %obj51, i8* getelementptr([8 x i8]* @.str.methnamew55, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_55)) 
; compilenode returning %obj51 
  ret %object* %obj51 
} 
;;;; ENDS 
define %object* @reader_type_59(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_59(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_61(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_61(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: dottok 
define %object* @meth_dottok56(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj57 = call %object* @alloc_obj() 
  %str58 = getelementptr [4 x i8]* @.str61, i32 0, i32 0 
  %string58 = call %object* @alloc_String(i8* %str58) 
; compilenode returning %string58 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj57, %object* %string58, i32 0) 
  call void @addmethod(%object* %obj57, i8* getelementptr([5 x i8]* @.str.methname59, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_59)) 
  call void @addmethod(%object* %obj57, i8* getelementptr([7 x i8]* @.str.methnamew59, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_59)) 
  %str60 = getelementptr [2 x i8]* @.str64, i32 0, i32 0 
  %string60 = call %object* @alloc_String(i8* %str60) 
; compilenode returning %string60 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj57, %object* %string60, i32 1) 
  call void @addmethod(%object* %obj57, i8* getelementptr([6 x i8]* @.str.methname61, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_61)) 
  call void @addmethod(%object* %obj57, i8* getelementptr([8 x i8]* @.str.methnamew61, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_61)) 
; compilenode returning %obj57 
  ret %object* %obj57 
} 
;;;; ENDS 
define %object* @reader_type_65(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_65(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_67(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_67(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: numtok 
define %object* @meth_numtok62(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_v = getelementptr %object** %args, i32 0 
  %obj63 = call %object* @alloc_obj() 
  %str64 = getelementptr [4 x i8]* @.str68, i32 0, i32 0 
  %string64 = call %object* @alloc_String(i8* %str64) 
; compilenode returning %string64 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj63, %object* %string64, i32 0) 
  call void @addmethod(%object* %obj63, i8* getelementptr([5 x i8]* @.str.methname65, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_65)) 
  call void @addmethod(%object* %obj63, i8* getelementptr([7 x i8]* @.str.methnamew65, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_65)) 
  %var_val_v66 = load %object** %var_v 
; compilenode returning %var_val_v66 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj63, %object* %var_val_v66, i32 1) 
  call void @addmethod(%object* %obj63, i8* getelementptr([6 x i8]* @.str.methname67, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_67)) 
  call void @addmethod(%object* %obj63, i8* getelementptr([8 x i8]* @.str.methnamew67, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_67)) 
; compilenode returning %obj63 
  ret %object* %obj63 
} 
;;;; ENDS 
define %object* @reader_type_71(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_71(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_73(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_73(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: keywordtok 
define %object* @meth_keywordtok68(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_v = getelementptr %object** %args, i32 0 
  %obj69 = call %object* @alloc_obj() 
  %str70 = getelementptr [8 x i8]* @.str74, i32 0, i32 0 
  %string70 = call %object* @alloc_String(i8* %str70) 
; compilenode returning %string70 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj69, %object* %string70, i32 0) 
  call void @addmethod(%object* %obj69, i8* getelementptr([5 x i8]* @.str.methname71, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_71)) 
  call void @addmethod(%object* %obj69, i8* getelementptr([7 x i8]* @.str.methnamew71, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_71)) 
  %var_val_v72 = load %object** %var_v 
; compilenode returning %var_val_v72 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj69, %object* %var_val_v72, i32 1) 
  call void @addmethod(%object* %obj69, i8* getelementptr([6 x i8]* @.str.methname73, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_73)) 
  call void @addmethod(%object* %obj69, i8* getelementptr([8 x i8]* @.str.methnamew73, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_73)) 
; compilenode returning %obj69 
  ret %object* %obj69 
} 
;;;; ENDS 
define %object* @reader_type_77(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_77(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_79(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_79(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: optok 
define %object* @meth_optok74(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_v = getelementptr %object** %args, i32 0 
  %obj75 = call %object* @alloc_obj() 
  %str76 = getelementptr [3 x i8]* @.str80, i32 0, i32 0 
  %string76 = call %object* @alloc_String(i8* %str76) 
; compilenode returning %string76 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj75, %object* %string76, i32 0) 
  call void @addmethod(%object* %obj75, i8* getelementptr([5 x i8]* @.str.methname77, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_77)) 
  call void @addmethod(%object* %obj75, i8* getelementptr([7 x i8]* @.str.methnamew77, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_77)) 
  %var_val_v78 = load %object** %var_v 
; compilenode returning %var_val_v78 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj75, %object* %var_val_v78, i32 1) 
  call void @addmethod(%object* %obj75, i8* getelementptr([6 x i8]* @.str.methname79, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_79)) 
  call void @addmethod(%object* %obj75, i8* getelementptr([8 x i8]* @.str.methnamew79, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_79)) 
; compilenode returning %obj75 
  ret %object* %obj75 
} 
;;;; ENDS 
define %object* @reader_type_83(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_83(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_85(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_85(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: arrowtok 
define %object* @meth_arrowtok80(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj81 = call %object* @alloc_obj() 
  %str82 = getelementptr [6 x i8]* @.str86, i32 0, i32 0 
  %string82 = call %object* @alloc_String(i8* %str82) 
; compilenode returning %string82 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj81, %object* %string82, i32 0) 
  call void @addmethod(%object* %obj81, i8* getelementptr([5 x i8]* @.str.methname83, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_83)) 
  call void @addmethod(%object* %obj81, i8* getelementptr([7 x i8]* @.str.methnamew83, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_83)) 
  %str84 = getelementptr [3 x i8]* @.str89, i32 0, i32 0 
  %string84 = call %object* @alloc_String(i8* %str84) 
; compilenode returning %string84 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj81, %object* %string84, i32 1) 
  call void @addmethod(%object* %obj81, i8* getelementptr([6 x i8]* @.str.methname85, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_85)) 
  call void @addmethod(%object* %obj81, i8* getelementptr([8 x i8]* @.str.methnamew85, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_85)) 
; compilenode returning %obj81 
  ret %object* %obj81 
} 
;;;; ENDS 
define %object* @reader_type_89(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_89(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_91(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_91(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: bindtok 
define %object* @meth_bindtok86(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %obj87 = call %object* @alloc_obj() 
  %str88 = getelementptr [5 x i8]* @.str93, i32 0, i32 0 
  %string88 = call %object* @alloc_String(i8* %str88) 
; compilenode returning %string88 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj87, %object* %string88, i32 0) 
  call void @addmethod(%object* %obj87, i8* getelementptr([5 x i8]* @.str.methname89, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_89)) 
  call void @addmethod(%object* %obj87, i8* getelementptr([7 x i8]* @.str.methnamew89, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_89)) 
  %str90 = getelementptr [3 x i8]* @.str96, i32 0, i32 0 
  %string90 = call %object* @alloc_String(i8* %str90) 
; compilenode returning %string90 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj87, %object* %string90, i32 1) 
  call void @addmethod(%object* %obj87, i8* getelementptr([6 x i8]* @.str.methname91, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_91)) 
  call void @addmethod(%object* %obj87, i8* getelementptr([8 x i8]* @.str.methnamew91, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_91)) 
; compilenode returning %obj87 
  ret %object* %obj87 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_tokens141 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens152 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens163 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens173 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens183 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens193 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens203 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens213 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens223 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens233 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens243 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens254 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens277 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: modechange 
define %object* @meth_modechange92(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_tokens = getelementptr %object** %args, i32 0 
  %var_mode = getelementptr %object** %args, i32 1 
  %var_accum = getelementptr %object** %args, i32 2 
  %bool93 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool93 
  %var_done = call %object** @alloc_var() 
  %var_done_dec = getelementptr %object* %bool93, i32 0 
  store %object* %var_done_dec, %object** %var_done 
; compilenode returning  
  %num94 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num94 
  %var_tok = call %object** @alloc_var() 
  %var_tok_dec = getelementptr %object* %num94, i32 0 
  store %object* %var_tok_dec, %object** %var_tok 
; compilenode returning  
  br label %BeginIf95 
BeginIf95: 
  %var_val_mode96 = load %object** %var_mode 
; compilenode returning %var_val_mode96 
  %str97 = getelementptr [2 x i8]* @.str100, i32 0, i32 0 
  %string97 = call %object* @alloc_String(i8* %str97) 
; compilenode returning %string97 
  store %object* %string97, %object** %params_0 
  %opresult99 = call %object* @callmethod(%object* %var_val_mode96, i8* getelementptr([3 x i8]* @.str101,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult99 
  %var_val_accum100 = load %object** %var_accum 
; compilenode returning %var_val_accum100 
  %call101 = call %object* @gracelib_length(%object* %var_val_accum100) 
; compilenode returning %call101 
  %num102 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num102 
  store %object* %num102, %object** %params_0 
  %opresult104 = call %object* @callmethod(%object* %call101, i8* getelementptr([2 x i8]* @.str102,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult104 
  store %object* %opresult104, %object** %params_0 
  %opresult106 = call %object* @callmethod(%object* %opresult99, i8* getelementptr([2 x i8]* @.str103,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult106 
  %cond95_valp = call i1 @istrue(%object* %opresult106) 
  %cond95 = icmp eq i1 0, %cond95_valp 
br i1 %cond95, label %EndIf95, label %TrueBranch95 
TrueBranch95: 
  br label %BeginIf107 
BeginIf107: 
  %var_val_mode108 = load %object** %var_mode 
; compilenode returning %var_val_mode108 
  %str109 = getelementptr [2 x i8]* @.str104, i32 0, i32 0 
  %string109 = call %object* @alloc_String(i8* %str109) 
; compilenode returning %string109 
  store %object* %string109, %object** %params_0 
  %opresult111 = call %object* @callmethod(%object* %var_val_mode108, i8* getelementptr([3 x i8]* @.str105,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult111 
  %cond107_valp = call i1 @istrue(%object* %opresult111) 
  %cond107 = icmp eq i1 0, %cond107_valp 
br i1 %cond107, label %EndIf107, label %TrueBranch107 
TrueBranch107: 
  %var_val_accum112 = load %object** %var_accum 
; compilenode returning %var_val_accum112 
  store %object* %var_val_accum112, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call113 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str106,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call113 
; compilenode returning %call113 
  store %object* %call113, %object** %var_tok 
; compilenode returning %call113 
  br label %BeginIf114 
BeginIf114: 
  %var_val_accum115 = load %object** %var_accum 
; compilenode returning %var_val_accum115 
  %str116 = getelementptr [7 x i8]* @.str107, i32 0, i32 0 
  %string116 = call %object* @alloc_String(i8* %str116) 
; compilenode returning %string116 
  store %object* %string116, %object** %params_0 
  %opresult118 = call %object* @callmethod(%object* %var_val_accum115, i8* getelementptr([3 x i8]* @.str108,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult118 
  %var_val_accum119 = load %object** %var_accum 
; compilenode returning %var_val_accum119 
  %str120 = getelementptr [7 x i8]* @.str109, i32 0, i32 0 
  %string120 = call %object* @alloc_String(i8* %str120) 
; compilenode returning %string120 
  store %object* %string120, %object** %params_0 
  %opresult122 = call %object* @callmethod(%object* %var_val_accum119, i8* getelementptr([3 x i8]* @.str110,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult122 
  %var_val_accum123 = load %object** %var_accum 
; compilenode returning %var_val_accum123 
  %str124 = getelementptr [4 x i8]* @.str111, i32 0, i32 0 
  %string124 = call %object* @alloc_String(i8* %str124) 
; compilenode returning %string124 
  store %object* %string124, %object** %params_0 
  %opresult126 = call %object* @callmethod(%object* %var_val_accum123, i8* getelementptr([3 x i8]* @.str112,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult126 
  store %object* %opresult126, %object** %params_0 
  %opresult128 = call %object* @callmethod(%object* %opresult122, i8* getelementptr([2 x i8]* @.str113,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult128 
  store %object* %opresult128, %object** %params_0 
  %opresult130 = call %object* @callmethod(%object* %opresult118, i8* getelementptr([2 x i8]* @.str114,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult130 
  %cond114_valp = call i1 @istrue(%object* %opresult130) 
  %cond114 = icmp eq i1 0, %cond114_valp 
br i1 %cond114, label %EndIf114, label %TrueBranch114 
TrueBranch114: 
  %var_val_accum131 = load %object** %var_accum 
; compilenode returning %var_val_accum131 
  store %object* %var_val_accum131, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call132 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str115,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call132 
; compilenode returning %call132 
  store %object* %call132, %object** %var_tok 
; compilenode returning %call132 
  br label %EndIf114 
EndIf114: 
  %if114 = phi %object* [ %call132, %TrueBranch114], [%opresult130, %BeginIf114] 
; compilenode returning %if114 
  br label %BeginIf133 
BeginIf133: 
  %var_val_accum134 = load %object** %var_accum 
; compilenode returning %var_val_accum134 
  %str135 = getelementptr [4 x i8]* @.str116, i32 0, i32 0 
  %string135 = call %object* @alloc_String(i8* %str135) 
; compilenode returning %string135 
  store %object* %string135, %object** %params_0 
  %opresult137 = call %object* @callmethod(%object* %var_val_accum134, i8* getelementptr([3 x i8]* @.str117,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult137 
  %cond133_valp = call i1 @istrue(%object* %opresult137) 
  %cond133 = icmp eq i1 0, %cond133_valp 
br i1 %cond133, label %EndIf133, label %TrueBranch133 
TrueBranch133: 
  %str138 = getelementptr [2 x i8]* @.str118, i32 0, i32 0 
  %string138 = call %object* @alloc_String(i8* %str138) 
; compilenode returning %string138 
  store %object* %string138, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call139 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str119,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call139 
; compilenode returning %call139 
  store %object* %call139, %object** %var_tok 
; compilenode returning %call139 
  br label %EndIf133 
EndIf133: 
  %if133 = phi %object* [ %call139, %TrueBranch133], [%opresult137, %BeginIf133] 
; compilenode returning %if133 
  %var_val_tok140 = load %object** %var_tok 
; compilenode returning %var_val_tok140 
  store %object* %var_val_tok140, %object** %params_0 
  %var_val_tokens141 = load %object** %var_tokens 
; compilenode returning %var_val_tokens141 
  %call142 = call %object* @callmethod(%object* %var_val_tokens141, i8* getelementptr([5 x i8]* @.str120,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call142 
; compilenode returning %call142 
  %num143 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num143 
  store %object* %num143, %object** %var_done 
; compilenode returning %num143 
  br label %EndIf107 
EndIf107: 
  %if107 = phi %object* [ %num143, %EndIf133], [%opresult111, %BeginIf107] 
; compilenode returning %if107 
  br label %BeginIf144 
BeginIf144: 
  %var_val_mode145 = load %object** %var_mode 
; compilenode returning %var_val_mode145 
  %str146 = getelementptr [2 x i8]* @.str121, i32 0, i32 0 
  %string146 = call %object* @alloc_String(i8* %str146) 
; compilenode returning %string146 
  store %object* %string146, %object** %params_0 
  %opresult148 = call %object* @callmethod(%object* %var_val_mode145, i8* getelementptr([3 x i8]* @.str122,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult148 
  %cond144_valp = call i1 @istrue(%object* %opresult148) 
  %cond144 = icmp eq i1 0, %cond144_valp 
br i1 %cond144, label %EndIf144, label %TrueBranch144 
TrueBranch144: 
  %var_val_accum149 = load %object** %var_accum 
; compilenode returning %var_val_accum149 
  store %object* %var_val_accum149, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call150 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str123,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call150 
; compilenode returning %call150 
  store %object* %call150, %object** %var_tok 
; compilenode returning %call150 
  %var_val_tok151 = load %object** %var_tok 
; compilenode returning %var_val_tok151 
  store %object* %var_val_tok151, %object** %params_0 
  %var_val_tokens152 = load %object** %var_tokens 
; compilenode returning %var_val_tokens152 
  %call153 = call %object* @callmethod(%object* %var_val_tokens152, i8* getelementptr([5 x i8]* @.str124,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call153 
; compilenode returning %call153 
  %num154 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num154 
  store %object* %num154, %object** %var_done 
; compilenode returning %num154 
  br label %EndIf144 
EndIf144: 
  %if144 = phi %object* [ %num154, %TrueBranch144], [%opresult148, %BeginIf144] 
; compilenode returning %if144 
  br label %BeginIf155 
BeginIf155: 
  %var_val_mode156 = load %object** %var_mode 
; compilenode returning %var_val_mode156 
  %str157 = getelementptr [2 x i8]* @.str125, i32 0, i32 0 
  %string157 = call %object* @alloc_String(i8* %str157) 
; compilenode returning %string157 
  store %object* %string157, %object** %params_0 
  %opresult159 = call %object* @callmethod(%object* %var_val_mode156, i8* getelementptr([3 x i8]* @.str126,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult159 
  %cond155_valp = call i1 @istrue(%object* %opresult159) 
  %cond155 = icmp eq i1 0, %cond155_valp 
br i1 %cond155, label %EndIf155, label %TrueBranch155 
TrueBranch155: 
  %var_val_accum160 = load %object** %var_accum 
; compilenode returning %var_val_accum160 
  store %object* %var_val_accum160, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call161 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str127,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call161 
; compilenode returning %call161 
  store %object* %call161, %object** %var_tok 
; compilenode returning %call161 
  %var_val_tok162 = load %object** %var_tok 
; compilenode returning %var_val_tok162 
  store %object* %var_val_tok162, %object** %params_0 
  %var_val_tokens163 = load %object** %var_tokens 
; compilenode returning %var_val_tokens163 
  %call164 = call %object* @callmethod(%object* %var_val_tokens163, i8* getelementptr([5 x i8]* @.str128,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call164 
; compilenode returning %call164 
  %num165 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num165 
  store %object* %num165, %object** %var_done 
; compilenode returning %num165 
  br label %EndIf155 
EndIf155: 
  %if155 = phi %object* [ %num165, %TrueBranch155], [%opresult159, %BeginIf155] 
; compilenode returning %if155 
  br label %BeginIf166 
BeginIf166: 
  %var_val_mode167 = load %object** %var_mode 
; compilenode returning %var_val_mode167 
  %str168 = getelementptr [2 x i8]* @.str129, i32 0, i32 0 
  %string168 = call %object* @alloc_String(i8* %str168) 
; compilenode returning %string168 
  store %object* %string168, %object** %params_0 
  %opresult170 = call %object* @callmethod(%object* %var_val_mode167, i8* getelementptr([3 x i8]* @.str130,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult170 
  %cond166_valp = call i1 @istrue(%object* %opresult170) 
  %cond166 = icmp eq i1 0, %cond166_valp 
br i1 %cond166, label %EndIf166, label %TrueBranch166 
TrueBranch166: 
; WARNING: non-member calls not fully supported yet 
  %call171 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str131,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call171 
; compilenode returning %call171 
  store %object* %call171, %object** %var_tok 
; compilenode returning %call171 
  %var_val_tok172 = load %object** %var_tok 
; compilenode returning %var_val_tok172 
  store %object* %var_val_tok172, %object** %params_0 
  %var_val_tokens173 = load %object** %var_tokens 
; compilenode returning %var_val_tokens173 
  %call174 = call %object* @callmethod(%object* %var_val_tokens173, i8* getelementptr([5 x i8]* @.str132,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call174 
; compilenode returning %call174 
  %num175 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num175 
  store %object* %num175, %object** %var_done 
; compilenode returning %num175 
  br label %EndIf166 
EndIf166: 
  %if166 = phi %object* [ %num175, %TrueBranch166], [%opresult170, %BeginIf166] 
; compilenode returning %if166 
  br label %BeginIf176 
BeginIf176: 
  %var_val_mode177 = load %object** %var_mode 
; compilenode returning %var_val_mode177 
  %str178 = getelementptr [2 x i8]* @.str133, i32 0, i32 0 
  %string178 = call %object* @alloc_String(i8* %str178) 
; compilenode returning %string178 
  store %object* %string178, %object** %params_0 
  %opresult180 = call %object* @callmethod(%object* %var_val_mode177, i8* getelementptr([3 x i8]* @.str134,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult180 
  %cond176_valp = call i1 @istrue(%object* %opresult180) 
  %cond176 = icmp eq i1 0, %cond176_valp 
br i1 %cond176, label %EndIf176, label %TrueBranch176 
TrueBranch176: 
; WARNING: non-member calls not fully supported yet 
  %call181 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str135,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call181 
; compilenode returning %call181 
  store %object* %call181, %object** %var_tok 
; compilenode returning %call181 
  %var_val_tok182 = load %object** %var_tok 
; compilenode returning %var_val_tok182 
  store %object* %var_val_tok182, %object** %params_0 
  %var_val_tokens183 = load %object** %var_tokens 
; compilenode returning %var_val_tokens183 
  %call184 = call %object* @callmethod(%object* %var_val_tokens183, i8* getelementptr([5 x i8]* @.str136,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call184 
; compilenode returning %call184 
  %num185 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num185 
  store %object* %num185, %object** %var_done 
; compilenode returning %num185 
  br label %EndIf176 
EndIf176: 
  %if176 = phi %object* [ %num185, %TrueBranch176], [%opresult180, %BeginIf176] 
; compilenode returning %if176 
  br label %BeginIf186 
BeginIf186: 
  %var_val_mode187 = load %object** %var_mode 
; compilenode returning %var_val_mode187 
  %str188 = getelementptr [2 x i8]* @.str137, i32 0, i32 0 
  %string188 = call %object* @alloc_String(i8* %str188) 
; compilenode returning %string188 
  store %object* %string188, %object** %params_0 
  %opresult190 = call %object* @callmethod(%object* %var_val_mode187, i8* getelementptr([3 x i8]* @.str138,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult190 
  %cond186_valp = call i1 @istrue(%object* %opresult190) 
  %cond186 = icmp eq i1 0, %cond186_valp 
br i1 %cond186, label %EndIf186, label %TrueBranch186 
TrueBranch186: 
; WARNING: non-member calls not fully supported yet 
  %call191 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str139,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call191 
; compilenode returning %call191 
  store %object* %call191, %object** %var_tok 
; compilenode returning %call191 
  %var_val_tok192 = load %object** %var_tok 
; compilenode returning %var_val_tok192 
  store %object* %var_val_tok192, %object** %params_0 
  %var_val_tokens193 = load %object** %var_tokens 
; compilenode returning %var_val_tokens193 
  %call194 = call %object* @callmethod(%object* %var_val_tokens193, i8* getelementptr([5 x i8]* @.str140,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call194 
; compilenode returning %call194 
  %num195 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num195 
  store %object* %num195, %object** %var_done 
; compilenode returning %num195 
  br label %EndIf186 
EndIf186: 
  %if186 = phi %object* [ %num195, %TrueBranch186], [%opresult190, %BeginIf186] 
; compilenode returning %if186 
  br label %BeginIf196 
BeginIf196: 
  %var_val_mode197 = load %object** %var_mode 
; compilenode returning %var_val_mode197 
  %str198 = getelementptr [2 x i8]* @.str141, i32 0, i32 0 
  %string198 = call %object* @alloc_String(i8* %str198) 
; compilenode returning %string198 
  store %object* %string198, %object** %params_0 
  %opresult200 = call %object* @callmethod(%object* %var_val_mode197, i8* getelementptr([3 x i8]* @.str142,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult200 
  %cond196_valp = call i1 @istrue(%object* %opresult200) 
  %cond196 = icmp eq i1 0, %cond196_valp 
br i1 %cond196, label %EndIf196, label %TrueBranch196 
TrueBranch196: 
; WARNING: non-member calls not fully supported yet 
  %call201 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str143,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call201 
; compilenode returning %call201 
  store %object* %call201, %object** %var_tok 
; compilenode returning %call201 
  %var_val_tok202 = load %object** %var_tok 
; compilenode returning %var_val_tok202 
  store %object* %var_val_tok202, %object** %params_0 
  %var_val_tokens203 = load %object** %var_tokens 
; compilenode returning %var_val_tokens203 
  %call204 = call %object* @callmethod(%object* %var_val_tokens203, i8* getelementptr([5 x i8]* @.str144,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call204 
; compilenode returning %call204 
  %num205 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num205 
  store %object* %num205, %object** %var_done 
; compilenode returning %num205 
  br label %EndIf196 
EndIf196: 
  %if196 = phi %object* [ %num205, %TrueBranch196], [%opresult200, %BeginIf196] 
; compilenode returning %if196 
  br label %BeginIf206 
BeginIf206: 
  %var_val_mode207 = load %object** %var_mode 
; compilenode returning %var_val_mode207 
  %str208 = getelementptr [2 x i8]* @.str145, i32 0, i32 0 
  %string208 = call %object* @alloc_String(i8* %str208) 
; compilenode returning %string208 
  store %object* %string208, %object** %params_0 
  %opresult210 = call %object* @callmethod(%object* %var_val_mode207, i8* getelementptr([3 x i8]* @.str146,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult210 
  %cond206_valp = call i1 @istrue(%object* %opresult210) 
  %cond206 = icmp eq i1 0, %cond206_valp 
br i1 %cond206, label %EndIf206, label %TrueBranch206 
TrueBranch206: 
; WARNING: non-member calls not fully supported yet 
  %call211 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str147,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call211 
; compilenode returning %call211 
  store %object* %call211, %object** %var_tok 
; compilenode returning %call211 
  %var_val_tok212 = load %object** %var_tok 
; compilenode returning %var_val_tok212 
  store %object* %var_val_tok212, %object** %params_0 
  %var_val_tokens213 = load %object** %var_tokens 
; compilenode returning %var_val_tokens213 
  %call214 = call %object* @callmethod(%object* %var_val_tokens213, i8* getelementptr([5 x i8]* @.str148,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call214 
; compilenode returning %call214 
  %num215 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num215 
  store %object* %num215, %object** %var_done 
; compilenode returning %num215 
  br label %EndIf206 
EndIf206: 
  %if206 = phi %object* [ %num215, %TrueBranch206], [%opresult210, %BeginIf206] 
; compilenode returning %if206 
  br label %BeginIf216 
BeginIf216: 
  %var_val_mode217 = load %object** %var_mode 
; compilenode returning %var_val_mode217 
  %str218 = getelementptr [2 x i8]* @.str149, i32 0, i32 0 
  %string218 = call %object* @alloc_String(i8* %str218) 
; compilenode returning %string218 
  store %object* %string218, %object** %params_0 
  %opresult220 = call %object* @callmethod(%object* %var_val_mode217, i8* getelementptr([3 x i8]* @.str150,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult220 
  %cond216_valp = call i1 @istrue(%object* %opresult220) 
  %cond216 = icmp eq i1 0, %cond216_valp 
br i1 %cond216, label %EndIf216, label %TrueBranch216 
TrueBranch216: 
; WARNING: non-member calls not fully supported yet 
  %call221 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str151,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call221 
; compilenode returning %call221 
  store %object* %call221, %object** %var_tok 
; compilenode returning %call221 
  %var_val_tok222 = load %object** %var_tok 
; compilenode returning %var_val_tok222 
  store %object* %var_val_tok222, %object** %params_0 
  %var_val_tokens223 = load %object** %var_tokens 
; compilenode returning %var_val_tokens223 
  %call224 = call %object* @callmethod(%object* %var_val_tokens223, i8* getelementptr([5 x i8]* @.str152,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call224 
; compilenode returning %call224 
  %num225 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num225 
  store %object* %num225, %object** %var_done 
; compilenode returning %num225 
  br label %EndIf216 
EndIf216: 
  %if216 = phi %object* [ %num225, %TrueBranch216], [%opresult220, %BeginIf216] 
; compilenode returning %if216 
  br label %BeginIf226 
BeginIf226: 
  %var_val_mode227 = load %object** %var_mode 
; compilenode returning %var_val_mode227 
  %str228 = getelementptr [2 x i8]* @.str153, i32 0, i32 0 
  %string228 = call %object* @alloc_String(i8* %str228) 
; compilenode returning %string228 
  store %object* %string228, %object** %params_0 
  %opresult230 = call %object* @callmethod(%object* %var_val_mode227, i8* getelementptr([3 x i8]* @.str154,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult230 
  %cond226_valp = call i1 @istrue(%object* %opresult230) 
  %cond226 = icmp eq i1 0, %cond226_valp 
br i1 %cond226, label %EndIf226, label %TrueBranch226 
TrueBranch226: 
; WARNING: non-member calls not fully supported yet 
  %call231 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str155,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call231 
; compilenode returning %call231 
  store %object* %call231, %object** %var_tok 
; compilenode returning %call231 
  %var_val_tok232 = load %object** %var_tok 
; compilenode returning %var_val_tok232 
  store %object* %var_val_tok232, %object** %params_0 
  %var_val_tokens233 = load %object** %var_tokens 
; compilenode returning %var_val_tokens233 
  %call234 = call %object* @callmethod(%object* %var_val_tokens233, i8* getelementptr([5 x i8]* @.str156,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call234 
; compilenode returning %call234 
  %num235 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num235 
  store %object* %num235, %object** %var_done 
; compilenode returning %num235 
  br label %EndIf226 
EndIf226: 
  %if226 = phi %object* [ %num235, %TrueBranch226], [%opresult230, %BeginIf226] 
; compilenode returning %if226 
  br label %BeginIf236 
BeginIf236: 
  %var_val_mode237 = load %object** %var_mode 
; compilenode returning %var_val_mode237 
  %str238 = getelementptr [2 x i8]* @.str157, i32 0, i32 0 
  %string238 = call %object* @alloc_String(i8* %str238) 
; compilenode returning %string238 
  store %object* %string238, %object** %params_0 
  %opresult240 = call %object* @callmethod(%object* %var_val_mode237, i8* getelementptr([3 x i8]* @.str158,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult240 
  %cond236_valp = call i1 @istrue(%object* %opresult240) 
  %cond236 = icmp eq i1 0, %cond236_valp 
br i1 %cond236, label %EndIf236, label %TrueBranch236 
TrueBranch236: 
; WARNING: non-member calls not fully supported yet 
  %call241 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str159,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call241 
; compilenode returning %call241 
  store %object* %call241, %object** %var_tok 
; compilenode returning %call241 
  %var_val_tok242 = load %object** %var_tok 
; compilenode returning %var_val_tok242 
  store %object* %var_val_tok242, %object** %params_0 
  %var_val_tokens243 = load %object** %var_tokens 
; compilenode returning %var_val_tokens243 
  %call244 = call %object* @callmethod(%object* %var_val_tokens243, i8* getelementptr([5 x i8]* @.str160,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call244 
; compilenode returning %call244 
  %num245 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num245 
  store %object* %num245, %object** %var_done 
; compilenode returning %num245 
  br label %EndIf236 
EndIf236: 
  %if236 = phi %object* [ %num245, %TrueBranch236], [%opresult240, %BeginIf236] 
; compilenode returning %if236 
  br label %BeginIf246 
BeginIf246: 
  %var_val_mode247 = load %object** %var_mode 
; compilenode returning %var_val_mode247 
  %str248 = getelementptr [2 x i8]* @.str161, i32 0, i32 0 
  %string248 = call %object* @alloc_String(i8* %str248) 
; compilenode returning %string248 
  store %object* %string248, %object** %params_0 
  %opresult250 = call %object* @callmethod(%object* %var_val_mode247, i8* getelementptr([3 x i8]* @.str162,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult250 
  %cond246_valp = call i1 @istrue(%object* %opresult250) 
  %cond246 = icmp eq i1 0, %cond246_valp 
br i1 %cond246, label %EndIf246, label %TrueBranch246 
TrueBranch246: 
  %var_val_accum251 = load %object** %var_accum 
; compilenode returning %var_val_accum251 
  store %object* %var_val_accum251, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call252 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str163,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call252 
; compilenode returning %call252 
  store %object* %call252, %object** %var_tok 
; compilenode returning %call252 
  %var_val_tok253 = load %object** %var_tok 
; compilenode returning %var_val_tok253 
  store %object* %var_val_tok253, %object** %params_0 
  %var_val_tokens254 = load %object** %var_tokens 
; compilenode returning %var_val_tokens254 
  %call255 = call %object* @callmethod(%object* %var_val_tokens254, i8* getelementptr([5 x i8]* @.str164,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call255 
; compilenode returning %call255 
  %num256 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num256 
  store %object* %num256, %object** %var_done 
; compilenode returning %num256 
  br label %EndIf246 
EndIf246: 
  %if246 = phi %object* [ %num256, %TrueBranch246], [%opresult250, %BeginIf246] 
; compilenode returning %if246 
  br label %BeginIf257 
BeginIf257: 
  %var_val_mode258 = load %object** %var_mode 
; compilenode returning %var_val_mode258 
  %str259 = getelementptr [2 x i8]* @.str165, i32 0, i32 0 
  %string259 = call %object* @alloc_String(i8* %str259) 
; compilenode returning %string259 
  store %object* %string259, %object** %params_0 
  %opresult261 = call %object* @callmethod(%object* %var_val_mode258, i8* getelementptr([3 x i8]* @.str166,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult261 
  %cond257_valp = call i1 @istrue(%object* %opresult261) 
  %cond257 = icmp eq i1 0, %cond257_valp 
br i1 %cond257, label %EndIf257, label %TrueBranch257 
TrueBranch257: 
  %var_val_accum262 = load %object** %var_accum 
; compilenode returning %var_val_accum262 
  store %object* %var_val_accum262, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call263 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str167,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call263 
; compilenode returning %call263 
  store %object* %call263, %object** %var_tok 
; compilenode returning %call263 
  br label %BeginIf264 
BeginIf264: 
  %var_val_accum265 = load %object** %var_accum 
; compilenode returning %var_val_accum265 
  %str266 = getelementptr [3 x i8]* @.str168, i32 0, i32 0 
  %string266 = call %object* @alloc_String(i8* %str266) 
; compilenode returning %string266 
  store %object* %string266, %object** %params_0 
  %opresult268 = call %object* @callmethod(%object* %var_val_accum265, i8* getelementptr([3 x i8]* @.str169,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult268 
  %cond264_valp = call i1 @istrue(%object* %opresult268) 
  %cond264 = icmp eq i1 0, %cond264_valp 
br i1 %cond264, label %EndIf264, label %TrueBranch264 
TrueBranch264: 
; WARNING: non-member calls not fully supported yet 
  %call269 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str170,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call269 
; compilenode returning %call269 
  store %object* %call269, %object** %var_tok 
; compilenode returning %call269 
  br label %EndIf264 
EndIf264: 
  %if264 = phi %object* [ %call269, %TrueBranch264], [%opresult268, %BeginIf264] 
; compilenode returning %if264 
  br label %BeginIf270 
BeginIf270: 
  %var_val_accum271 = load %object** %var_accum 
; compilenode returning %var_val_accum271 
  %str272 = getelementptr [3 x i8]* @.str171, i32 0, i32 0 
  %string272 = call %object* @alloc_String(i8* %str272) 
; compilenode returning %string272 
  store %object* %string272, %object** %params_0 
  %opresult274 = call %object* @callmethod(%object* %var_val_accum271, i8* getelementptr([3 x i8]* @.str172,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult274 
  %cond270_valp = call i1 @istrue(%object* %opresult274) 
  %cond270 = icmp eq i1 0, %cond270_valp 
br i1 %cond270, label %EndIf270, label %TrueBranch270 
TrueBranch270: 
; WARNING: non-member calls not fully supported yet 
  %call275 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str173,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call275 
; compilenode returning %call275 
  store %object* %call275, %object** %var_tok 
; compilenode returning %call275 
  br label %EndIf270 
EndIf270: 
  %if270 = phi %object* [ %call275, %TrueBranch270], [%opresult274, %BeginIf270] 
; compilenode returning %if270 
  %var_val_tok276 = load %object** %var_tok 
; compilenode returning %var_val_tok276 
  store %object* %var_val_tok276, %object** %params_0 
  %var_val_tokens277 = load %object** %var_tokens 
; compilenode returning %var_val_tokens277 
  %call278 = call %object* @callmethod(%object* %var_val_tokens277, i8* getelementptr([5 x i8]* @.str174,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call278 
; compilenode returning %call278 
  %num279 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num279 
  store %object* %num279, %object** %var_done 
; compilenode returning %num279 
  br label %EndIf257 
EndIf257: 
  %if257 = phi %object* [ %num279, %EndIf270], [%opresult261, %BeginIf257] 
; compilenode returning %if257 
  br label %BeginIf280 
BeginIf280: 
  %var_val_mode281 = load %object** %var_mode 
; compilenode returning %var_val_mode281 
  %str282 = getelementptr [2 x i8]* @.str175, i32 0, i32 0 
  %string282 = call %object* @alloc_String(i8* %str282) 
; compilenode returning %string282 
  store %object* %string282, %object** %params_0 
  %opresult284 = call %object* @callmethod(%object* %var_val_mode281, i8* getelementptr([3 x i8]* @.str176,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult284 
  %cond280_valp = call i1 @istrue(%object* %opresult284) 
  %cond280 = icmp eq i1 0, %cond280_valp 
br i1 %cond280, label %EndIf280, label %TrueBranch280 
TrueBranch280: 
  %num285 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num285 
  store %object* %num285, %object** %var_done 
; compilenode returning %num285 
  br label %EndIf280 
EndIf280: 
  %if280 = phi %object* [ %num285, %TrueBranch280], [%opresult284, %BeginIf280] 
; compilenode returning %if280 
  br label %BeginIf286 
BeginIf286: 
  %var_val_mode287 = load %object** %var_mode 
; compilenode returning %var_val_mode287 
  %str288 = getelementptr [2 x i8]* @.str177, i32 0, i32 0 
  %string288 = call %object* @alloc_String(i8* %str288) 
; compilenode returning %string288 
  store %object* %string288, %object** %params_0 
  %opresult290 = call %object* @callmethod(%object* %var_val_mode287, i8* getelementptr([3 x i8]* @.str178,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult290 
  %cond286_valp = call i1 @istrue(%object* %opresult290) 
  %cond286 = icmp eq i1 0, %cond286_valp 
br i1 %cond286, label %EndIf286, label %TrueBranch286 
TrueBranch286: 
  %num291 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num291 
  store %object* %num291, %object** %var_done 
; compilenode returning %num291 
  br label %EndIf286 
EndIf286: 
  %if286 = phi %object* [ %num291, %TrueBranch286], [%opresult290, %BeginIf286] 
; compilenode returning %if286 
  br label %BeginIf292 
BeginIf292: 
  %var_val_done293 = load %object** %var_done 
; compilenode returning %var_val_done293 
  %cond292_valp = call i1 @istrue(%object* %var_val_done293) 
  %cond292 = icmp eq i1 0, %cond292_valp 
br i1 %cond292, label %FalseBranch292, label %TrueBranch292 
TrueBranch292: 
  br label %EndIf292 
FalseBranch292: 
  %str294 = getelementptr [31 x i8]* @.str179, i32 0, i32 0 
  %string294 = call %object* @alloc_String(i8* %str294) 
; compilenode returning %string294 
  %var_val_mode295 = load %object** %var_mode 
; compilenode returning %var_val_mode295 
  %str296 = getelementptr [11 x i8]* @.str180, i32 0, i32 0 
  %string296 = call %object* @alloc_String(i8* %str296) 
; compilenode returning %string296 
  %var_val_accum297 = load %object** %var_accum 
; compilenode returning %var_val_accum297 
  store %object* %string294, %object** %params_0 
  store %object* %var_val_mode295, %object** %params_1 
  store %object* %string296, %object** %params_2 
  store %object* %var_val_accum297, %object** %params_3 
  %call298 = call %object* @gracelib_print(%object* null, i32 4, %object** %params) 
; compilenode returning %call298 
  br label %EndIf292 
EndIf292: 
  %if292 = phi %object* [ null, %TrueBranch292], [%call298, %FalseBranch292] 
; compilenode returning %if292 
  br label %EndIf95 
EndIf95: 
  %if95 = phi %object* [ %if292, %EndIf292], [%opresult106, %BeginIf95] 
; compilenode returning %if95 
  ret %object* %if95 
} 
;;;; ENDS 
define %object* @reader_type_407(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_407(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_412(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_412(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_tokens413 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_ichars443 
; got len 9 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_mchars449 
; got len 9 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_ochars461 
; got len 9 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 11 
define %object* @meth_apply374(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_input = getelementptr %object*** %closure, i32 0 
  %var_input = load %object*** %varc_input 
  %varc_linenum = getelementptr %object*** %closure, i32 1 
  %var_linenum = load %object*** %varc_linenum 
  %varc_tokens = getelementptr %object*** %closure, i32 2 
  %var_tokens = load %object*** %varc_tokens 
  %varc_instr = getelementptr %object*** %closure, i32 3 
  %var_instr = load %object*** %varc_instr 
  %varc_mode = getelementptr %object*** %closure, i32 4 
  %var_mode = load %object*** %varc_mode 
  %varc_newmode = getelementptr %object*** %closure, i32 5 
  %var_newmode = load %object*** %varc_newmode 
  %varc_ichars = getelementptr %object*** %closure, i32 6 
  %var_ichars = load %object*** %varc_ichars 
  %varc_mchars = getelementptr %object*** %closure, i32 7 
  %var_mchars = load %object*** %varc_mchars 
  %varc_ochars = getelementptr %object*** %closure, i32 8 
  %var_ochars = load %object*** %varc_ochars 
  %varc_accum = getelementptr %object*** %closure, i32 9 
  %var_accum = load %object*** %varc_accum 
  %varc_self = getelementptr %object*** %closure, i32 10 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  br label %BeginIf375 
BeginIf375: 
  %var_val_i376 = load %object** %var_i 
; compilenode returning %var_val_i376 
  %num377 = call %object* @alloc_Float64(double 2500.0) 
; compilenode returning %num377 
  store %object* %num377, %object** %params_0 
  %modulus379 = call %object* @callmethod(%object* %var_val_i376, i8* getelementptr([2 x i8]* @.str._percent,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %modulus379 
  %num380 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num380 
  store %object* %num380, %object** %params_0 
  %opresult382 = call %object* @callmethod(%object* %modulus379, i8* getelementptr([3 x i8]* @.str235,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult382 
  %var_val_i383 = load %object** %var_i 
; compilenode returning %var_val_i383 
  %num384 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num384 
  store %object* %num384, %object** %params_0 
  %opresult386 = call %object* @callmethod(%object* %var_val_i383, i8* getelementptr([2 x i8]* @.str236,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult386 
  store %object* %opresult386, %object** %params_0 
  %opresult388 = call %object* @callmethod(%object* %opresult382, i8* getelementptr([2 x i8]* @.str237,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult388 
  %cond375_valp = call i1 @istrue(%object* %opresult388) 
  %cond375 = icmp eq i1 0, %cond375_valp 
br i1 %cond375, label %EndIf375, label %TrueBranch375 
TrueBranch375: 
  %str389 = getelementptr [21 x i8]* @.str238, i32 0, i32 0 
  %string389 = call %object* @alloc_String(i8* %str389) 
; compilenode returning %string389 
  %var_val_i390 = load %object** %var_i 
; compilenode returning %var_val_i390 
  store %object* %string389, %object** %params_0 
  store %object* %var_val_i390, %object** %params_1 
  %call391 = call %object* @gracelib_print(%object* null, i32 2, %object** %params) 
; compilenode returning %call391 
  br label %EndIf375 
EndIf375: 
  %if375 = phi %object* [ %call391, %TrueBranch375], [%opresult388, %BeginIf375] 
; compilenode returning %if375 
  %var_val_input392 = load %object** %var_input 
; compilenode returning %var_val_input392 
  %var_val_i393 = load %object** %var_i 
; compilenode returning %var_val_i393 
  store %object* %var_val_i393, %object** %params_0 
  %idxres394 = call %object* @callmethod(%object* %var_val_input392, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres394 
  %var_c = call %object** @alloc_var() 
  %var_c_dec = getelementptr %object* %idxres394, i32 0 
  store %object* %var_c_dec, %object** %var_c 
; compilenode returning  
  %str395 = getelementptr [1 x i8]* @.str239, i32 0, i32 0 
  %string395 = call %object* @alloc_String(i8* %str395) 
; compilenode returning %string395 
  %var_ct = call %object** @alloc_var() 
  %var_ct_dec = getelementptr %object* %string395, i32 0 
  store %object* %var_ct_dec, %object** %var_ct 
; compilenode returning  
  br label %BeginIf396 
BeginIf396: 
  %var_val_c397 = load %object** %var_c 
; compilenode returning %var_val_c397 
  %str398 = getelementptr [2 x i8]* @.str240, i32 0, i32 0 
  %string398 = call %object* @alloc_String(i8* %str398) 
; compilenode returning %string398 
  store %object* %string398, %object** %params_0 
  %opresult400 = call %object* @callmethod(%object* %var_val_c397, i8* getelementptr([3 x i8]* @.str241,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult400 
  %cond396_valp = call i1 @istrue(%object* %opresult400) 
  %cond396 = icmp eq i1 0, %cond396_valp 
br i1 %cond396, label %EndIf396, label %TrueBranch396 
TrueBranch396: 
  %var_val_linenum401 = load %object** %var_linenum 
; compilenode returning %var_val_linenum401 
  %num402 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num402 
  store %object* %num402, %object** %params_0 
  %sum404 = call %object* @callmethod(%object* %var_val_linenum401, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum404 
  store %object* %sum404, %object** %var_linenum 
; compilenode returning %sum404 
  %obj405 = call %object* @alloc_obj() 
  %str406 = getelementptr [5 x i8]* @.str242, i32 0, i32 0 
  %string406 = call %object* @alloc_String(i8* %str406) 
; compilenode returning %string406 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj405, %object* %string406, i32 0) 
  call void @addmethod(%object* %obj405, i8* getelementptr([5 x i8]* @.str.methname407, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_407)) 
  call void @addmethod(%object* %obj405, i8* getelementptr([7 x i8]* @.str.methnamew407, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_407)) 
  %var_val_linenum408 = load %object** %var_linenum 
; compilenode returning %var_val_linenum408 
  %num409 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num409 
  store %object* %num409, %object** %params_0 
  %sum411 = call %object* @callmethod(%object* %var_val_linenum408, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum411 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj405, %object* %sum411, i32 1) 
  call void @addmethod(%object* %obj405, i8* getelementptr([6 x i8]* @.str.methname412, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_412)) 
  call void @addmethod(%object* %obj405, i8* getelementptr([8 x i8]* @.str.methnamew412, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_412)) 
; compilenode returning %obj405 
  store %object* %obj405, %object** %params_0 
  %var_val_tokens413 = load %object** %var_tokens 
; compilenode returning %var_val_tokens413 
  %call414 = call %object* @callmethod(%object* %var_val_tokens413, i8* getelementptr([5 x i8]* @.str247,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call414 
; compilenode returning %call414 
  br label %EndIf396 
EndIf396: 
  %if396 = phi %object* [ %call414, %TrueBranch396], [%opresult400, %BeginIf396] 
; compilenode returning %if396 
  br label %BeginIf415 
BeginIf415: 
  %var_val_instr416 = load %object** %var_instr 
; compilenode returning %var_val_instr416 
  %cond415_valp = call i1 @istrue(%object* %var_val_instr416) 
  %cond415 = icmp eq i1 0, %cond415_valp 
br i1 %cond415, label %FalseBranch415, label %TrueBranch415 
TrueBranch415: 
  br label %EndIf415 
FalseBranch415: 
  br label %BeginIf417 
BeginIf417: 
  %var_val_mode418 = load %object** %var_mode 
; compilenode returning %var_val_mode418 
  %str419 = getelementptr [2 x i8]* @.str248, i32 0, i32 0 
  %string419 = call %object* @alloc_String(i8* %str419) 
; compilenode returning %string419 
  store %object* %string419, %object** %params_0 
  %opresult421 = call %object* @callmethod(%object* %var_val_mode418, i8* getelementptr([3 x i8]* @.str249,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult421 
  %cond417_valp = call i1 @istrue(%object* %opresult421) 
  %cond417 = icmp eq i1 0, %cond417_valp 
br i1 %cond417, label %EndIf417, label %TrueBranch417 
TrueBranch417: 
  br label %BeginIf422 
BeginIf422: 
  %var_val_c423 = load %object** %var_c 
; compilenode returning %var_val_c423 
  %str424 = getelementptr [2 x i8]* @.str250, i32 0, i32 0 
  %string424 = call %object* @alloc_String(i8* %str424) 
; compilenode returning %string424 
  store %object* %string424, %object** %params_0 
  %opresult426 = call %object* @callmethod(%object* %var_val_c423, i8* getelementptr([3 x i8]* @.str251,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult426 
  %cond422_valp = call i1 @istrue(%object* %opresult426) 
  %cond422 = icmp eq i1 0, %cond422_valp 
br i1 %cond422, label %EndIf422, label %TrueBranch422 
TrueBranch422: 
  %str427 = getelementptr [2 x i8]* @.str252, i32 0, i32 0 
  %string427 = call %object* @alloc_String(i8* %str427) 
; compilenode returning %string427 
  store %object* %string427, %object** %var_newmode 
; compilenode returning %string427 
  br label %EndIf422 
EndIf422: 
  %if422 = phi %object* [ %string427, %TrueBranch422], [%opresult426, %BeginIf422] 
; compilenode returning %if422 
  br label %BeginIf428 
BeginIf428: 
  %var_val_c429 = load %object** %var_c 
; compilenode returning %var_val_c429 
  %str430 = getelementptr [2 x i8]* @.str253, i32 0, i32 0 
  %string430 = call %object* @alloc_String(i8* %str430) 
; compilenode returning %string430 
  store %object* %string430, %object** %params_0 
  %opresult432 = call %object* @callmethod(%object* %var_val_c429, i8* getelementptr([3 x i8]* @.str254,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult432 
  %cond428_valp = call i1 @istrue(%object* %opresult432) 
  %cond428 = icmp eq i1 0, %cond428_valp 
br i1 %cond428, label %EndIf428, label %TrueBranch428 
TrueBranch428: 
  %str433 = getelementptr [2 x i8]* @.str255, i32 0, i32 0 
  %string433 = call %object* @alloc_String(i8* %str433) 
; compilenode returning %string433 
  store %object* %string433, %object** %var_newmode 
; compilenode returning %string433 
  %num434 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num434 
  store %object* %num434, %object** %var_instr 
; compilenode returning %num434 
  br label %EndIf428 
EndIf428: 
  %if428 = phi %object* [ %num434, %TrueBranch428], [%opresult432, %BeginIf428] 
; compilenode returning %if428 
  br label %BeginIf435 
BeginIf435: 
  %var_val_c436 = load %object** %var_c 
; compilenode returning %var_val_c436 
  %str437 = getelementptr [2 x i8]* @.str256, i32 0, i32 0 
  %string437 = call %object* @alloc_String(i8* %str437) 
; compilenode returning %string437 
  store %object* %string437, %object** %params_0 
  %opresult439 = call %object* @callmethod(%object* %var_val_c436, i8* getelementptr([3 x i8]* @.str257,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult439 
  %cond435_valp = call i1 @istrue(%object* %opresult439) 
  %cond435 = icmp eq i1 0, %cond435_valp 
br i1 %cond435, label %EndIf435, label %TrueBranch435 
TrueBranch435: 
  %str440 = getelementptr [2 x i8]* @.str258, i32 0, i32 0 
  %string440 = call %object* @alloc_String(i8* %str440) 
; compilenode returning %string440 
  store %object* %string440, %object** %var_newmode 
; compilenode returning %string440 
  %num441 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num441 
  store %object* %num441, %object** %var_instr 
; compilenode returning %num441 
  br label %EndIf435 
EndIf435: 
  %if435 = phi %object* [ %num441, %TrueBranch435], [%opresult439, %BeginIf435] 
; compilenode returning %if435 
  %var_val_c442 = load %object** %var_c 
; compilenode returning %var_val_c442 
  store %object* %var_val_c442, %object** %params_0 
  %var_val_ichars443 = load %object** %var_ichars 
; compilenode returning %var_val_ichars443 
  %call444 = call %object* @callmethod(%object* %var_val_ichars443, i8* getelementptr([9 x i8]* @.str259,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call444 
; compilenode returning %call444 
  store %object* %call444, %object** %var_ct 
; compilenode returning %call444 
  br label %BeginIf445 
BeginIf445: 
  %var_val_ct446 = load %object** %var_ct 
; compilenode returning %var_val_ct446 
  %cond445_valp = call i1 @istrue(%object* %var_val_ct446) 
  %cond445 = icmp eq i1 0, %cond445_valp 
br i1 %cond445, label %EndIf445, label %TrueBranch445 
TrueBranch445: 
  %str447 = getelementptr [2 x i8]* @.str260, i32 0, i32 0 
  %string447 = call %object* @alloc_String(i8* %str447) 
; compilenode returning %string447 
  store %object* %string447, %object** %var_newmode 
; compilenode returning %string447 
  br label %EndIf445 
EndIf445: 
  %if445 = phi %object* [ %string447, %TrueBranch445], [%var_val_ct446, %BeginIf445] 
; compilenode returning %if445 
  %var_val_c448 = load %object** %var_c 
; compilenode returning %var_val_c448 
  store %object* %var_val_c448, %object** %params_0 
  %var_val_mchars449 = load %object** %var_mchars 
; compilenode returning %var_val_mchars449 
  %call450 = call %object* @callmethod(%object* %var_val_mchars449, i8* getelementptr([9 x i8]* @.str261,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call450 
; compilenode returning %call450 
  store %object* %call450, %object** %var_ct 
; compilenode returning %call450 
  br label %BeginIf451 
BeginIf451: 
  %var_val_ct452 = load %object** %var_ct 
; compilenode returning %var_val_ct452 
  %var_val_mode453 = load %object** %var_mode 
; compilenode returning %var_val_mode453 
  %str454 = getelementptr [2 x i8]* @.str262, i32 0, i32 0 
  %string454 = call %object* @alloc_String(i8* %str454) 
; compilenode returning %string454 
  store %object* %string454, %object** %params_0 
  %opresult456 = call %object* @callmethod(%object* %var_val_mode453, i8* getelementptr([3 x i8]* @.str263,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult456 
  store %object* %opresult456, %object** %params_0 
  %opresult458 = call %object* @callmethod(%object* %var_val_ct452, i8* getelementptr([2 x i8]* @.str264,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult458 
  %cond451_valp = call i1 @istrue(%object* %opresult458) 
  %cond451 = icmp eq i1 0, %cond451_valp 
br i1 %cond451, label %EndIf451, label %TrueBranch451 
TrueBranch451: 
  %str459 = getelementptr [2 x i8]* @.str265, i32 0, i32 0 
  %string459 = call %object* @alloc_String(i8* %str459) 
; compilenode returning %string459 
  store %object* %string459, %object** %var_newmode 
; compilenode returning %string459 
  br label %EndIf451 
EndIf451: 
  %if451 = phi %object* [ %string459, %TrueBranch451], [%opresult458, %BeginIf451] 
; compilenode returning %if451 
  %var_val_c460 = load %object** %var_c 
; compilenode returning %var_val_c460 
  store %object* %var_val_c460, %object** %params_0 
  %var_val_ochars461 = load %object** %var_ochars 
; compilenode returning %var_val_ochars461 
  %call462 = call %object* @callmethod(%object* %var_val_ochars461, i8* getelementptr([9 x i8]* @.str266,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call462 
; compilenode returning %call462 
  store %object* %call462, %object** %var_ct 
; compilenode returning %call462 
  br label %BeginIf463 
BeginIf463: 
  %var_val_ct464 = load %object** %var_ct 
; compilenode returning %var_val_ct464 
  %cond463_valp = call i1 @istrue(%object* %var_val_ct464) 
  %cond463 = icmp eq i1 0, %cond463_valp 
br i1 %cond463, label %EndIf463, label %TrueBranch463 
TrueBranch463: 
  %str465 = getelementptr [2 x i8]* @.str267, i32 0, i32 0 
  %string465 = call %object* @alloc_String(i8* %str465) 
; compilenode returning %string465 
  store %object* %string465, %object** %var_newmode 
; compilenode returning %string465 
  br label %EndIf463 
EndIf463: 
  %if463 = phi %object* [ %string465, %TrueBranch463], [%var_val_ct464, %BeginIf463] 
; compilenode returning %if463 
  br label %BeginIf466 
BeginIf466: 
  %var_val_c467 = load %object** %var_c 
; compilenode returning %var_val_c467 
  %str468 = getelementptr [2 x i8]* @.str268, i32 0, i32 0 
  %string468 = call %object* @alloc_String(i8* %str468) 
; compilenode returning %string468 
  store %object* %string468, %object** %params_0 
  %opresult470 = call %object* @callmethod(%object* %var_val_c467, i8* getelementptr([3 x i8]* @.str269,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult470 
  %var_val_c471 = load %object** %var_c 
; compilenode returning %var_val_c471 
  %str472 = getelementptr [2 x i8]* @.str270, i32 0, i32 0 
  %string472 = call %object* @alloc_String(i8* %str472) 
; compilenode returning %string472 
  store %object* %string472, %object** %params_0 
  %opresult474 = call %object* @callmethod(%object* %var_val_c471, i8* getelementptr([3 x i8]* @.str271,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult474 
  %var_val_c475 = load %object** %var_c 
; compilenode returning %var_val_c475 
  %str476 = getelementptr [2 x i8]* @.str272, i32 0, i32 0 
  %string476 = call %object* @alloc_String(i8* %str476) 
; compilenode returning %string476 
  store %object* %string476, %object** %params_0 
  %opresult478 = call %object* @callmethod(%object* %var_val_c475, i8* getelementptr([3 x i8]* @.str273,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult478 
  %var_val_c479 = load %object** %var_c 
; compilenode returning %var_val_c479 
  %str480 = getelementptr [2 x i8]* @.str274, i32 0, i32 0 
  %string480 = call %object* @alloc_String(i8* %str480) 
; compilenode returning %string480 
  store %object* %string480, %object** %params_0 
  %opresult482 = call %object* @callmethod(%object* %var_val_c479, i8* getelementptr([3 x i8]* @.str275,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult482 
  %var_val_c483 = load %object** %var_c 
; compilenode returning %var_val_c483 
  %str484 = getelementptr [2 x i8]* @.str276, i32 0, i32 0 
  %string484 = call %object* @alloc_String(i8* %str484) 
; compilenode returning %string484 
  store %object* %string484, %object** %params_0 
  %opresult486 = call %object* @callmethod(%object* %var_val_c483, i8* getelementptr([3 x i8]* @.str277,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult486 
  %var_val_c487 = load %object** %var_c 
; compilenode returning %var_val_c487 
  %str488 = getelementptr [2 x i8]* @.str278, i32 0, i32 0 
  %string488 = call %object* @alloc_String(i8* %str488) 
; compilenode returning %string488 
  store %object* %string488, %object** %params_0 
  %opresult490 = call %object* @callmethod(%object* %var_val_c487, i8* getelementptr([3 x i8]* @.str279,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult490 
  %var_val_c491 = load %object** %var_c 
; compilenode returning %var_val_c491 
  %str492 = getelementptr [2 x i8]* @.str280, i32 0, i32 0 
  %string492 = call %object* @alloc_String(i8* %str492) 
; compilenode returning %string492 
  store %object* %string492, %object** %params_0 
  %opresult494 = call %object* @callmethod(%object* %var_val_c491, i8* getelementptr([3 x i8]* @.str281,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult494 
  %var_val_c495 = load %object** %var_c 
; compilenode returning %var_val_c495 
  %str496 = getelementptr [2 x i8]* @.str282, i32 0, i32 0 
  %string496 = call %object* @alloc_String(i8* %str496) 
; compilenode returning %string496 
  store %object* %string496, %object** %params_0 
  %opresult498 = call %object* @callmethod(%object* %var_val_c495, i8* getelementptr([3 x i8]* @.str283,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult498 
  store %object* %opresult498, %object** %params_0 
  %opresult500 = call %object* @callmethod(%object* %opresult494, i8* getelementptr([2 x i8]* @.str284,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult500 
  store %object* %opresult500, %object** %params_0 
  %opresult502 = call %object* @callmethod(%object* %opresult490, i8* getelementptr([2 x i8]* @.str285,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult502 
  store %object* %opresult502, %object** %params_0 
  %opresult504 = call %object* @callmethod(%object* %opresult486, i8* getelementptr([2 x i8]* @.str286,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult504 
  store %object* %opresult504, %object** %params_0 
  %opresult506 = call %object* @callmethod(%object* %opresult482, i8* getelementptr([2 x i8]* @.str287,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult506 
  store %object* %opresult506, %object** %params_0 
  %opresult508 = call %object* @callmethod(%object* %opresult478, i8* getelementptr([2 x i8]* @.str288,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult508 
  store %object* %opresult508, %object** %params_0 
  %opresult510 = call %object* @callmethod(%object* %opresult474, i8* getelementptr([2 x i8]* @.str289,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult510 
  store %object* %opresult510, %object** %params_0 
  %opresult512 = call %object* @callmethod(%object* %opresult470, i8* getelementptr([2 x i8]* @.str290,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult512 
  %cond466_valp = call i1 @istrue(%object* %opresult512) 
  %cond466 = icmp eq i1 0, %cond466_valp 
br i1 %cond466, label %EndIf466, label %TrueBranch466 
TrueBranch466: 
  %var_val_c513 = load %object** %var_c 
; compilenode returning %var_val_c513 
  store %object* %var_val_c513, %object** %var_newmode 
; compilenode returning %var_val_c513 
  br label %EndIf466 
EndIf466: 
  %if466 = phi %object* [ %var_val_c513, %TrueBranch466], [%opresult512, %BeginIf466] 
; compilenode returning %if466 
  br label %BeginIf514 
BeginIf514: 
  %var_val_c515 = load %object** %var_c 
; compilenode returning %var_val_c515 
  %str516 = getelementptr [2 x i8]* @.str291, i32 0, i32 0 
  %string516 = call %object* @alloc_String(i8* %str516) 
; compilenode returning %string516 
  store %object* %string516, %object** %params_0 
  %opresult518 = call %object* @callmethod(%object* %var_val_c515, i8* getelementptr([3 x i8]* @.str292,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult518 
  %var_val_accum519 = load %object** %var_accum 
; compilenode returning %var_val_accum519 
  %str520 = getelementptr [2 x i8]* @.str293, i32 0, i32 0 
  %string520 = call %object* @alloc_String(i8* %str520) 
; compilenode returning %string520 
  store %object* %string520, %object** %params_0 
  %opresult522 = call %object* @callmethod(%object* %var_val_accum519, i8* getelementptr([3 x i8]* @.str294,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult522 
  store %object* %opresult522, %object** %params_0 
  %opresult524 = call %object* @callmethod(%object* %opresult518, i8* getelementptr([2 x i8]* @.str295,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult524 
  %cond514_valp = call i1 @istrue(%object* %opresult524) 
  %cond514 = icmp eq i1 0, %cond514_valp 
br i1 %cond514, label %EndIf514, label %TrueBranch514 
TrueBranch514: 
  %str525 = getelementptr [2 x i8]* @.str296, i32 0, i32 0 
  %string525 = call %object* @alloc_String(i8* %str525) 
; compilenode returning %string525 
  store %object* %string525, %object** %var_mode 
; compilenode returning %string525 
  %var_val_mode526 = load %object** %var_mode 
; compilenode returning %var_val_mode526 
  store %object* %var_val_mode526, %object** %var_newmode 
; compilenode returning %var_val_mode526 
  br label %EndIf514 
EndIf514: 
  %if514 = phi %object* [ %var_val_mode526, %TrueBranch514], [%opresult524, %BeginIf514] 
; compilenode returning %if514 
  br label %BeginIf527 
BeginIf527: 
  %var_val_c528 = load %object** %var_c 
; compilenode returning %var_val_c528 
  %str529 = getelementptr [2 x i8]* @.str297, i32 0, i32 0 
  %string529 = call %object* @alloc_String(i8* %str529) 
; compilenode returning %string529 
  store %object* %string529, %object** %params_0 
  %opresult531 = call %object* @callmethod(%object* %var_val_c528, i8* getelementptr([3 x i8]* @.str298,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult531 
  %var_val_accum532 = load %object** %var_accum 
; compilenode returning %var_val_accum532 
  %str533 = getelementptr [2 x i8]* @.str299, i32 0, i32 0 
  %string533 = call %object* @alloc_String(i8* %str533) 
; compilenode returning %string533 
  store %object* %string533, %object** %params_0 
  %opresult535 = call %object* @callmethod(%object* %var_val_accum532, i8* getelementptr([3 x i8]* @.str300,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult535 
  store %object* %opresult535, %object** %params_0 
  %opresult537 = call %object* @callmethod(%object* %opresult531, i8* getelementptr([2 x i8]* @.str301,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult537 
  %cond527_valp = call i1 @istrue(%object* %opresult537) 
  %cond527 = icmp eq i1 0, %cond527_valp 
br i1 %cond527, label %EndIf527, label %TrueBranch527 
TrueBranch527: 
  %str538 = getelementptr [2 x i8]* @.str302, i32 0, i32 0 
  %string538 = call %object* @alloc_String(i8* %str538) 
; compilenode returning %string538 
  store %object* %string538, %object** %var_mode 
; compilenode returning %string538 
  %var_val_mode539 = load %object** %var_mode 
; compilenode returning %var_val_mode539 
  store %object* %var_val_mode539, %object** %var_newmode 
; compilenode returning %var_val_mode539 
  br label %EndIf527 
EndIf527: 
  %if527 = phi %object* [ %var_val_mode539, %TrueBranch527], [%opresult537, %BeginIf527] 
; compilenode returning %if527 
  br label %EndIf417 
EndIf417: 
  %if417 = phi %object* [ %if527, %EndIf527], [%opresult421, %BeginIf417] 
; compilenode returning %if417 
  br label %EndIf415 
EndIf415: 
  %if415 = phi %object* [ null, %TrueBranch415], [%if417, %EndIf417] 
; compilenode returning %if415 
  br label %BeginIf540 
BeginIf540: 
  %var_val_mode541 = load %object** %var_mode 
; compilenode returning %var_val_mode541 
  %str542 = getelementptr [2 x i8]* @.str303, i32 0, i32 0 
  %string542 = call %object* @alloc_String(i8* %str542) 
; compilenode returning %string542 
  store %object* %string542, %object** %params_0 
  %opresult544 = call %object* @callmethod(%object* %var_val_mode541, i8* getelementptr([3 x i8]* @.str304,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult544 
  %var_val_c545 = load %object** %var_c 
; compilenode returning %var_val_c545 
  %str546 = getelementptr [2 x i8]* @.str305, i32 0, i32 0 
  %string546 = call %object* @alloc_String(i8* %str546) 
; compilenode returning %string546 
  store %object* %string546, %object** %params_0 
  %opresult548 = call %object* @callmethod(%object* %var_val_c545, i8* getelementptr([3 x i8]* @.str306,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult548 
  store %object* %opresult548, %object** %params_0 
  %opresult550 = call %object* @callmethod(%object* %opresult544, i8* getelementptr([2 x i8]* @.str307,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult550 
  %cond540_valp = call i1 @istrue(%object* %opresult550) 
  %cond540 = icmp eq i1 0, %cond540_valp 
br i1 %cond540, label %EndIf540, label %TrueBranch540 
TrueBranch540: 
  %str551 = getelementptr [2 x i8]* @.str308, i32 0, i32 0 
  %string551 = call %object* @alloc_String(i8* %str551) 
; compilenode returning %string551 
  store %object* %string551, %object** %var_newmode 
; compilenode returning %string551 
  %bool552 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool552 
  store %object* %bool552, %object** %var_instr 
; compilenode returning %bool552 
  br label %EndIf540 
EndIf540: 
  %if540 = phi %object* [ %bool552, %TrueBranch540], [%opresult550, %BeginIf540] 
; compilenode returning %if540 
  br label %BeginIf553 
BeginIf553: 
  %var_val_mode554 = load %object** %var_mode 
; compilenode returning %var_val_mode554 
  %str555 = getelementptr [2 x i8]* @.str309, i32 0, i32 0 
  %string555 = call %object* @alloc_String(i8* %str555) 
; compilenode returning %string555 
  store %object* %string555, %object** %params_0 
  %opresult557 = call %object* @callmethod(%object* %var_val_mode554, i8* getelementptr([3 x i8]* @.str310,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult557 
  %var_val_c558 = load %object** %var_c 
; compilenode returning %var_val_c558 
  %str559 = getelementptr [2 x i8]* @.str311, i32 0, i32 0 
  %string559 = call %object* @alloc_String(i8* %str559) 
; compilenode returning %string559 
  store %object* %string559, %object** %params_0 
  %opresult561 = call %object* @callmethod(%object* %var_val_c558, i8* getelementptr([3 x i8]* @.str312,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult561 
  store %object* %opresult561, %object** %params_0 
  %opresult563 = call %object* @callmethod(%object* %opresult557, i8* getelementptr([2 x i8]* @.str313,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult563 
  %cond553_valp = call i1 @istrue(%object* %opresult563) 
  %cond553 = icmp eq i1 0, %cond553_valp 
br i1 %cond553, label %EndIf553, label %TrueBranch553 
TrueBranch553: 
  %str564 = getelementptr [2 x i8]* @.str314, i32 0, i32 0 
  %string564 = call %object* @alloc_String(i8* %str564) 
; compilenode returning %string564 
  store %object* %string564, %object** %var_newmode 
; compilenode returning %string564 
  %bool565 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool565 
  store %object* %bool565, %object** %var_instr 
; compilenode returning %bool565 
  br label %EndIf553 
EndIf553: 
  %if553 = phi %object* [ %bool565, %TrueBranch553], [%opresult563, %BeginIf553] 
; compilenode returning %if553 
  br label %BeginIf566 
BeginIf566: 
  %var_val_newmode567 = load %object** %var_newmode 
; compilenode returning %var_val_newmode567 
  %var_val_mode568 = load %object** %var_mode 
; compilenode returning %var_val_mode568 
  store %object* %var_val_mode568, %object** %params_0 
  %opresult570 = call %object* @callmethod(%object* %var_val_newmode567, i8* getelementptr([3 x i8]* @.str315,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult570 
  %cond566_valp = call i1 @istrue(%object* %opresult570) 
  %cond566 = icmp eq i1 0, %cond566_valp 
br i1 %cond566, label %FalseBranch566, label %TrueBranch566 
TrueBranch566: 
  %var_val_tokens571 = load %object** %var_tokens 
; compilenode returning %var_val_tokens571 
  %var_val_mode572 = load %object** %var_mode 
; compilenode returning %var_val_mode572 
  %var_val_accum573 = load %object** %var_accum 
; compilenode returning %var_val_accum573 
  store %object* %var_val_tokens571, %object** %params_0 
  store %object* %var_val_mode572, %object** %params_1 
  store %object* %var_val_accum573, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call574 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str316,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call574 
; compilenode returning %call574 
  %var_val_newmode575 = load %object** %var_newmode 
; compilenode returning %var_val_newmode575 
  store %object* %var_val_newmode575, %object** %var_mode 
; compilenode returning %var_val_newmode575 
  br label %BeginIf576 
BeginIf576: 
  %var_val_instr577 = load %object** %var_instr 
; compilenode returning %var_val_instr577 
  %cond576_valp = call i1 @istrue(%object* %var_val_instr577) 
  %cond576 = icmp eq i1 0, %cond576_valp 
br i1 %cond576, label %FalseBranch576, label %TrueBranch576 
TrueBranch576: 
  %str578 = getelementptr [1 x i8]* @.str317, i32 0, i32 0 
  %string578 = call %object* @alloc_String(i8* %str578) 
; compilenode returning %string578 
  store %object* %string578, %object** %var_accum 
; compilenode returning %string578 
  br label %EndIf576 
FalseBranch576: 
  %var_val_c579 = load %object** %var_c 
; compilenode returning %var_val_c579 
  store %object* %var_val_c579, %object** %var_accum 
; compilenode returning %var_val_c579 
  br label %EndIf576 
EndIf576: 
  %if576 = phi %object* [ %string578, %TrueBranch576], [%var_val_c579, %FalseBranch576] 
; compilenode returning %if576 
  br label %BeginIf580 
BeginIf580: 
  %var_val_mode581 = load %object** %var_mode 
; compilenode returning %var_val_mode581 
  %str582 = getelementptr [2 x i8]* @.str318, i32 0, i32 0 
  %string582 = call %object* @alloc_String(i8* %str582) 
; compilenode returning %string582 
  store %object* %string582, %object** %params_0 
  %opresult584 = call %object* @callmethod(%object* %var_val_mode581, i8* getelementptr([3 x i8]* @.str319,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult584 
  %var_val_mode585 = load %object** %var_mode 
; compilenode returning %var_val_mode585 
  %str586 = getelementptr [2 x i8]* @.str320, i32 0, i32 0 
  %string586 = call %object* @alloc_String(i8* %str586) 
; compilenode returning %string586 
  store %object* %string586, %object** %params_0 
  %opresult588 = call %object* @callmethod(%object* %var_val_mode585, i8* getelementptr([3 x i8]* @.str321,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult588 
  %var_val_mode589 = load %object** %var_mode 
; compilenode returning %var_val_mode589 
  %str590 = getelementptr [2 x i8]* @.str322, i32 0, i32 0 
  %string590 = call %object* @alloc_String(i8* %str590) 
; compilenode returning %string590 
  store %object* %string590, %object** %params_0 
  %opresult592 = call %object* @callmethod(%object* %var_val_mode589, i8* getelementptr([3 x i8]* @.str323,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult592 
  %var_val_mode593 = load %object** %var_mode 
; compilenode returning %var_val_mode593 
  %str594 = getelementptr [2 x i8]* @.str324, i32 0, i32 0 
  %string594 = call %object* @alloc_String(i8* %str594) 
; compilenode returning %string594 
  store %object* %string594, %object** %params_0 
  %opresult596 = call %object* @callmethod(%object* %var_val_mode593, i8* getelementptr([3 x i8]* @.str325,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult596 
  store %object* %opresult596, %object** %params_0 
  %opresult598 = call %object* @callmethod(%object* %opresult592, i8* getelementptr([2 x i8]* @.str326,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult598 
  store %object* %opresult598, %object** %params_0 
  %opresult600 = call %object* @callmethod(%object* %opresult588, i8* getelementptr([2 x i8]* @.str327,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult600 
  store %object* %opresult600, %object** %params_0 
  %opresult602 = call %object* @callmethod(%object* %opresult584, i8* getelementptr([2 x i8]* @.str328,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult602 
  %cond580_valp = call i1 @istrue(%object* %opresult602) 
  %cond580 = icmp eq i1 0, %cond580_valp 
br i1 %cond580, label %EndIf580, label %TrueBranch580 
TrueBranch580: 
  %var_val_tokens603 = load %object** %var_tokens 
; compilenode returning %var_val_tokens603 
  %var_val_mode604 = load %object** %var_mode 
; compilenode returning %var_val_mode604 
  %var_val_accum605 = load %object** %var_accum 
; compilenode returning %var_val_accum605 
  store %object* %var_val_tokens603, %object** %params_0 
  store %object* %var_val_mode604, %object** %params_1 
  store %object* %var_val_accum605, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call606 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str329,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call606 
; compilenode returning %call606 
  %str607 = getelementptr [2 x i8]* @.str330, i32 0, i32 0 
  %string607 = call %object* @alloc_String(i8* %str607) 
; compilenode returning %string607 
  store %object* %string607, %object** %var_mode 
; compilenode returning %string607 
  %str608 = getelementptr [2 x i8]* @.str331, i32 0, i32 0 
  %string608 = call %object* @alloc_String(i8* %str608) 
; compilenode returning %string608 
  store %object* %string608, %object** %var_newmode 
; compilenode returning %string608 
  %str609 = getelementptr [1 x i8]* @.str332, i32 0, i32 0 
  %string609 = call %object* @alloc_String(i8* %str609) 
; compilenode returning %string609 
  store %object* %string609, %object** %var_accum 
; compilenode returning %string609 
  br label %EndIf580 
EndIf580: 
  %if580 = phi %object* [ %string609, %TrueBranch580], [%opresult602, %BeginIf580] 
; compilenode returning %if580 
  br label %EndIf566 
FalseBranch566: 
  br label %BeginIf610 
BeginIf610: 
  %var_val_instr611 = load %object** %var_instr 
; compilenode returning %var_val_instr611 
  %cond610_valp = call i1 @istrue(%object* %var_val_instr611) 
  %cond610 = icmp eq i1 0, %cond610_valp 
br i1 %cond610, label %FalseBranch610, label %TrueBranch610 
TrueBranch610: 
  %var_val_accum612 = load %object** %var_accum 
; compilenode returning %var_val_accum612 
  %var_val_c613 = load %object** %var_c 
; compilenode returning %var_val_c613 
  store %object* %var_val_c613, %object** %params_0 
  %opresult615 = call %object* @callmethod(%object* %var_val_accum612, i8* getelementptr([3 x i8]* @.str333,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult615 
  store %object* %opresult615, %object** %var_accum 
; compilenode returning %opresult615 
  br label %EndIf610 
FalseBranch610: 
  br label %BeginIf616 
BeginIf616: 
  %var_val_c617 = load %object** %var_c 
; compilenode returning %var_val_c617 
  %str618 = getelementptr [2 x i8]* @.str334, i32 0, i32 0 
  %string618 = call %object* @alloc_String(i8* %str618) 
; compilenode returning %string618 
  store %object* %string618, %object** %params_0 
  %opresult620 = call %object* @callmethod(%object* %var_val_c617, i8* getelementptr([3 x i8]* @.str335,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult620 
  %cond616_valp = call i1 @istrue(%object* %opresult620) 
  %cond616 = icmp eq i1 0, %cond616_valp 
br i1 %cond616, label %FalseBranch616, label %TrueBranch616 
TrueBranch616: 
  %var_val_tokens621 = load %object** %var_tokens 
; compilenode returning %var_val_tokens621 
  %var_val_mode622 = load %object** %var_mode 
; compilenode returning %var_val_mode622 
  %var_val_accum623 = load %object** %var_accum 
; compilenode returning %var_val_accum623 
  store %object* %var_val_tokens621, %object** %params_0 
  store %object* %var_val_mode622, %object** %params_1 
  store %object* %var_val_accum623, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call624 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str336,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call624 
; compilenode returning %call624 
  %str625 = getelementptr [2 x i8]* @.str337, i32 0, i32 0 
  %string625 = call %object* @alloc_String(i8* %str625) 
; compilenode returning %string625 
  store %object* %string625, %object** %var_mode 
; compilenode returning %string625 
  %str626 = getelementptr [2 x i8]* @.str338, i32 0, i32 0 
  %string626 = call %object* @alloc_String(i8* %str626) 
; compilenode returning %string626 
  store %object* %string626, %object** %var_newmode 
; compilenode returning %string626 
  %str627 = getelementptr [1 x i8]* @.str339, i32 0, i32 0 
  %string627 = call %object* @alloc_String(i8* %str627) 
; compilenode returning %string627 
  store %object* %string627, %object** %var_accum 
; compilenode returning %string627 
  br label %EndIf616 
FalseBranch616: 
  %var_val_accum628 = load %object** %var_accum 
; compilenode returning %var_val_accum628 
  %var_val_c629 = load %object** %var_c 
; compilenode returning %var_val_c629 
  store %object* %var_val_c629, %object** %params_0 
  %opresult631 = call %object* @callmethod(%object* %var_val_accum628, i8* getelementptr([3 x i8]* @.str340,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult631 
  store %object* %opresult631, %object** %var_accum 
; compilenode returning %opresult631 
  br label %EndIf616 
EndIf616: 
  %if616 = phi %object* [ %string627, %TrueBranch616], [%opresult631, %FalseBranch616] 
; compilenode returning %if616 
  br label %EndIf610 
EndIf610: 
  %if610 = phi %object* [ %opresult615, %TrueBranch610], [%if616, %EndIf616] 
; compilenode returning %if610 
  br label %EndIf566 
EndIf566: 
  %if566 = phi %object* [ %if580, %EndIf580], [%if610, %EndIf610] 
; compilenode returning %if566 
  ret %object* %if566 
} 
;;;; ENDS 
define %object* @reader_sym_642(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_sym_642(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_tokens645 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens650 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_sym652 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens656 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens663 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym668 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call669 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens674 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym681 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call682 
; got len 6 
; created con 
; pushed statement 
define %object* @reader_type_693(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_693(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_sym694 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: next 
; have closure method: 3 
define %object* @meth_next643(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_tokens = getelementptr %object*** %closure, i32 0 
  %var_tokens = load %object*** %varc_tokens 
  %varc_sym = getelementptr %object*** %closure, i32 1 
  %var_sym = load %object*** %varc_sym 
  %varc_linenum = getelementptr %object*** %closure, i32 2 
  %var_linenum = load %object*** %varc_linenum 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf644 
BeginIf644: 
  %var_val_tokens645 = load %object** %var_tokens 
; compilenode returning %var_val_tokens645 
  %call646 = call %object* @callmethod(%object* %var_val_tokens645, i8* getelementptr([7 x i8]* @.str345,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call646 
; compilenode returning %call646 
; compilenode returning %call646 
  %num647 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num647 
  store %object* %num647, %object** %params_0 
  %opresult649 = call %object* @callmethod(%object* %call646, i8* getelementptr([2 x i8]* @.str346,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult649 
  %cond644_valp = call i1 @istrue(%object* %opresult649) 
  %cond644 = icmp eq i1 0, %cond644_valp 
br i1 %cond644, label %FalseBranch644, label %TrueBranch644 
TrueBranch644: 
; WARNING: non-local assigns not yet fully supported 
  %var_val_tokens650 = load %object** %var_tokens 
; compilenode returning %var_val_tokens650 
  %call651 = call %object* @callmethod(%object* %var_val_tokens650, i8* getelementptr([4 x i8]* @.str347,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call651 
; compilenode returning %call651 
  store %object* %call651, %object** %params_0 
  %var_val_sym652 = load %object** %var_sym 
; compilenode returning %var_val_sym652 
  %call653 = call %object* @callmethod(%object* %var_val_sym652, i8* getelementptr([6 x i8]* @.str348,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call653 
; compilenode returning %call653 
; compilenode returning %call653 
  br label %BeginIf654 
BeginIf654: 
  %num655 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num655 
  %var_val_tokens656 = load %object** %var_tokens 
; compilenode returning %var_val_tokens656 
  %call657 = call %object* @callmethod(%object* %var_val_tokens656, i8* getelementptr([7 x i8]* @.str349,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call657 
; compilenode returning %call657 
; compilenode returning %call657 
  %num658 = call %object* @alloc_Float64(double 500.0) 
; compilenode returning %num658 
  store %object* %num658, %object** %params_0 
  %modulus660 = call %object* @callmethod(%object* %call657, i8* getelementptr([2 x i8]* @.str._percent,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %modulus660 
  store %object* %modulus660, %object** %params_0 
  %opresult662 = call %object* @callmethod(%object* %num655, i8* getelementptr([3 x i8]* @.str350,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult662 
  %cond654_valp = call i1 @istrue(%object* %opresult662) 
  %cond654 = icmp eq i1 0, %cond654_valp 
br i1 %cond654, label %EndIf654, label %TrueBranch654 
TrueBranch654: 
  %var_val_tokens663 = load %object** %var_tokens 
; compilenode returning %var_val_tokens663 
  %call664 = call %object* @callmethod(%object* %var_val_tokens663, i8* getelementptr([7 x i8]* @.str351,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call664 
; compilenode returning %call664 
; compilenode returning %call664 
  %str665 = getelementptr [13 x i8]* @.str352, i32 0, i32 0 
  %string665 = call %object* @alloc_String(i8* %str665) 
; compilenode returning %string665 
  store %object* %call664, %object** %params_0 
  store %object* %string665, %object** %params_1 
  %call666 = call %object* @gracelib_print(%object* null, i32 2, %object** %params) 
; compilenode returning %call666 
  br label %EndIf654 
EndIf654: 
  %if654 = phi %object* [ %call666, %TrueBranch654], [%opresult662, %BeginIf654] 
; compilenode returning %if654 
  br label %BeginIf667 
BeginIf667: 
  %var_val_sym668 = load %object** %var_sym 
; compilenode returning %var_val_sym668 
  %call669 = call %object* @callmethod(%object* %var_val_sym668, i8* getelementptr([4 x i8]* @.str353,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call669 
; compilenode returning %call669 
; compilenode returning %call669 
  %call670 = call %object* @callmethod(%object* %call669, i8* getelementptr([5 x i8]* @.str354,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call670 
; compilenode returning %call670 
; compilenode returning %call670 
  %str671 = getelementptr [5 x i8]* @.str355, i32 0, i32 0 
  %string671 = call %object* @alloc_String(i8* %str671) 
; compilenode returning %string671 
  store %object* %string671, %object** %params_0 
  %opresult673 = call %object* @callmethod(%object* %call670, i8* getelementptr([3 x i8]* @.str356,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult673 
  %var_val_tokens674 = load %object** %var_tokens 
; compilenode returning %var_val_tokens674 
  %call675 = call %object* @callmethod(%object* %var_val_tokens674, i8* getelementptr([7 x i8]* @.str357,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call675 
; compilenode returning %call675 
; compilenode returning %call675 
  %num676 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num676 
  store %object* %num676, %object** %params_0 
  %opresult678 = call %object* @callmethod(%object* %call675, i8* getelementptr([2 x i8]* @.str358,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult678 
  store %object* %opresult678, %object** %params_0 
  %opresult680 = call %object* @callmethod(%object* %opresult673, i8* getelementptr([2 x i8]* @.str359,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult680 
  %cond667_valp = call i1 @istrue(%object* %opresult680) 
  %cond667 = icmp eq i1 0, %cond667_valp 
br i1 %cond667, label %EndIf667, label %TrueBranch667 
TrueBranch667: 
  %var_val_sym681 = load %object** %var_sym 
; compilenode returning %var_val_sym681 
  %call682 = call %object* @callmethod(%object* %var_val_sym681, i8* getelementptr([4 x i8]* @.str360,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call682 
; compilenode returning %call682 
; compilenode returning %call682 
  %call683 = call %object* @callmethod(%object* %call682, i8* getelementptr([6 x i8]* @.str361,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call683 
; compilenode returning %call683 
; compilenode returning %call683 
  %var_l = call %object** @alloc_var() 
  %var_l_dec = getelementptr %object* %call683, i32 0 
  store %object* %var_l_dec, %object** %var_l 
; compilenode returning  
  br label %BeginIf684 
BeginIf684: 
  %var_val_l685 = load %object** %var_l 
; compilenode returning %var_val_l685 
  %var_val_linenum686 = load %object** %var_linenum 
; compilenode returning %var_val_linenum686 
  store %object* %var_val_linenum686, %object** %params_0 
  %opresult688 = call %object* @callmethod(%object* %var_val_l685, i8* getelementptr([3 x i8]* @.str362,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult688 
  %cond684_valp = call i1 @istrue(%object* %opresult688) 
  %cond684 = icmp eq i1 0, %cond684_valp 
br i1 %cond684, label %EndIf684, label %TrueBranch684 
TrueBranch684: 
  %var_val_l689 = load %object** %var_l 
; compilenode returning %var_val_l689 
  store %object* %var_val_l689, %object** %var_linenum 
; compilenode returning %var_val_l689 
; WARNING: non-member calls not fully supported yet 
  %call690 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str363,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call690 
; compilenode returning %call690 
  br label %EndIf684 
EndIf684: 
  %if684 = phi %object* [ %call690, %TrueBranch684], [%opresult688, %BeginIf684] 
; compilenode returning %if684 
  br label %EndIf667 
EndIf667: 
  %if667 = phi %object* [ %if684, %EndIf684], [%opresult680, %BeginIf667] 
; compilenode returning %if667 
  br label %EndIf644 
FalseBranch644: 
; WARNING: non-local assigns not yet fully supported 
  %obj691 = call %object* @alloc_obj() 
  %str692 = getelementptr [4 x i8]* @.str364, i32 0, i32 0 
  %string692 = call %object* @alloc_String(i8* %str692) 
; compilenode returning %string692 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj691, %object* %string692, i32 0) 
  call void @addmethod(%object* %obj691, i8* getelementptr([5 x i8]* @.str.methname693, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_693)) 
  call void @addmethod(%object* %obj691, i8* getelementptr([7 x i8]* @.str.methnamew693, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_693)) 
; compilenode returning %obj691 
  store %object* %obj691, %object** %params_0 
  %var_val_sym694 = load %object** %var_sym 
; compilenode returning %var_val_sym694 
  %call695 = call %object* @callmethod(%object* %var_val_sym694, i8* getelementptr([6 x i8]* @.str367,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call695 
; compilenode returning %call695 
; compilenode returning %call695 
  br label %EndIf644 
EndIf644: 
  %if644 = phi %object* [ %if667, %EndIf667], [%call695, %FalseBranch644] 
; compilenode returning %if644 
  ret %object* %if644 
} 
;;;; ENDS 
define %object* @reader_type_699(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_699(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_701(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_701(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_variable_703(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_variable_703(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_body_705(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_body_705(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_707(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_707(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply716(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc717 = load %object** %var_spc 
; compilenode returning %var_val_spc717 
  %str718 = getelementptr [3 x i8]* @.str383, i32 0, i32 0 
  %string718 = call %object* @alloc_String(i8* %str718) 
; compilenode returning %string718 
  store %object* %string718, %object** %params_0 
  %opresult720 = call %object* @callmethod(%object* %var_val_spc717, i8* getelementptr([3 x i8]* @.str384,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult720 
  store %object* %opresult720, %object** %var_spc 
; compilenode returning %opresult720 
  ret %object* %opresult720 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 9 
; created con 
; pushed statement 
; compiled in to %call723 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call736 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_x764 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply756(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_s757 = load %object** %var_s 
; compilenode returning %var_val_s757 
  %str758 = getelementptr [4 x i8]* @.str402, i32 0, i32 0 
  %string758 = call %object* @alloc_String(i8* %str758) 
; compilenode returning %string758 
  %var_val_spc759 = load %object** %var_spc 
; compilenode returning %var_val_spc759 
  %var_val_depth760 = load %object** %var_depth 
; compilenode returning %var_val_depth760 
  %num761 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num761 
  store %object* %num761, %object** %params_0 
  %sum763 = call %object* @callmethod(%object* %var_val_depth760, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum763 
  store %object* %sum763, %object** %params_0 
  %var_val_x764 = load %object** %var_x 
; compilenode returning %var_val_x764 
  %call765 = call %object* @callmethod(%object* %var_val_x764, i8* getelementptr([7 x i8]* @.str403,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call765 
; compilenode returning %call765 
  store %object* %call765, %object** %params_0 
  %opresult767 = call %object* @callmethod(%object* %var_val_spc759, i8* getelementptr([3 x i8]* @.str404,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult767 
  store %object* %opresult767, %object** %params_0 
  %opresult769 = call %object* @callmethod(%object* %string758, i8* getelementptr([3 x i8]* @.str405,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult769 
  store %object* %opresult769, %object** %params_0 
  %opresult771 = call %object* @callmethod(%object* %var_val_s757, i8* getelementptr([3 x i8]* @.str406,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult771 
  store %object* %opresult771, %object** %var_s 
; compilenode returning %opresult771 
  ret %object* %opresult771 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty708(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str709 = getelementptr [1 x i8]* @.str381, i32 0, i32 0 
  %string709 = call %object* @alloc_String(i8* %str709) 
; compilenode returning %string709 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string709, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num711 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num711 
  %var_val_depth712 = load %object** %var_depth 
; compilenode returning %var_val_depth712 
  store %object* %var_val_depth712, %object** %params_0 
  %opresult714 = call %object* @callmethod(%object* %num711, i8* getelementptr([3 x i8]* @.str382,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult714 
  %obj715 = call %object* @alloc_obj() 
  %closure716 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure716, %object** %var_spc) 
  %selfpp721 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp721 
  call void @addtoclosure(%object*** %closure716, %object** %selfpp721) 
  call void @addclosuremethod(%object* %obj715, i8* getelementptr([6 x i8]* @.str.methname716, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply716), %object*** %closure716) 
; compilenode returning %obj715 
  store %object* %opresult714, %object** %params_0 
  %iter710 = call %object* @callmethod(%object* %opresult714, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor710 
BeginFor710: 
  %condobj710 = call %object* @callmethod(%object* %iter710, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond710_valp = call i1 @istrue(%object* %condobj710) 
  %cond710 = icmp eq i1 0, %cond710_valp 
br i1 %cond710, label %EndFor710, label %ForBody710 
ForBody710: 
 %forval710 = call %object* @callmethod(%object* %iter710, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval710, %object** %params_0 
  call %object* @callmethod(%object* %obj715, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor710 
EndFor710: 
; compilenode returning %opresult714 
  %str722 = getelementptr [5 x i8]* @.str386, i32 0, i32 0 
  %string722 = call %object* @alloc_String(i8* %str722) 
; compilenode returning %string722 
; compilenode returning %self 
  %call723 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str387,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call723 
; compilenode returning %call723 
; compilenode returning %call723 
  %call724 = call %object* @callmethod(%object* %call723, i8* getelementptr([6 x i8]* @.str388,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call724 
; compilenode returning %call724 
; compilenode returning %call724 
  %str725 = getelementptr [3 x i8]* @.str389, i32 0, i32 0 
  %string725 = call %object* @alloc_String(i8* %str725) 
; compilenode returning %string725 
  store %object* %string725, %object** %params_0 
  %opresult727 = call %object* @callmethod(%object* %call724, i8* getelementptr([3 x i8]* @.str390,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult727 
  store %object* %opresult727, %object** %params_0 
  %opresult729 = call %object* @callmethod(%object* %string722, i8* getelementptr([3 x i8]* @.str391,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult729 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %opresult729, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s730 = load %object** %var_s 
; compilenode returning %var_val_s730 
  %var_val_spc731 = load %object** %var_spc 
; compilenode returning %var_val_spc731 
  %var_val_depth732 = load %object** %var_depth 
; compilenode returning %var_val_depth732 
  %num733 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num733 
  store %object* %num733, %object** %params_0 
  %sum735 = call %object* @callmethod(%object* %var_val_depth732, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum735 
  store %object* %sum735, %object** %params_0 
; compilenode returning %self 
  %call736 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str392,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call736 
; compilenode returning %call736 
; compilenode returning %call736 
  %call737 = call %object* @callmethod(%object* %call736, i8* getelementptr([7 x i8]* @.str393,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call737 
; compilenode returning %call737 
  store %object* %call737, %object** %params_0 
  %opresult739 = call %object* @callmethod(%object* %var_val_spc731, i8* getelementptr([3 x i8]* @.str394,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult739 
  store %object* %opresult739, %object** %params_0 
  %opresult741 = call %object* @callmethod(%object* %var_val_s730, i8* getelementptr([3 x i8]* @.str395,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult741 
  store %object* %opresult741, %object** %var_s 
; compilenode returning %opresult741 
  %var_val_s742 = load %object** %var_s 
; compilenode returning %var_val_s742 
  %str743 = getelementptr [2 x i8]* @.str396, i32 0, i32 0 
  %string743 = call %object* @alloc_String(i8* %str743) 
; compilenode returning %string743 
  store %object* %string743, %object** %params_0 
  %opresult745 = call %object* @callmethod(%object* %var_val_s742, i8* getelementptr([3 x i8]* @.str397,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult745 
  store %object* %opresult745, %object** %var_s 
; compilenode returning %opresult745 
  %var_val_s746 = load %object** %var_s 
; compilenode returning %var_val_s746 
  %var_val_spc747 = load %object** %var_spc 
; compilenode returning %var_val_spc747 
  %str748 = getelementptr [6 x i8]* @.str398, i32 0, i32 0 
  %string748 = call %object* @alloc_String(i8* %str748) 
; compilenode returning %string748 
  store %object* %string748, %object** %params_0 
  %opresult750 = call %object* @callmethod(%object* %var_val_spc747, i8* getelementptr([3 x i8]* @.str399,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult750 
  store %object* %opresult750, %object** %params_0 
  %opresult752 = call %object* @callmethod(%object* %var_val_s746, i8* getelementptr([3 x i8]* @.str400,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult752 
  store %object* %opresult752, %object** %var_s 
; compilenode returning %opresult752 
; compilenode returning %self 
  %call754 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str401,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call754 
; compilenode returning %call754 
; compilenode returning %call754 
  %obj755 = call %object* @alloc_obj() 
  %closure756 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure756, %object** %var_s) 
  call void @addtoclosure(%object*** %closure756, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure756, %object** %var_depth) 
  %selfpp772 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp772 
  call void @addtoclosure(%object*** %closure756, %object** %selfpp772) 
  call void @addclosuremethod(%object* %obj755, i8* getelementptr([6 x i8]* @.str.methname756, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply756), %object*** %closure756) 
; compilenode returning %obj755 
  store %object* %call754, %object** %params_0 
  %iter753 = call %object* @callmethod(%object* %call754, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor753 
BeginFor753: 
  %condobj753 = call %object* @callmethod(%object* %iter753, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond753_valp = call i1 @istrue(%object* %condobj753) 
  %cond753 = icmp eq i1 0, %cond753_valp 
br i1 %cond753, label %EndFor753, label %ForBody753 
ForBody753: 
 %forval753 = call %object* @callmethod(%object* %iter753, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval753, %object** %params_0 
  call %object* @callmethod(%object* %obj755, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor753 
EndFor753: 
; compilenode returning %call754 
  %var_val_s773 = load %object** %var_s 
; compilenode returning %var_val_s773 
  ret %object* %var_val_s773 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astfor 
define %object* @meth_astfor696(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_over = getelementptr %object** %args, i32 0 
  %var_variable = getelementptr %object** %args, i32 1 
  %var_body = getelementptr %object** %args, i32 2 
  %obj697 = call %object* @alloc_obj() 
  %str698 = getelementptr [4 x i8]* @.str369, i32 0, i32 0 
  %string698 = call %object* @alloc_String(i8* %str698) 
; compilenode returning %string698 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj697, %object* %string698, i32 0) 
  call void @addmethod(%object* %obj697, i8* getelementptr([5 x i8]* @.str.methname699, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_699)) 
  call void @addmethod(%object* %obj697, i8* getelementptr([7 x i8]* @.str.methnamew699, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_699)) 
  %var_val_over700 = load %object** %var_over 
; compilenode returning %var_val_over700 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj697, %object* %var_val_over700, i32 1) 
  call void @addmethod(%object* %obj697, i8* getelementptr([6 x i8]* @.str.methname701, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_701)) 
  call void @addmethod(%object* %obj697, i8* getelementptr([8 x i8]* @.str.methnamew701, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_701)) 
  %var_val_variable702 = load %object** %var_variable 
; compilenode returning %var_val_variable702 
; OBJECT VAR DEC variable 
  call void @adddatum(%object* %obj697, %object* %var_val_variable702, i32 2) 
  call void @addmethod(%object* %obj697, i8* getelementptr([9 x i8]* @.str.methname703, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_variable_703)) 
  call void @addmethod(%object* %obj697, i8* getelementptr([11 x i8]* @.str.methnamew703, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_variable_703)) 
  %var_val_body704 = load %object** %var_body 
; compilenode returning %var_val_body704 
; OBJECT VAR DEC body 
  call void @adddatum(%object* %obj697, %object* %var_val_body704, i32 3) 
  call void @addmethod(%object* %obj697, i8* getelementptr([5 x i8]* @.str.methname705, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_body_705)) 
  call void @addmethod(%object* %obj697, i8* getelementptr([7 x i8]* @.str.methnamew705, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_body_705)) 
  %str706 = getelementptr [1 x i8]* @.str378, i32 0, i32 0 
  %string706 = call %object* @alloc_String(i8* %str706) 
; compilenode returning %string706 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj697, %object* %string706, i32 4) 
  call void @addmethod(%object* %obj697, i8* getelementptr([9 x i8]* @.str.methname707, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_707)) 
  call void @addmethod(%object* %obj697, i8* getelementptr([11 x i8]* @.str.methnamew707, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_707)) 
  call void @addmethod(%object* %obj697, i8* getelementptr([7 x i8]* @.str.methname708, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty708)) 
; compilenode returning %obj697 
  ret %object* %obj697 
} 
;;;; ENDS 
define %object* @reader_type_777(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_777(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_779(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_779(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_body_781(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_body_781(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_783(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_783(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply792(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc793 = load %object** %var_spc 
; compilenode returning %var_val_spc793 
  %str794 = getelementptr [3 x i8]* @.str422, i32 0, i32 0 
  %string794 = call %object* @alloc_String(i8* %str794) 
; compilenode returning %string794 
  store %object* %string794, %object** %params_0 
  %opresult796 = call %object* @callmethod(%object* %var_val_spc793, i8* getelementptr([3 x i8]* @.str423,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult796 
  store %object* %opresult796, %object** %var_spc 
; compilenode returning %opresult796 
  ret %object* %opresult796 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call805 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_x833 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply825(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_s826 = load %object** %var_s 
; compilenode returning %var_val_s826 
  %str827 = getelementptr [4 x i8]* @.str436, i32 0, i32 0 
  %string827 = call %object* @alloc_String(i8* %str827) 
; compilenode returning %string827 
  %var_val_spc828 = load %object** %var_spc 
; compilenode returning %var_val_spc828 
  %var_val_depth829 = load %object** %var_depth 
; compilenode returning %var_val_depth829 
  %num830 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num830 
  store %object* %num830, %object** %params_0 
  %sum832 = call %object* @callmethod(%object* %var_val_depth829, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum832 
  store %object* %sum832, %object** %params_0 
  %var_val_x833 = load %object** %var_x 
; compilenode returning %var_val_x833 
  %call834 = call %object* @callmethod(%object* %var_val_x833, i8* getelementptr([7 x i8]* @.str437,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call834 
; compilenode returning %call834 
  store %object* %call834, %object** %params_0 
  %opresult836 = call %object* @callmethod(%object* %var_val_spc828, i8* getelementptr([3 x i8]* @.str438,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult836 
  store %object* %opresult836, %object** %params_0 
  %opresult838 = call %object* @callmethod(%object* %string827, i8* getelementptr([3 x i8]* @.str439,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult838 
  store %object* %opresult838, %object** %params_0 
  %opresult840 = call %object* @callmethod(%object* %var_val_s826, i8* getelementptr([3 x i8]* @.str440,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult840 
  store %object* %opresult840, %object** %var_s 
; compilenode returning %opresult840 
  ret %object* %opresult840 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty784(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str785 = getelementptr [1 x i8]* @.str420, i32 0, i32 0 
  %string785 = call %object* @alloc_String(i8* %str785) 
; compilenode returning %string785 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string785, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num787 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num787 
  %var_val_depth788 = load %object** %var_depth 
; compilenode returning %var_val_depth788 
  store %object* %var_val_depth788, %object** %params_0 
  %opresult790 = call %object* @callmethod(%object* %num787, i8* getelementptr([3 x i8]* @.str421,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult790 
  %obj791 = call %object* @alloc_obj() 
  %closure792 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure792, %object** %var_spc) 
  %selfpp797 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp797 
  call void @addtoclosure(%object*** %closure792, %object** %selfpp797) 
  call void @addclosuremethod(%object* %obj791, i8* getelementptr([6 x i8]* @.str.methname792, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply792), %object*** %closure792) 
; compilenode returning %obj791 
  store %object* %opresult790, %object** %params_0 
  %iter786 = call %object* @callmethod(%object* %opresult790, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor786 
BeginFor786: 
  %condobj786 = call %object* @callmethod(%object* %iter786, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond786_valp = call i1 @istrue(%object* %condobj786) 
  %cond786 = icmp eq i1 0, %cond786_valp 
br i1 %cond786, label %EndFor786, label %ForBody786 
ForBody786: 
 %forval786 = call %object* @callmethod(%object* %iter786, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval786, %object** %params_0 
  call %object* @callmethod(%object* %obj791, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor786 
EndFor786: 
; compilenode returning %opresult790 
  %str798 = getelementptr [7 x i8]* @.str425, i32 0, i32 0 
  %string798 = call %object* @alloc_String(i8* %str798) 
; compilenode returning %string798 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string798, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s799 = load %object** %var_s 
; compilenode returning %var_val_s799 
  %var_val_spc800 = load %object** %var_spc 
; compilenode returning %var_val_spc800 
  %var_val_depth801 = load %object** %var_depth 
; compilenode returning %var_val_depth801 
  %num802 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num802 
  store %object* %num802, %object** %params_0 
  %sum804 = call %object* @callmethod(%object* %var_val_depth801, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum804 
  store %object* %sum804, %object** %params_0 
; compilenode returning %self 
  %call805 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str426,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call805 
; compilenode returning %call805 
; compilenode returning %call805 
  %call806 = call %object* @callmethod(%object* %call805, i8* getelementptr([7 x i8]* @.str427,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call806 
; compilenode returning %call806 
  store %object* %call806, %object** %params_0 
  %opresult808 = call %object* @callmethod(%object* %var_val_spc800, i8* getelementptr([3 x i8]* @.str428,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult808 
  store %object* %opresult808, %object** %params_0 
  %opresult810 = call %object* @callmethod(%object* %var_val_s799, i8* getelementptr([3 x i8]* @.str429,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult810 
  store %object* %opresult810, %object** %var_s 
; compilenode returning %opresult810 
  %var_val_s811 = load %object** %var_s 
; compilenode returning %var_val_s811 
  %str812 = getelementptr [2 x i8]* @.str430, i32 0, i32 0 
  %string812 = call %object* @alloc_String(i8* %str812) 
; compilenode returning %string812 
  store %object* %string812, %object** %params_0 
  %opresult814 = call %object* @callmethod(%object* %var_val_s811, i8* getelementptr([3 x i8]* @.str431,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult814 
  store %object* %opresult814, %object** %var_s 
; compilenode returning %opresult814 
  %var_val_s815 = load %object** %var_s 
; compilenode returning %var_val_s815 
  %var_val_spc816 = load %object** %var_spc 
; compilenode returning %var_val_spc816 
  %str817 = getelementptr [4 x i8]* @.str432, i32 0, i32 0 
  %string817 = call %object* @alloc_String(i8* %str817) 
; compilenode returning %string817 
  store %object* %string817, %object** %params_0 
  %opresult819 = call %object* @callmethod(%object* %var_val_spc816, i8* getelementptr([3 x i8]* @.str433,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult819 
  store %object* %opresult819, %object** %params_0 
  %opresult821 = call %object* @callmethod(%object* %var_val_s815, i8* getelementptr([3 x i8]* @.str434,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult821 
  store %object* %opresult821, %object** %var_s 
; compilenode returning %opresult821 
; compilenode returning %self 
  %call823 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str435,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call823 
; compilenode returning %call823 
; compilenode returning %call823 
  %obj824 = call %object* @alloc_obj() 
  %closure825 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure825, %object** %var_s) 
  call void @addtoclosure(%object*** %closure825, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure825, %object** %var_depth) 
  %selfpp841 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp841 
  call void @addtoclosure(%object*** %closure825, %object** %selfpp841) 
  call void @addclosuremethod(%object* %obj824, i8* getelementptr([6 x i8]* @.str.methname825, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply825), %object*** %closure825) 
; compilenode returning %obj824 
  store %object* %call823, %object** %params_0 
  %iter822 = call %object* @callmethod(%object* %call823, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor822 
BeginFor822: 
  %condobj822 = call %object* @callmethod(%object* %iter822, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond822_valp = call i1 @istrue(%object* %condobj822) 
  %cond822 = icmp eq i1 0, %cond822_valp 
br i1 %cond822, label %EndFor822, label %ForBody822 
ForBody822: 
 %forval822 = call %object* @callmethod(%object* %iter822, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval822, %object** %params_0 
  call %object* @callmethod(%object* %obj824, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor822 
EndFor822: 
; compilenode returning %call823 
  %var_val_s842 = load %object** %var_s 
; compilenode returning %var_val_s842 
  ret %object* %var_val_s842 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astwhile 
define %object* @meth_astwhile774(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_cond = getelementptr %object** %args, i32 0 
  %var_body = getelementptr %object** %args, i32 1 
  %obj775 = call %object* @alloc_obj() 
  %str776 = getelementptr [6 x i8]* @.str410, i32 0, i32 0 
  %string776 = call %object* @alloc_String(i8* %str776) 
; compilenode returning %string776 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj775, %object* %string776, i32 0) 
  call void @addmethod(%object* %obj775, i8* getelementptr([5 x i8]* @.str.methname777, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_777)) 
  call void @addmethod(%object* %obj775, i8* getelementptr([7 x i8]* @.str.methnamew777, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_777)) 
  %var_val_cond778 = load %object** %var_cond 
; compilenode returning %var_val_cond778 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj775, %object* %var_val_cond778, i32 1) 
  call void @addmethod(%object* %obj775, i8* getelementptr([6 x i8]* @.str.methname779, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_779)) 
  call void @addmethod(%object* %obj775, i8* getelementptr([8 x i8]* @.str.methnamew779, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_779)) 
  %var_val_body780 = load %object** %var_body 
; compilenode returning %var_val_body780 
; OBJECT VAR DEC body 
  call void @adddatum(%object* %obj775, %object* %var_val_body780, i32 2) 
  call void @addmethod(%object* %obj775, i8* getelementptr([5 x i8]* @.str.methname781, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_body_781)) 
  call void @addmethod(%object* %obj775, i8* getelementptr([7 x i8]* @.str.methnamew781, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_body_781)) 
  %str782 = getelementptr [1 x i8]* @.str417, i32 0, i32 0 
  %string782 = call %object* @alloc_String(i8* %str782) 
; compilenode returning %string782 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj775, %object* %string782, i32 3) 
  call void @addmethod(%object* %obj775, i8* getelementptr([9 x i8]* @.str.methname783, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_783)) 
  call void @addmethod(%object* %obj775, i8* getelementptr([11 x i8]* @.str.methnamew783, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_783)) 
  call void @addmethod(%object* %obj775, i8* getelementptr([7 x i8]* @.str.methname784, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty784)) 
; compilenode returning %obj775 
  ret %object* %obj775 
} 
;;;; ENDS 
define %object* @reader_type_846(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_846(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_848(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_848(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_thenblock_850(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_thenblock_850(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_elseblock_852(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_elseblock_852(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_854(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_854(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply863(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc864 = load %object** %var_spc 
; compilenode returning %var_val_spc864 
  %str865 = getelementptr [3 x i8]* @.str458, i32 0, i32 0 
  %string865 = call %object* @alloc_String(i8* %str865) 
; compilenode returning %string865 
  store %object* %string865, %object** %params_0 
  %opresult867 = call %object* @callmethod(%object* %var_val_spc864, i8* getelementptr([3 x i8]* @.str459,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult867 
  store %object* %opresult867, %object** %var_spc 
; compilenode returning %opresult867 
  ret %object* %opresult867 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call876 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %self 
; got len 10 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_ix904 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply896(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_ix = getelementptr %object** %args, i32 0 
  %var_val_s897 = load %object** %var_s 
; compilenode returning %var_val_s897 
  %str898 = getelementptr [4 x i8]* @.str472, i32 0, i32 0 
  %string898 = call %object* @alloc_String(i8* %str898) 
; compilenode returning %string898 
  %var_val_spc899 = load %object** %var_spc 
; compilenode returning %var_val_spc899 
  %var_val_depth900 = load %object** %var_depth 
; compilenode returning %var_val_depth900 
  %num901 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num901 
  store %object* %num901, %object** %params_0 
  %sum903 = call %object* @callmethod(%object* %var_val_depth900, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum903 
  store %object* %sum903, %object** %params_0 
  %var_val_ix904 = load %object** %var_ix 
; compilenode returning %var_val_ix904 
  %call905 = call %object* @callmethod(%object* %var_val_ix904, i8* getelementptr([7 x i8]* @.str473,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call905 
; compilenode returning %call905 
  store %object* %call905, %object** %params_0 
  %opresult907 = call %object* @callmethod(%object* %var_val_spc899, i8* getelementptr([3 x i8]* @.str474,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult907 
  store %object* %opresult907, %object** %params_0 
  %opresult909 = call %object* @callmethod(%object* %string898, i8* getelementptr([3 x i8]* @.str475,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult909 
  store %object* %opresult909, %object** %params_0 
  %opresult911 = call %object* @callmethod(%object* %var_val_s897, i8* getelementptr([3 x i8]* @.str476,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult911 
  store %object* %opresult911, %object** %var_s 
; compilenode returning %opresult911 
  ret %object* %opresult911 
} 
;;;; ENDS 
; handling member 
; compiled in to %self 
; got len 10 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_ix935 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply927(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_ix = getelementptr %object** %args, i32 0 
  %var_val_s928 = load %object** %var_s 
; compilenode returning %var_val_s928 
  %str929 = getelementptr [4 x i8]* @.str484, i32 0, i32 0 
  %string929 = call %object* @alloc_String(i8* %str929) 
; compilenode returning %string929 
  %var_val_spc930 = load %object** %var_spc 
; compilenode returning %var_val_spc930 
  %var_val_depth931 = load %object** %var_depth 
; compilenode returning %var_val_depth931 
  %num932 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num932 
  store %object* %num932, %object** %params_0 
  %sum934 = call %object* @callmethod(%object* %var_val_depth931, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum934 
  store %object* %sum934, %object** %params_0 
  %var_val_ix935 = load %object** %var_ix 
; compilenode returning %var_val_ix935 
  %call936 = call %object* @callmethod(%object* %var_val_ix935, i8* getelementptr([7 x i8]* @.str485,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call936 
; compilenode returning %call936 
  store %object* %call936, %object** %params_0 
  %opresult938 = call %object* @callmethod(%object* %var_val_spc930, i8* getelementptr([3 x i8]* @.str486,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult938 
  store %object* %opresult938, %object** %params_0 
  %opresult940 = call %object* @callmethod(%object* %string929, i8* getelementptr([3 x i8]* @.str487,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult940 
  store %object* %opresult940, %object** %params_0 
  %opresult942 = call %object* @callmethod(%object* %var_val_s928, i8* getelementptr([3 x i8]* @.str488,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult942 
  store %object* %opresult942, %object** %var_s 
; compilenode returning %opresult942 
  ret %object* %opresult942 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty855(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str856 = getelementptr [1 x i8]* @.str456, i32 0, i32 0 
  %string856 = call %object* @alloc_String(i8* %str856) 
; compilenode returning %string856 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string856, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num858 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num858 
  %var_val_depth859 = load %object** %var_depth 
; compilenode returning %var_val_depth859 
  store %object* %var_val_depth859, %object** %params_0 
  %opresult861 = call %object* @callmethod(%object* %num858, i8* getelementptr([3 x i8]* @.str457,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult861 
  %obj862 = call %object* @alloc_obj() 
  %closure863 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure863, %object** %var_spc) 
  %selfpp868 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp868 
  call void @addtoclosure(%object*** %closure863, %object** %selfpp868) 
  call void @addclosuremethod(%object* %obj862, i8* getelementptr([6 x i8]* @.str.methname863, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply863), %object*** %closure863) 
; compilenode returning %obj862 
  store %object* %opresult861, %object** %params_0 
  %iter857 = call %object* @callmethod(%object* %opresult861, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor857 
BeginFor857: 
  %condobj857 = call %object* @callmethod(%object* %iter857, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond857_valp = call i1 @istrue(%object* %condobj857) 
  %cond857 = icmp eq i1 0, %cond857_valp 
br i1 %cond857, label %EndFor857, label %ForBody857 
ForBody857: 
 %forval857 = call %object* @callmethod(%object* %iter857, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval857, %object** %params_0 
  call %object* @callmethod(%object* %obj862, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor857 
EndFor857: 
; compilenode returning %opresult861 
  %str869 = getelementptr [4 x i8]* @.str461, i32 0, i32 0 
  %string869 = call %object* @alloc_String(i8* %str869) 
; compilenode returning %string869 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string869, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s870 = load %object** %var_s 
; compilenode returning %var_val_s870 
  %var_val_spc871 = load %object** %var_spc 
; compilenode returning %var_val_spc871 
  %var_val_depth872 = load %object** %var_depth 
; compilenode returning %var_val_depth872 
  %num873 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num873 
  store %object* %num873, %object** %params_0 
  %sum875 = call %object* @callmethod(%object* %var_val_depth872, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum875 
  store %object* %sum875, %object** %params_0 
; compilenode returning %self 
  %call876 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str462,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call876 
; compilenode returning %call876 
; compilenode returning %call876 
  %call877 = call %object* @callmethod(%object* %call876, i8* getelementptr([7 x i8]* @.str463,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call877 
; compilenode returning %call877 
  store %object* %call877, %object** %params_0 
  %opresult879 = call %object* @callmethod(%object* %var_val_spc871, i8* getelementptr([3 x i8]* @.str464,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult879 
  store %object* %opresult879, %object** %params_0 
  %opresult881 = call %object* @callmethod(%object* %var_val_s870, i8* getelementptr([3 x i8]* @.str465,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult881 
  store %object* %opresult881, %object** %var_s 
; compilenode returning %opresult881 
  %var_val_s882 = load %object** %var_s 
; compilenode returning %var_val_s882 
  %str883 = getelementptr [2 x i8]* @.str466, i32 0, i32 0 
  %string883 = call %object* @alloc_String(i8* %str883) 
; compilenode returning %string883 
  store %object* %string883, %object** %params_0 
  %opresult885 = call %object* @callmethod(%object* %var_val_s882, i8* getelementptr([3 x i8]* @.str467,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult885 
  store %object* %opresult885, %object** %var_s 
; compilenode returning %opresult885 
  %var_val_s886 = load %object** %var_s 
; compilenode returning %var_val_s886 
  %var_val_spc887 = load %object** %var_spc 
; compilenode returning %var_val_spc887 
  %str888 = getelementptr [6 x i8]* @.str468, i32 0, i32 0 
  %string888 = call %object* @alloc_String(i8* %str888) 
; compilenode returning %string888 
  store %object* %string888, %object** %params_0 
  %opresult890 = call %object* @callmethod(%object* %var_val_spc887, i8* getelementptr([3 x i8]* @.str469,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult890 
  store %object* %opresult890, %object** %params_0 
  %opresult892 = call %object* @callmethod(%object* %var_val_s886, i8* getelementptr([3 x i8]* @.str470,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult892 
  store %object* %opresult892, %object** %var_s 
; compilenode returning %opresult892 
; compilenode returning %self 
  %call894 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str471,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call894 
; compilenode returning %call894 
; compilenode returning %call894 
  %obj895 = call %object* @alloc_obj() 
  %closure896 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure896, %object** %var_s) 
  call void @addtoclosure(%object*** %closure896, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure896, %object** %var_depth) 
  %selfpp912 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp912 
  call void @addtoclosure(%object*** %closure896, %object** %selfpp912) 
  call void @addclosuremethod(%object* %obj895, i8* getelementptr([6 x i8]* @.str.methname896, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply896), %object*** %closure896) 
; compilenode returning %obj895 
  store %object* %call894, %object** %params_0 
  %iter893 = call %object* @callmethod(%object* %call894, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor893 
BeginFor893: 
  %condobj893 = call %object* @callmethod(%object* %iter893, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond893_valp = call i1 @istrue(%object* %condobj893) 
  %cond893 = icmp eq i1 0, %cond893_valp 
br i1 %cond893, label %EndFor893, label %ForBody893 
ForBody893: 
 %forval893 = call %object* @callmethod(%object* %iter893, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval893, %object** %params_0 
  call %object* @callmethod(%object* %obj895, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor893 
EndFor893: 
; compilenode returning %call894 
  %var_val_s913 = load %object** %var_s 
; compilenode returning %var_val_s913 
  %str914 = getelementptr [2 x i8]* @.str478, i32 0, i32 0 
  %string914 = call %object* @alloc_String(i8* %str914) 
; compilenode returning %string914 
  store %object* %string914, %object** %params_0 
  %opresult916 = call %object* @callmethod(%object* %var_val_s913, i8* getelementptr([3 x i8]* @.str479,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult916 
  store %object* %opresult916, %object** %var_s 
; compilenode returning %opresult916 
  %var_val_s917 = load %object** %var_s 
; compilenode returning %var_val_s917 
  %var_val_spc918 = load %object** %var_spc 
; compilenode returning %var_val_spc918 
  %str919 = getelementptr [6 x i8]* @.str480, i32 0, i32 0 
  %string919 = call %object* @alloc_String(i8* %str919) 
; compilenode returning %string919 
  store %object* %string919, %object** %params_0 
  %opresult921 = call %object* @callmethod(%object* %var_val_spc918, i8* getelementptr([3 x i8]* @.str481,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult921 
  store %object* %opresult921, %object** %params_0 
  %opresult923 = call %object* @callmethod(%object* %var_val_s917, i8* getelementptr([3 x i8]* @.str482,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult923 
  store %object* %opresult923, %object** %var_s 
; compilenode returning %opresult923 
; compilenode returning %self 
  %call925 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str483,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call925 
; compilenode returning %call925 
; compilenode returning %call925 
  %obj926 = call %object* @alloc_obj() 
  %closure927 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure927, %object** %var_s) 
  call void @addtoclosure(%object*** %closure927, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure927, %object** %var_depth) 
  %selfpp943 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp943 
  call void @addtoclosure(%object*** %closure927, %object** %selfpp943) 
  call void @addclosuremethod(%object* %obj926, i8* getelementptr([6 x i8]* @.str.methname927, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply927), %object*** %closure927) 
; compilenode returning %obj926 
  store %object* %call925, %object** %params_0 
  %iter924 = call %object* @callmethod(%object* %call925, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor924 
BeginFor924: 
  %condobj924 = call %object* @callmethod(%object* %iter924, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond924_valp = call i1 @istrue(%object* %condobj924) 
  %cond924 = icmp eq i1 0, %cond924_valp 
br i1 %cond924, label %EndFor924, label %ForBody924 
ForBody924: 
 %forval924 = call %object* @callmethod(%object* %iter924, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval924, %object** %params_0 
  call %object* @callmethod(%object* %obj926, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor924 
EndFor924: 
; compilenode returning %call925 
  %var_val_s944 = load %object** %var_s 
; compilenode returning %var_val_s944 
  ret %object* %var_val_s944 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astif 
define %object* @meth_astif843(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_cond = getelementptr %object** %args, i32 0 
  %var_thenblock = getelementptr %object** %args, i32 1 
  %var_elseblock = getelementptr %object** %args, i32 2 
  %obj844 = call %object* @alloc_obj() 
  %str845 = getelementptr [3 x i8]* @.str444, i32 0, i32 0 
  %string845 = call %object* @alloc_String(i8* %str845) 
; compilenode returning %string845 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj844, %object* %string845, i32 0) 
  call void @addmethod(%object* %obj844, i8* getelementptr([5 x i8]* @.str.methname846, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_846)) 
  call void @addmethod(%object* %obj844, i8* getelementptr([7 x i8]* @.str.methnamew846, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_846)) 
  %var_val_cond847 = load %object** %var_cond 
; compilenode returning %var_val_cond847 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj844, %object* %var_val_cond847, i32 1) 
  call void @addmethod(%object* %obj844, i8* getelementptr([6 x i8]* @.str.methname848, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_848)) 
  call void @addmethod(%object* %obj844, i8* getelementptr([8 x i8]* @.str.methnamew848, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_848)) 
  %var_val_thenblock849 = load %object** %var_thenblock 
; compilenode returning %var_val_thenblock849 
; OBJECT VAR DEC thenblock 
  call void @adddatum(%object* %obj844, %object* %var_val_thenblock849, i32 2) 
  call void @addmethod(%object* %obj844, i8* getelementptr([10 x i8]* @.str.methname850, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_thenblock_850)) 
  call void @addmethod(%object* %obj844, i8* getelementptr([12 x i8]* @.str.methnamew850, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_thenblock_850)) 
  %var_val_elseblock851 = load %object** %var_elseblock 
; compilenode returning %var_val_elseblock851 
; OBJECT VAR DEC elseblock 
  call void @adddatum(%object* %obj844, %object* %var_val_elseblock851, i32 3) 
  call void @addmethod(%object* %obj844, i8* getelementptr([10 x i8]* @.str.methname852, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_elseblock_852)) 
  call void @addmethod(%object* %obj844, i8* getelementptr([12 x i8]* @.str.methnamew852, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_elseblock_852)) 
  %str853 = getelementptr [1 x i8]* @.str453, i32 0, i32 0 
  %string853 = call %object* @alloc_String(i8* %str853) 
; compilenode returning %string853 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj844, %object* %string853, i32 4) 
  call void @addmethod(%object* %obj844, i8* getelementptr([9 x i8]* @.str.methname854, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_854)) 
  call void @addmethod(%object* %obj844, i8* getelementptr([11 x i8]* @.str.methnamew854, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_854)) 
  call void @addmethod(%object* %obj844, i8* getelementptr([7 x i8]* @.str.methname855, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty855)) 
; compilenode returning %obj844 
  ret %object* %obj844 
} 
;;;; ENDS 
define %object* @reader_type_948(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_948(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_950(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_950(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_params_952(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_params_952(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_body_954(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_body_954(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_selfclosure_956(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_selfclosure_956(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_958(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 5 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_958(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 5 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply967(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc968 = load %object** %var_spc 
; compilenode returning %var_val_spc968 
  %str969 = getelementptr [3 x i8]* @.str508, i32 0, i32 0 
  %string969 = call %object* @alloc_String(i8* %str969) 
; compilenode returning %string969 
  store %object* %string969, %object** %params_0 
  %opresult971 = call %object* @callmethod(%object* %var_val_spc968, i8* getelementptr([3 x i8]* @.str509,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult971 
  store %object* %opresult971, %object** %var_spc 
; compilenode returning %opresult971 
  ret %object* %opresult971 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call981 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %self 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_mx1011 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply1003(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_mx = getelementptr %object** %args, i32 0 
  %var_val_s1004 = load %object** %var_s 
; compilenode returning %var_val_s1004 
  %str1005 = getelementptr [4 x i8]* @.str524, i32 0, i32 0 
  %string1005 = call %object* @alloc_String(i8* %str1005) 
; compilenode returning %string1005 
  %var_val_spc1006 = load %object** %var_spc 
; compilenode returning %var_val_spc1006 
  %var_val_depth1007 = load %object** %var_depth 
; compilenode returning %var_val_depth1007 
  %num1008 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num1008 
  store %object* %num1008, %object** %params_0 
  %sum1010 = call %object* @callmethod(%object* %var_val_depth1007, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1010 
  store %object* %sum1010, %object** %params_0 
  %var_val_mx1011 = load %object** %var_mx 
; compilenode returning %var_val_mx1011 
  %call1012 = call %object* @callmethod(%object* %var_val_mx1011, i8* getelementptr([7 x i8]* @.str525,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1012 
; compilenode returning %call1012 
  store %object* %call1012, %object** %params_0 
  %opresult1014 = call %object* @callmethod(%object* %var_val_spc1006, i8* getelementptr([3 x i8]* @.str526,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1014 
  store %object* %opresult1014, %object** %params_0 
  %opresult1016 = call %object* @callmethod(%object* %string1005, i8* getelementptr([3 x i8]* @.str527,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1016 
  store %object* %opresult1016, %object** %params_0 
  %opresult1018 = call %object* @callmethod(%object* %var_val_s1004, i8* getelementptr([3 x i8]* @.str528,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1018 
  store %object* %opresult1018, %object** %var_s 
; compilenode returning %opresult1018 
  ret %object* %opresult1018 
} 
;;;; ENDS 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_mx1042 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply1034(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_mx = getelementptr %object** %args, i32 0 
  %var_val_s1035 = load %object** %var_s 
; compilenode returning %var_val_s1035 
  %str1036 = getelementptr [4 x i8]* @.str536, i32 0, i32 0 
  %string1036 = call %object* @alloc_String(i8* %str1036) 
; compilenode returning %string1036 
  %var_val_spc1037 = load %object** %var_spc 
; compilenode returning %var_val_spc1037 
  %var_val_depth1038 = load %object** %var_depth 
; compilenode returning %var_val_depth1038 
  %num1039 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num1039 
  store %object* %num1039, %object** %params_0 
  %sum1041 = call %object* @callmethod(%object* %var_val_depth1038, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1041 
  store %object* %sum1041, %object** %params_0 
  %var_val_mx1042 = load %object** %var_mx 
; compilenode returning %var_val_mx1042 
  %call1043 = call %object* @callmethod(%object* %var_val_mx1042, i8* getelementptr([7 x i8]* @.str537,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1043 
; compilenode returning %call1043 
  store %object* %call1043, %object** %params_0 
  %opresult1045 = call %object* @callmethod(%object* %var_val_spc1037, i8* getelementptr([3 x i8]* @.str538,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1045 
  store %object* %opresult1045, %object** %params_0 
  %opresult1047 = call %object* @callmethod(%object* %string1036, i8* getelementptr([3 x i8]* @.str539,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1047 
  store %object* %opresult1047, %object** %params_0 
  %opresult1049 = call %object* @callmethod(%object* %var_val_s1035, i8* getelementptr([3 x i8]* @.str540,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1049 
  store %object* %opresult1049, %object** %var_s 
; compilenode returning %opresult1049 
  ret %object* %opresult1049 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty959(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str960 = getelementptr [1 x i8]* @.str506, i32 0, i32 0 
  %string960 = call %object* @alloc_String(i8* %str960) 
; compilenode returning %string960 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string960, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num962 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num962 
  %var_val_depth963 = load %object** %var_depth 
; compilenode returning %var_val_depth963 
  store %object* %var_val_depth963, %object** %params_0 
  %opresult965 = call %object* @callmethod(%object* %num962, i8* getelementptr([3 x i8]* @.str507,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult965 
  %obj966 = call %object* @alloc_obj() 
  %closure967 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure967, %object** %var_spc) 
  %selfpp972 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp972 
  call void @addtoclosure(%object*** %closure967, %object** %selfpp972) 
  call void @addclosuremethod(%object* %obj966, i8* getelementptr([6 x i8]* @.str.methname967, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply967), %object*** %closure967) 
; compilenode returning %obj966 
  store %object* %opresult965, %object** %params_0 
  %iter961 = call %object* @callmethod(%object* %opresult965, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor961 
BeginFor961: 
  %condobj961 = call %object* @callmethod(%object* %iter961, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond961_valp = call i1 @istrue(%object* %condobj961) 
  %cond961 = icmp eq i1 0, %cond961_valp 
br i1 %cond961, label %EndFor961, label %ForBody961 
ForBody961: 
 %forval961 = call %object* @callmethod(%object* %iter961, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval961, %object** %params_0 
  call %object* @callmethod(%object* %obj966, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor961 
EndFor961: 
; compilenode returning %opresult965 
  %str973 = getelementptr [8 x i8]* @.str511, i32 0, i32 0 
  %string973 = call %object* @alloc_String(i8* %str973) 
; compilenode returning %string973 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string973, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s974 = load %object** %var_s 
; compilenode returning %var_val_s974 
  %var_val_spc975 = load %object** %var_spc 
; compilenode returning %var_val_spc975 
  %str976 = getelementptr [7 x i8]* @.str512, i32 0, i32 0 
  %string976 = call %object* @alloc_String(i8* %str976) 
; compilenode returning %string976 
  %var_val_depth977 = load %object** %var_depth 
; compilenode returning %var_val_depth977 
  %num978 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num978 
  store %object* %num978, %object** %params_0 
  %sum980 = call %object* @callmethod(%object* %var_val_depth977, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum980 
  store %object* %sum980, %object** %params_0 
; compilenode returning %self 
  %call981 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str513,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call981 
; compilenode returning %call981 
; compilenode returning %call981 
  %call982 = call %object* @callmethod(%object* %call981, i8* getelementptr([7 x i8]* @.str514,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call982 
; compilenode returning %call982 
  store %object* %call982, %object** %params_0 
  %opresult984 = call %object* @callmethod(%object* %string976, i8* getelementptr([3 x i8]* @.str515,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult984 
  store %object* %opresult984, %object** %params_0 
  %opresult986 = call %object* @callmethod(%object* %var_val_spc975, i8* getelementptr([3 x i8]* @.str516,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult986 
  store %object* %opresult986, %object** %params_0 
  %opresult988 = call %object* @callmethod(%object* %var_val_s974, i8* getelementptr([3 x i8]* @.str517,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult988 
  store %object* %opresult988, %object** %var_s 
; compilenode returning %opresult988 
  %var_val_s989 = load %object** %var_s 
; compilenode returning %var_val_s989 
  %str990 = getelementptr [2 x i8]* @.str518, i32 0, i32 0 
  %string990 = call %object* @alloc_String(i8* %str990) 
; compilenode returning %string990 
  store %object* %string990, %object** %params_0 
  %opresult992 = call %object* @callmethod(%object* %var_val_s989, i8* getelementptr([3 x i8]* @.str519,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult992 
  store %object* %opresult992, %object** %var_s 
; compilenode returning %opresult992 
  %var_val_s993 = load %object** %var_s 
; compilenode returning %var_val_s993 
  %var_val_spc994 = load %object** %var_spc 
; compilenode returning %var_val_spc994 
  %str995 = getelementptr [12 x i8]* @.str520, i32 0, i32 0 
  %string995 = call %object* @alloc_String(i8* %str995) 
; compilenode returning %string995 
  store %object* %string995, %object** %params_0 
  %opresult997 = call %object* @callmethod(%object* %var_val_spc994, i8* getelementptr([3 x i8]* @.str521,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult997 
  store %object* %opresult997, %object** %params_0 
  %opresult999 = call %object* @callmethod(%object* %var_val_s993, i8* getelementptr([3 x i8]* @.str522,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult999 
  store %object* %opresult999, %object** %var_s 
; compilenode returning %opresult999 
; compilenode returning %self 
  %call1001 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str523,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1001 
; compilenode returning %call1001 
; compilenode returning %call1001 
  %obj1002 = call %object* @alloc_obj() 
  %closure1003 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure1003, %object** %var_s) 
  call void @addtoclosure(%object*** %closure1003, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure1003, %object** %var_depth) 
  %selfpp1019 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1019 
  call void @addtoclosure(%object*** %closure1003, %object** %selfpp1019) 
  call void @addclosuremethod(%object* %obj1002, i8* getelementptr([6 x i8]* @.str.methname1003, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1003), %object*** %closure1003) 
; compilenode returning %obj1002 
  store %object* %call1001, %object** %params_0 
  %iter1000 = call %object* @callmethod(%object* %call1001, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1000 
BeginFor1000: 
  %condobj1000 = call %object* @callmethod(%object* %iter1000, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1000_valp = call i1 @istrue(%object* %condobj1000) 
  %cond1000 = icmp eq i1 0, %cond1000_valp 
br i1 %cond1000, label %EndFor1000, label %ForBody1000 
ForBody1000: 
 %forval1000 = call %object* @callmethod(%object* %iter1000, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1000, %object** %params_0 
  call %object* @callmethod(%object* %obj1002, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1000 
EndFor1000: 
; compilenode returning %call1001 
  %var_val_s1020 = load %object** %var_s 
; compilenode returning %var_val_s1020 
  %str1021 = getelementptr [2 x i8]* @.str530, i32 0, i32 0 
  %string1021 = call %object* @alloc_String(i8* %str1021) 
; compilenode returning %string1021 
  store %object* %string1021, %object** %params_0 
  %opresult1023 = call %object* @callmethod(%object* %var_val_s1020, i8* getelementptr([3 x i8]* @.str531,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1023 
  store %object* %opresult1023, %object** %var_s 
; compilenode returning %opresult1023 
  %var_val_s1024 = load %object** %var_s 
; compilenode returning %var_val_s1024 
  %var_val_spc1025 = load %object** %var_spc 
; compilenode returning %var_val_spc1025 
  %str1026 = getelementptr [6 x i8]* @.str532, i32 0, i32 0 
  %string1026 = call %object* @alloc_String(i8* %str1026) 
; compilenode returning %string1026 
  store %object* %string1026, %object** %params_0 
  %opresult1028 = call %object* @callmethod(%object* %var_val_spc1025, i8* getelementptr([3 x i8]* @.str533,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1028 
  store %object* %opresult1028, %object** %params_0 
  %opresult1030 = call %object* @callmethod(%object* %var_val_s1024, i8* getelementptr([3 x i8]* @.str534,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1030 
  store %object* %opresult1030, %object** %var_s 
; compilenode returning %opresult1030 
; compilenode returning %self 
  %call1032 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str535,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1032 
; compilenode returning %call1032 
; compilenode returning %call1032 
  %obj1033 = call %object* @alloc_obj() 
  %closure1034 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure1034, %object** %var_s) 
  call void @addtoclosure(%object*** %closure1034, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure1034, %object** %var_depth) 
  %selfpp1050 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1050 
  call void @addtoclosure(%object*** %closure1034, %object** %selfpp1050) 
  call void @addclosuremethod(%object* %obj1033, i8* getelementptr([6 x i8]* @.str.methname1034, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1034), %object*** %closure1034) 
; compilenode returning %obj1033 
  store %object* %call1032, %object** %params_0 
  %iter1031 = call %object* @callmethod(%object* %call1032, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1031 
BeginFor1031: 
  %condobj1031 = call %object* @callmethod(%object* %iter1031, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1031_valp = call i1 @istrue(%object* %condobj1031) 
  %cond1031 = icmp eq i1 0, %cond1031_valp 
br i1 %cond1031, label %EndFor1031, label %ForBody1031 
ForBody1031: 
 %forval1031 = call %object* @callmethod(%object* %iter1031, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1031, %object** %params_0 
  call %object* @callmethod(%object* %obj1033, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1031 
EndFor1031: 
; compilenode returning %call1032 
  %var_val_s1051 = load %object** %var_s 
; compilenode returning %var_val_s1051 
  ret %object* %var_val_s1051 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astmethod 
define %object* @meth_astmethod945(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_name = getelementptr %object** %args, i32 0 
  %var_params = getelementptr %object** %args, i32 1 
  %var_body = getelementptr %object** %args, i32 2 
  %obj946 = call %object* @alloc_obj() 
  %str947 = getelementptr [7 x i8]* @.str492, i32 0, i32 0 
  %string947 = call %object* @alloc_String(i8* %str947) 
; compilenode returning %string947 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj946, %object* %string947, i32 0) 
  call void @addmethod(%object* %obj946, i8* getelementptr([5 x i8]* @.str.methname948, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_948)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([7 x i8]* @.str.methnamew948, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_948)) 
  %var_val_name949 = load %object** %var_name 
; compilenode returning %var_val_name949 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj946, %object* %var_val_name949, i32 1) 
  call void @addmethod(%object* %obj946, i8* getelementptr([6 x i8]* @.str.methname950, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_950)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([8 x i8]* @.str.methnamew950, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_950)) 
  %var_val_params951 = load %object** %var_params 
; compilenode returning %var_val_params951 
; OBJECT VAR DEC params 
  call void @adddatum(%object* %obj946, %object* %var_val_params951, i32 2) 
  call void @addmethod(%object* %obj946, i8* getelementptr([7 x i8]* @.str.methname952, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_params_952)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([9 x i8]* @.str.methnamew952, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_params_952)) 
  %var_val_body953 = load %object** %var_body 
; compilenode returning %var_val_body953 
; OBJECT VAR DEC body 
  call void @adddatum(%object* %obj946, %object* %var_val_body953, i32 3) 
  call void @addmethod(%object* %obj946, i8* getelementptr([5 x i8]* @.str.methname954, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_body_954)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([7 x i8]* @.str.methnamew954, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_body_954)) 
  %bool955 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool955 
; OBJECT VAR DEC selfclosure 
  call void @adddatum(%object* %obj946, %object* %bool955, i32 4) 
  call void @addmethod(%object* %obj946, i8* getelementptr([12 x i8]* @.str.methname956, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_selfclosure_956)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([14 x i8]* @.str.methnamew956, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_selfclosure_956)) 
  %str957 = getelementptr [1 x i8]* @.str503, i32 0, i32 0 
  %string957 = call %object* @alloc_String(i8* %str957) 
; compilenode returning %string957 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj946, %object* %string957, i32 5) 
  call void @addmethod(%object* %obj946, i8* getelementptr([9 x i8]* @.str.methname958, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_958)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([11 x i8]* @.str.methnamew958, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_958)) 
  call void @addmethod(%object* %obj946, i8* getelementptr([7 x i8]* @.str.methname959, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty959)) 
; compilenode returning %obj946 
  ret %object* %obj946 
} 
;;;; ENDS 
define %object* @reader_type_1055(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1055(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1057(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1057(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_with_1059(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_with_1059(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_line_1064(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_line_1064(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1066(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1066(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1075(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1076 = load %object** %var_spc 
; compilenode returning %var_val_spc1076 
  %str1077 = getelementptr [3 x i8]* @.str558, i32 0, i32 0 
  %string1077 = call %object* @alloc_String(i8* %str1077) 
; compilenode returning %string1077 
  store %object* %string1077, %object** %params_0 
  %opresult1079 = call %object* @callmethod(%object* %var_val_spc1076, i8* getelementptr([3 x i8]* @.str559,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1079 
  store %object* %opresult1079, %object** %var_spc 
; compilenode returning %opresult1079 
  ret %object* %opresult1079 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call1096 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_x1126 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply1118(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_s1119 = load %object** %var_s 
; compilenode returning %var_val_s1119 
  %str1120 = getelementptr [4 x i8]* @.str577, i32 0, i32 0 
  %string1120 = call %object* @alloc_String(i8* %str1120) 
; compilenode returning %string1120 
  %var_val_spc1121 = load %object** %var_spc 
; compilenode returning %var_val_spc1121 
  %var_val_depth1122 = load %object** %var_depth 
; compilenode returning %var_val_depth1122 
  %num1123 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num1123 
  store %object* %num1123, %object** %params_0 
  %sum1125 = call %object* @callmethod(%object* %var_val_depth1122, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1125 
  store %object* %sum1125, %object** %params_0 
  %var_val_x1126 = load %object** %var_x 
; compilenode returning %var_val_x1126 
  %call1127 = call %object* @callmethod(%object* %var_val_x1126, i8* getelementptr([7 x i8]* @.str578,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1127 
; compilenode returning %call1127 
  store %object* %call1127, %object** %params_0 
  %opresult1129 = call %object* @callmethod(%object* %var_val_spc1121, i8* getelementptr([3 x i8]* @.str579,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1129 
  store %object* %opresult1129, %object** %params_0 
  %opresult1131 = call %object* @callmethod(%object* %string1120, i8* getelementptr([3 x i8]* @.str580,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1131 
  store %object* %opresult1131, %object** %params_0 
  %opresult1133 = call %object* @callmethod(%object* %var_val_s1119, i8* getelementptr([3 x i8]* @.str581,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1133 
  store %object* %opresult1133, %object** %var_s 
; compilenode returning %opresult1133 
  ret %object* %opresult1133 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1067(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1068 = getelementptr [1 x i8]* @.str556, i32 0, i32 0 
  %string1068 = call %object* @alloc_String(i8* %str1068) 
; compilenode returning %string1068 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1068, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1070 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1070 
  %var_val_depth1071 = load %object** %var_depth 
; compilenode returning %var_val_depth1071 
  store %object* %var_val_depth1071, %object** %params_0 
  %opresult1073 = call %object* @callmethod(%object* %num1070, i8* getelementptr([3 x i8]* @.str557,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1073 
  %obj1074 = call %object* @alloc_obj() 
  %closure1075 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1075, %object** %var_spc) 
  %selfpp1080 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1080 
  call void @addtoclosure(%object*** %closure1075, %object** %selfpp1080) 
  call void @addclosuremethod(%object* %obj1074, i8* getelementptr([6 x i8]* @.str.methname1075, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1075), %object*** %closure1075) 
; compilenode returning %obj1074 
  store %object* %opresult1073, %object** %params_0 
  %iter1069 = call %object* @callmethod(%object* %opresult1073, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1069 
BeginFor1069: 
  %condobj1069 = call %object* @callmethod(%object* %iter1069, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1069_valp = call i1 @istrue(%object* %condobj1069) 
  %cond1069 = icmp eq i1 0, %cond1069_valp 
br i1 %cond1069, label %EndFor1069, label %ForBody1069 
ForBody1069: 
 %forval1069 = call %object* @callmethod(%object* %iter1069, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1069, %object** %params_0 
  call %object* @callmethod(%object* %obj1074, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1069 
EndFor1069: 
; compilenode returning %opresult1073 
  %str1081 = getelementptr [6 x i8]* @.str561, i32 0, i32 0 
  %string1081 = call %object* @alloc_String(i8* %str1081) 
; compilenode returning %string1081 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string1081, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s1082 = load %object** %var_s 
; compilenode returning %var_val_s1082 
  %var_val_spc1083 = load %object** %var_spc 
; compilenode returning %var_val_spc1083 
  %str1084 = getelementptr [9 x i8]* @.str562, i32 0, i32 0 
  %string1084 = call %object* @alloc_String(i8* %str1084) 
; compilenode returning %string1084 
  store %object* %string1084, %object** %params_0 
  %opresult1086 = call %object* @callmethod(%object* %var_val_spc1083, i8* getelementptr([3 x i8]* @.str563,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1086 
  store %object* %opresult1086, %object** %params_0 
  %opresult1088 = call %object* @callmethod(%object* %var_val_s1082, i8* getelementptr([3 x i8]* @.str564,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1088 
  store %object* %opresult1088, %object** %var_s 
; compilenode returning %opresult1088 
  %var_val_s1089 = load %object** %var_s 
; compilenode returning %var_val_s1089 
  %str1090 = getelementptr [3 x i8]* @.str565, i32 0, i32 0 
  %string1090 = call %object* @alloc_String(i8* %str1090) 
; compilenode returning %string1090 
  %var_val_spc1091 = load %object** %var_spc 
; compilenode returning %var_val_spc1091 
  %var_val_depth1092 = load %object** %var_depth 
; compilenode returning %var_val_depth1092 
  %num1093 = call %object* @alloc_Float64(double 2.0) 
; compilenode returning %num1093 
  store %object* %num1093, %object** %params_0 
  %sum1095 = call %object* @callmethod(%object* %var_val_depth1092, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1095 
  store %object* %sum1095, %object** %params_0 
; compilenode returning %self 
  %call1096 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str566,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1096 
; compilenode returning %call1096 
; compilenode returning %call1096 
  %call1097 = call %object* @callmethod(%object* %call1096, i8* getelementptr([7 x i8]* @.str567,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1097 
; compilenode returning %call1097 
  store %object* %call1097, %object** %params_0 
  %opresult1099 = call %object* @callmethod(%object* %var_val_spc1091, i8* getelementptr([3 x i8]* @.str568,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1099 
  store %object* %opresult1099, %object** %params_0 
  %opresult1101 = call %object* @callmethod(%object* %string1090, i8* getelementptr([3 x i8]* @.str569,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1101 
  store %object* %opresult1101, %object** %params_0 
  %opresult1103 = call %object* @callmethod(%object* %var_val_s1089, i8* getelementptr([3 x i8]* @.str570,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1103 
  store %object* %opresult1103, %object** %var_s 
; compilenode returning %opresult1103 
  %var_val_s1104 = load %object** %var_s 
; compilenode returning %var_val_s1104 
  %str1105 = getelementptr [2 x i8]* @.str571, i32 0, i32 0 
  %string1105 = call %object* @alloc_String(i8* %str1105) 
; compilenode returning %string1105 
  store %object* %string1105, %object** %params_0 
  %opresult1107 = call %object* @callmethod(%object* %var_val_s1104, i8* getelementptr([3 x i8]* @.str572,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1107 
  store %object* %opresult1107, %object** %var_s 
; compilenode returning %opresult1107 
  %var_val_s1108 = load %object** %var_s 
; compilenode returning %var_val_s1108 
  %var_val_spc1109 = load %object** %var_spc 
; compilenode returning %var_val_spc1109 
  %str1110 = getelementptr [12 x i8]* @.str573, i32 0, i32 0 
  %string1110 = call %object* @alloc_String(i8* %str1110) 
; compilenode returning %string1110 
  store %object* %string1110, %object** %params_0 
  %opresult1112 = call %object* @callmethod(%object* %var_val_spc1109, i8* getelementptr([3 x i8]* @.str574,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1112 
  store %object* %opresult1112, %object** %params_0 
  %opresult1114 = call %object* @callmethod(%object* %var_val_s1108, i8* getelementptr([3 x i8]* @.str575,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1114 
  store %object* %opresult1114, %object** %var_s 
; compilenode returning %opresult1114 
; compilenode returning %self 
  %call1116 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str576,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1116 
; compilenode returning %call1116 
; compilenode returning %call1116 
  %obj1117 = call %object* @alloc_obj() 
  %closure1118 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure1118, %object** %var_s) 
  call void @addtoclosure(%object*** %closure1118, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure1118, %object** %var_depth) 
  %selfpp1134 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1134 
  call void @addtoclosure(%object*** %closure1118, %object** %selfpp1134) 
  call void @addclosuremethod(%object* %obj1117, i8* getelementptr([6 x i8]* @.str.methname1118, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1118), %object*** %closure1118) 
; compilenode returning %obj1117 
  store %object* %call1116, %object** %params_0 
  %iter1115 = call %object* @callmethod(%object* %call1116, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1115 
BeginFor1115: 
  %condobj1115 = call %object* @callmethod(%object* %iter1115, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1115_valp = call i1 @istrue(%object* %condobj1115) 
  %cond1115 = icmp eq i1 0, %cond1115_valp 
br i1 %cond1115, label %EndFor1115, label %ForBody1115 
ForBody1115: 
 %forval1115 = call %object* @callmethod(%object* %iter1115, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1115, %object** %params_0 
  call %object* @callmethod(%object* %obj1117, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1115 
EndFor1115: 
; compilenode returning %call1116 
  %var_val_s1135 = load %object** %var_s 
; compilenode returning %var_val_s1135 
  ret %object* %var_val_s1135 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astcall 
; have closure method: 1 
define %object* @meth_astcall1052(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_linenum = getelementptr %object*** %closure, i32 0 
  %var_linenum = load %object*** %varc_linenum 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_what = getelementptr %object** %args, i32 0 
  %var_with = getelementptr %object** %args, i32 1 
  %obj1053 = call %object* @alloc_obj() 
  %str1054 = getelementptr [5 x i8]* @.str544, i32 0, i32 0 
  %string1054 = call %object* @alloc_String(i8* %str1054) 
; compilenode returning %string1054 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1053, %object* %string1054, i32 0) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([5 x i8]* @.str.methname1055, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1055)) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([7 x i8]* @.str.methnamew1055, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1055)) 
  %var_val_what1056 = load %object** %var_what 
; compilenode returning %var_val_what1056 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1053, %object* %var_val_what1056, i32 1) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([6 x i8]* @.str.methname1057, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1057)) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([8 x i8]* @.str.methnamew1057, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1057)) 
  %var_val_with1058 = load %object** %var_with 
; compilenode returning %var_val_with1058 
; OBJECT VAR DEC with 
  call void @adddatum(%object* %obj1053, %object* %var_val_with1058, i32 2) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([5 x i8]* @.str.methname1059, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_with_1059)) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([7 x i8]* @.str.methnamew1059, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_with_1059)) 
  %num1060 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1060 
  %var_val_linenum1061 = load %object** %var_linenum 
; compilenode returning %var_val_linenum1061 
  store %object* %var_val_linenum1061, %object** %params_0 
  %sum1063 = call %object* @callmethod(%object* %num1060, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1063 
; OBJECT VAR DEC line 
  call void @adddatum(%object* %obj1053, %object* %sum1063, i32 3) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([5 x i8]* @.str.methname1064, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_line_1064)) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([7 x i8]* @.str.methnamew1064, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_line_1064)) 
  %str1065 = getelementptr [1 x i8]* @.str553, i32 0, i32 0 
  %string1065 = call %object* @alloc_String(i8* %str1065) 
; compilenode returning %string1065 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1053, %object* %string1065, i32 4) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([9 x i8]* @.str.methname1066, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1066)) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([11 x i8]* @.str.methnamew1066, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1066)) 
  call void @addmethod(%object* %obj1053, i8* getelementptr([7 x i8]* @.str.methname1067, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1067)) 
; compilenode returning %obj1053 
  ret %object* %obj1053 
} 
;;;; ENDS 
define %object* @reader_type_1139(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1139(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1141(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1141(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1143(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1143(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1152(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1153 = load %object** %var_spc 
; compilenode returning %var_val_spc1153 
  %str1154 = getelementptr [3 x i8]* @.str595, i32 0, i32 0 
  %string1154 = call %object* @alloc_String(i8* %str1154) 
; compilenode returning %string1154 
  store %object* %string1154, %object** %params_0 
  %opresult1156 = call %object* @callmethod(%object* %var_val_spc1153, i8* getelementptr([3 x i8]* @.str596,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1156 
  store %object* %opresult1156, %object** %var_spc 
; compilenode returning %opresult1156 
  ret %object* %opresult1156 
} 
;;;; ENDS 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_x1170 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply1162(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_s1163 = load %object** %var_s 
; compilenode returning %var_val_s1163 
  %str1164 = getelementptr [2 x i8]* @.str600, i32 0, i32 0 
  %string1164 = call %object* @alloc_String(i8* %str1164) 
; compilenode returning %string1164 
  %var_val_spc1165 = load %object** %var_spc 
; compilenode returning %var_val_spc1165 
  %var_val_depth1166 = load %object** %var_depth 
; compilenode returning %var_val_depth1166 
  %num1167 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1167 
  store %object* %num1167, %object** %params_0 
  %sum1169 = call %object* @callmethod(%object* %var_val_depth1166, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1169 
  store %object* %sum1169, %object** %params_0 
  %var_val_x1170 = load %object** %var_x 
; compilenode returning %var_val_x1170 
  %call1171 = call %object* @callmethod(%object* %var_val_x1170, i8* getelementptr([7 x i8]* @.str601,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1171 
; compilenode returning %call1171 
  store %object* %call1171, %object** %params_0 
  %opresult1173 = call %object* @callmethod(%object* %var_val_spc1165, i8* getelementptr([3 x i8]* @.str602,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1173 
  store %object* %opresult1173, %object** %params_0 
  %opresult1175 = call %object* @callmethod(%object* %string1164, i8* getelementptr([3 x i8]* @.str603,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1175 
  store %object* %opresult1175, %object** %params_0 
  %opresult1177 = call %object* @callmethod(%object* %var_val_s1163, i8* getelementptr([3 x i8]* @.str604,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1177 
  store %object* %opresult1177, %object** %var_s 
; compilenode returning %opresult1177 
  ret %object* %opresult1177 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1144(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1145 = getelementptr [1 x i8]* @.str593, i32 0, i32 0 
  %string1145 = call %object* @alloc_String(i8* %str1145) 
; compilenode returning %string1145 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1145, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1147 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1147 
  %var_val_depth1148 = load %object** %var_depth 
; compilenode returning %var_val_depth1148 
  store %object* %var_val_depth1148, %object** %params_0 
  %opresult1150 = call %object* @callmethod(%object* %num1147, i8* getelementptr([3 x i8]* @.str594,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1150 
  %obj1151 = call %object* @alloc_obj() 
  %closure1152 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1152, %object** %var_spc) 
  %selfpp1157 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1157 
  call void @addtoclosure(%object*** %closure1152, %object** %selfpp1157) 
  call void @addclosuremethod(%object* %obj1151, i8* getelementptr([6 x i8]* @.str.methname1152, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1152), %object*** %closure1152) 
; compilenode returning %obj1151 
  store %object* %opresult1150, %object** %params_0 
  %iter1146 = call %object* @callmethod(%object* %opresult1150, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1146 
BeginFor1146: 
  %condobj1146 = call %object* @callmethod(%object* %iter1146, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1146_valp = call i1 @istrue(%object* %condobj1146) 
  %cond1146 = icmp eq i1 0, %cond1146_valp 
br i1 %cond1146, label %EndFor1146, label %ForBody1146 
ForBody1146: 
 %forval1146 = call %object* @callmethod(%object* %iter1146, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1146, %object** %params_0 
  call %object* @callmethod(%object* %obj1151, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1146 
EndFor1146: 
; compilenode returning %opresult1150 
  %str1158 = getelementptr [7 x i8]* @.str598, i32 0, i32 0 
  %string1158 = call %object* @alloc_String(i8* %str1158) 
; compilenode returning %string1158 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string1158, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
; compilenode returning %self 
  %call1160 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str599,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1160 
; compilenode returning %call1160 
; compilenode returning %call1160 
  %obj1161 = call %object* @alloc_obj() 
  %closure1162 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure1162, %object** %var_s) 
  call void @addtoclosure(%object*** %closure1162, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure1162, %object** %var_depth) 
  %selfpp1178 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1178 
  call void @addtoclosure(%object*** %closure1162, %object** %selfpp1178) 
  call void @addclosuremethod(%object* %obj1161, i8* getelementptr([6 x i8]* @.str.methname1162, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1162), %object*** %closure1162) 
; compilenode returning %obj1161 
  store %object* %call1160, %object** %params_0 
  %iter1159 = call %object* @callmethod(%object* %call1160, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1159 
BeginFor1159: 
  %condobj1159 = call %object* @callmethod(%object* %iter1159, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1159_valp = call i1 @istrue(%object* %condobj1159) 
  %cond1159 = icmp eq i1 0, %cond1159_valp 
br i1 %cond1159, label %EndFor1159, label %ForBody1159 
ForBody1159: 
 %forval1159 = call %object* @callmethod(%object* %iter1159, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1159, %object** %params_0 
  call %object* @callmethod(%object* %obj1161, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1159 
EndFor1159: 
; compilenode returning %call1160 
  %var_val_s1179 = load %object** %var_s 
; compilenode returning %var_val_s1179 
  ret %object* %var_val_s1179 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astobject 
define %object* @meth_astobject1136(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_body = getelementptr %object** %args, i32 0 
  %obj1137 = call %object* @alloc_obj() 
  %str1138 = getelementptr [7 x i8]* @.str585, i32 0, i32 0 
  %string1138 = call %object* @alloc_String(i8* %str1138) 
; compilenode returning %string1138 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1137, %object* %string1138, i32 0) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([5 x i8]* @.str.methname1139, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1139)) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([7 x i8]* @.str.methnamew1139, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1139)) 
  %var_val_body1140 = load %object** %var_body 
; compilenode returning %var_val_body1140 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1137, %object* %var_val_body1140, i32 1) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([6 x i8]* @.str.methname1141, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1141)) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([8 x i8]* @.str.methnamew1141, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1141)) 
  %str1142 = getelementptr [1 x i8]* @.str590, i32 0, i32 0 
  %string1142 = call %object* @alloc_String(i8* %str1142) 
; compilenode returning %string1142 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1137, %object* %string1142, i32 2) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([9 x i8]* @.str.methname1143, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1143)) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([11 x i8]* @.str.methnamew1143, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1143)) 
  call void @addmethod(%object* %obj1137, i8* getelementptr([7 x i8]* @.str.methname1144, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1144)) 
; compilenode returning %obj1137 
  ret %object* %obj1137 
} 
;;;; ENDS 
define %object* @reader_type_1183(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1183(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1185(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1185(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1187(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1187(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1196(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_ai = getelementptr %object** %args, i32 0 
  %var_val_spc1197 = load %object** %var_spc 
; compilenode returning %var_val_spc1197 
  %str1198 = getelementptr [3 x i8]* @.str618, i32 0, i32 0 
  %string1198 = call %object* @alloc_String(i8* %str1198) 
; compilenode returning %string1198 
  store %object* %string1198, %object** %params_0 
  %opresult1200 = call %object* @callmethod(%object* %var_val_spc1197, i8* getelementptr([3 x i8]* @.str619,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1200 
  store %object* %opresult1200, %object** %var_spc 
; compilenode returning %opresult1200 
  ret %object* %opresult1200 
} 
;;;; ENDS 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_ax1214 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 4 
define %object* @meth_apply1206(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_s = getelementptr %object*** %closure, i32 0 
  %var_s = load %object*** %varc_s 
  %varc_spc = getelementptr %object*** %closure, i32 1 
  %var_spc = load %object*** %varc_spc 
  %varc_depth = getelementptr %object*** %closure, i32 2 
  %var_depth = load %object*** %varc_depth 
  %varc_self = getelementptr %object*** %closure, i32 3 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_ax = getelementptr %object** %args, i32 0 
  %var_val_s1207 = load %object** %var_s 
; compilenode returning %var_val_s1207 
  %str1208 = getelementptr [2 x i8]* @.str623, i32 0, i32 0 
  %string1208 = call %object* @alloc_String(i8* %str1208) 
; compilenode returning %string1208 
  %var_val_spc1209 = load %object** %var_spc 
; compilenode returning %var_val_spc1209 
  %var_val_depth1210 = load %object** %var_depth 
; compilenode returning %var_val_depth1210 
  %num1211 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1211 
  store %object* %num1211, %object** %params_0 
  %sum1213 = call %object* @callmethod(%object* %var_val_depth1210, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1213 
  store %object* %sum1213, %object** %params_0 
  %var_val_ax1214 = load %object** %var_ax 
; compilenode returning %var_val_ax1214 
  %call1215 = call %object* @callmethod(%object* %var_val_ax1214, i8* getelementptr([7 x i8]* @.str624,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1215 
; compilenode returning %call1215 
  store %object* %call1215, %object** %params_0 
  %opresult1217 = call %object* @callmethod(%object* %var_val_spc1209, i8* getelementptr([3 x i8]* @.str625,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1217 
  store %object* %opresult1217, %object** %params_0 
  %opresult1219 = call %object* @callmethod(%object* %string1208, i8* getelementptr([3 x i8]* @.str626,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1219 
  store %object* %opresult1219, %object** %params_0 
  %opresult1221 = call %object* @callmethod(%object* %var_val_s1207, i8* getelementptr([3 x i8]* @.str627,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1221 
  store %object* %opresult1221, %object** %var_s 
; compilenode returning %opresult1221 
  ret %object* %opresult1221 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1188(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1189 = getelementptr [1 x i8]* @.str616, i32 0, i32 0 
  %string1189 = call %object* @alloc_String(i8* %str1189) 
; compilenode returning %string1189 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1189, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1191 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1191 
  %var_val_depth1192 = load %object** %var_depth 
; compilenode returning %var_val_depth1192 
  store %object* %var_val_depth1192, %object** %params_0 
  %opresult1194 = call %object* @callmethod(%object* %num1191, i8* getelementptr([3 x i8]* @.str617,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1194 
  %obj1195 = call %object* @alloc_obj() 
  %closure1196 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1196, %object** %var_spc) 
  %selfpp1201 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1201 
  call void @addtoclosure(%object*** %closure1196, %object** %selfpp1201) 
  call void @addclosuremethod(%object* %obj1195, i8* getelementptr([6 x i8]* @.str.methname1196, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1196), %object*** %closure1196) 
; compilenode returning %obj1195 
  store %object* %opresult1194, %object** %params_0 
  %iter1190 = call %object* @callmethod(%object* %opresult1194, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1190 
BeginFor1190: 
  %condobj1190 = call %object* @callmethod(%object* %iter1190, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1190_valp = call i1 @istrue(%object* %condobj1190) 
  %cond1190 = icmp eq i1 0, %cond1190_valp 
br i1 %cond1190, label %EndFor1190, label %ForBody1190 
ForBody1190: 
 %forval1190 = call %object* @callmethod(%object* %iter1190, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1190, %object** %params_0 
  call %object* @callmethod(%object* %obj1195, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1190 
EndFor1190: 
; compilenode returning %opresult1194 
  %str1202 = getelementptr [6 x i8]* @.str621, i32 0, i32 0 
  %string1202 = call %object* @alloc_String(i8* %str1202) 
; compilenode returning %string1202 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string1202, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
; compilenode returning %self 
  %call1204 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str622,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1204 
; compilenode returning %call1204 
; compilenode returning %call1204 
  %obj1205 = call %object* @alloc_obj() 
  %closure1206 = call %object*** @createclosure(i32 4) 
  call void @addtoclosure(%object*** %closure1206, %object** %var_s) 
  call void @addtoclosure(%object*** %closure1206, %object** %var_spc) 
  call void @addtoclosure(%object*** %closure1206, %object** %var_depth) 
  %selfpp1222 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1222 
  call void @addtoclosure(%object*** %closure1206, %object** %selfpp1222) 
  call void @addclosuremethod(%object* %obj1205, i8* getelementptr([6 x i8]* @.str.methname1206, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1206), %object*** %closure1206) 
; compilenode returning %obj1205 
  store %object* %call1204, %object** %params_0 
  %iter1203 = call %object* @callmethod(%object* %call1204, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1203 
BeginFor1203: 
  %condobj1203 = call %object* @callmethod(%object* %iter1203, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1203_valp = call i1 @istrue(%object* %condobj1203) 
  %cond1203 = icmp eq i1 0, %cond1203_valp 
br i1 %cond1203, label %EndFor1203, label %ForBody1203 
ForBody1203: 
 %forval1203 = call %object* @callmethod(%object* %iter1203, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1203, %object** %params_0 
  call %object* @callmethod(%object* %obj1205, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1203 
EndFor1203: 
; compilenode returning %call1204 
  %var_val_s1223 = load %object** %var_s 
; compilenode returning %var_val_s1223 
  ret %object* %var_val_s1223 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astarray 
define %object* @meth_astarray1180(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_values = getelementptr %object** %args, i32 0 
  %obj1181 = call %object* @alloc_obj() 
  %str1182 = getelementptr [6 x i8]* @.str608, i32 0, i32 0 
  %string1182 = call %object* @alloc_String(i8* %str1182) 
; compilenode returning %string1182 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1181, %object* %string1182, i32 0) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([5 x i8]* @.str.methname1183, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1183)) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([7 x i8]* @.str.methnamew1183, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1183)) 
  %var_val_values1184 = load %object** %var_values 
; compilenode returning %var_val_values1184 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1181, %object* %var_val_values1184, i32 1) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([6 x i8]* @.str.methname1185, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1185)) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([8 x i8]* @.str.methnamew1185, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1185)) 
  %str1186 = getelementptr [1 x i8]* @.str613, i32 0, i32 0 
  %string1186 = call %object* @alloc_String(i8* %str1186) 
; compilenode returning %string1186 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1181, %object* %string1186, i32 2) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([9 x i8]* @.str.methname1187, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1187)) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([11 x i8]* @.str.methnamew1187, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1187)) 
  call void @addmethod(%object* %obj1181, i8* getelementptr([7 x i8]* @.str.methname1188, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1188)) 
; compilenode returning %obj1181 
  ret %object* %obj1181 
} 
;;;; ENDS 
define %object* @reader_type_1227(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1227(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1229(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1229(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_in_1231(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_in_1231(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1233(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1233(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1242(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1243 = load %object** %var_spc 
; compilenode returning %var_val_spc1243 
  %str1244 = getelementptr [3 x i8]* @.str643, i32 0, i32 0 
  %string1244 = call %object* @alloc_String(i8* %str1244) 
; compilenode returning %string1244 
  store %object* %string1244, %object** %params_0 
  %opresult1246 = call %object* @callmethod(%object* %var_val_spc1243, i8* getelementptr([3 x i8]* @.str644,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1246 
  store %object* %opresult1246, %object** %var_spc 
; compilenode returning %opresult1246 
  ret %object* %opresult1246 
} 
;;;; ENDS 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 3 
; created con 
; pushed statement 
; compiled in to %call1261 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1234(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1235 = getelementptr [1 x i8]* @.str641, i32 0, i32 0 
  %string1235 = call %object* @alloc_String(i8* %str1235) 
; compilenode returning %string1235 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1235, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1237 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1237 
  %var_val_depth1238 = load %object** %var_depth 
; compilenode returning %var_val_depth1238 
  store %object* %var_val_depth1238, %object** %params_0 
  %opresult1240 = call %object* @callmethod(%object* %num1237, i8* getelementptr([3 x i8]* @.str642,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1240 
  %obj1241 = call %object* @alloc_obj() 
  %closure1242 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1242, %object** %var_spc) 
  %selfpp1247 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1247 
  call void @addtoclosure(%object*** %closure1242, %object** %selfpp1247) 
  call void @addclosuremethod(%object* %obj1241, i8* getelementptr([6 x i8]* @.str.methname1242, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1242), %object*** %closure1242) 
; compilenode returning %obj1241 
  store %object* %opresult1240, %object** %params_0 
  %iter1236 = call %object* @callmethod(%object* %opresult1240, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1236 
BeginFor1236: 
  %condobj1236 = call %object* @callmethod(%object* %iter1236, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1236_valp = call i1 @istrue(%object* %condobj1236) 
  %cond1236 = icmp eq i1 0, %cond1236_valp 
br i1 %cond1236, label %EndFor1236, label %ForBody1236 
ForBody1236: 
 %forval1236 = call %object* @callmethod(%object* %iter1236, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1236, %object** %params_0 
  call %object* @callmethod(%object* %obj1241, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1236 
EndFor1236: 
; compilenode returning %opresult1240 
  %str1248 = getelementptr [8 x i8]* @.str646, i32 0, i32 0 
  %string1248 = call %object* @alloc_String(i8* %str1248) 
; compilenode returning %string1248 
; compilenode returning %self 
  %call1249 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str647,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1249 
; compilenode returning %call1249 
; compilenode returning %call1249 
  %str1250 = getelementptr [3 x i8]* @.str648, i32 0, i32 0 
  %string1250 = call %object* @alloc_String(i8* %str1250) 
; compilenode returning %string1250 
  store %object* %string1250, %object** %params_0 
  %opresult1252 = call %object* @callmethod(%object* %call1249, i8* getelementptr([3 x i8]* @.str649,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1252 
  store %object* %opresult1252, %object** %params_0 
  %opresult1254 = call %object* @callmethod(%object* %string1248, i8* getelementptr([3 x i8]* @.str650,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1254 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %opresult1254, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s1255 = load %object** %var_s 
; compilenode returning %var_val_s1255 
  %var_val_spc1256 = load %object** %var_spc 
; compilenode returning %var_val_spc1256 
  %var_val_depth1257 = load %object** %var_depth 
; compilenode returning %var_val_depth1257 
  %num1258 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1258 
  store %object* %num1258, %object** %params_0 
  %sum1260 = call %object* @callmethod(%object* %var_val_depth1257, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1260 
  store %object* %sum1260, %object** %params_0 
; compilenode returning %self 
  %call1261 = call %object* @callmethod(%object* %self, i8* getelementptr([3 x i8]* @.str651,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1261 
; compilenode returning %call1261 
; compilenode returning %call1261 
  %call1262 = call %object* @callmethod(%object* %call1261, i8* getelementptr([7 x i8]* @.str652,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1262 
; compilenode returning %call1262 
  store %object* %call1262, %object** %params_0 
  %opresult1264 = call %object* @callmethod(%object* %var_val_spc1256, i8* getelementptr([3 x i8]* @.str653,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1264 
  store %object* %opresult1264, %object** %params_0 
  %opresult1266 = call %object* @callmethod(%object* %var_val_s1255, i8* getelementptr([3 x i8]* @.str654,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1266 
  store %object* %opresult1266, %object** %var_s 
; compilenode returning %opresult1266 
  ret %object* %opresult1266 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astmember 
define %object* @meth_astmember1224(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_what = getelementptr %object** %args, i32 0 
  %var_in = getelementptr %object** %args, i32 1 
  %obj1225 = call %object* @alloc_obj() 
  %str1226 = getelementptr [7 x i8]* @.str631, i32 0, i32 0 
  %string1226 = call %object* @alloc_String(i8* %str1226) 
; compilenode returning %string1226 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1225, %object* %string1226, i32 0) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([5 x i8]* @.str.methname1227, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1227)) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([7 x i8]* @.str.methnamew1227, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1227)) 
  %var_val_what1228 = load %object** %var_what 
; compilenode returning %var_val_what1228 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1225, %object* %var_val_what1228, i32 1) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([6 x i8]* @.str.methname1229, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1229)) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([8 x i8]* @.str.methnamew1229, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1229)) 
  %var_val_in1230 = load %object** %var_in 
; compilenode returning %var_val_in1230 
; OBJECT VAR DEC in 
  call void @adddatum(%object* %obj1225, %object* %var_val_in1230, i32 2) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([3 x i8]* @.str.methname1231, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_in_1231)) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([5 x i8]* @.str.methnamew1231, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_in_1231)) 
  %str1232 = getelementptr [1 x i8]* @.str638, i32 0, i32 0 
  %string1232 = call %object* @alloc_String(i8* %str1232) 
; compilenode returning %string1232 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1225, %object* %string1232, i32 3) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([9 x i8]* @.str.methname1233, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1233)) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([11 x i8]* @.str.methnamew1233, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1233)) 
  call void @addmethod(%object* %obj1225, i8* getelementptr([7 x i8]* @.str.methname1234, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1234)) 
; compilenode returning %obj1225 
  ret %object* %obj1225 
} 
;;;; ENDS 
define %object* @reader_type_1270(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1270(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1272(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1272(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1274(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1274(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1275(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1276 = getelementptr [12 x i8]* @.str665, i32 0, i32 0 
  %string1276 = call %object* @alloc_String(i8* %str1276) 
; compilenode returning %string1276 
; compilenode returning %self 
  %call1277 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str666,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1277 
; compilenode returning %call1277 
; compilenode returning %call1277 
  %str1278 = getelementptr [2 x i8]* @.str667, i32 0, i32 0 
  %string1278 = call %object* @alloc_String(i8* %str1278) 
; compilenode returning %string1278 
  store %object* %string1278, %object** %params_0 
  %opresult1280 = call %object* @callmethod(%object* %call1277, i8* getelementptr([3 x i8]* @.str668,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1280 
  store %object* %opresult1280, %object** %params_0 
  %opresult1282 = call %object* @callmethod(%object* %string1276, i8* getelementptr([3 x i8]* @.str669,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1282 
  ret %object* %opresult1282 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astidentifier 
define %object* @meth_astidentifier1267(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_n = getelementptr %object** %args, i32 0 
  %obj1268 = call %object* @alloc_obj() 
  %str1269 = getelementptr [11 x i8]* @.str657, i32 0, i32 0 
  %string1269 = call %object* @alloc_String(i8* %str1269) 
; compilenode returning %string1269 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1268, %object* %string1269, i32 0) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([5 x i8]* @.str.methname1270, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1270)) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([7 x i8]* @.str.methnamew1270, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1270)) 
  %var_val_n1271 = load %object** %var_n 
; compilenode returning %var_val_n1271 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1268, %object* %var_val_n1271, i32 1) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([6 x i8]* @.str.methname1272, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1272)) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([8 x i8]* @.str.methnamew1272, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1272)) 
  %str1273 = getelementptr [1 x i8]* @.str662, i32 0, i32 0 
  %string1273 = call %object* @alloc_String(i8* %str1273) 
; compilenode returning %string1273 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1268, %object* %string1273, i32 2) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([9 x i8]* @.str.methname1274, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1274)) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([11 x i8]* @.str.methnamew1274, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1274)) 
  call void @addmethod(%object* %obj1268, i8* getelementptr([7 x i8]* @.str.methname1275, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1275)) 
; compilenode returning %obj1268 
  ret %object* %obj1268 
} 
;;;; ENDS 
define %object* @reader_type_1286(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1286(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1288(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1288(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1290(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1290(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1291(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1292 = getelementptr [8 x i8]* @.str680, i32 0, i32 0 
  %string1292 = call %object* @alloc_String(i8* %str1292) 
; compilenode returning %string1292 
; compilenode returning %self 
  %call1293 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str681,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1293 
; compilenode returning %call1293 
; compilenode returning %call1293 
  %str1294 = getelementptr [2 x i8]* @.str682, i32 0, i32 0 
  %string1294 = call %object* @alloc_String(i8* %str1294) 
; compilenode returning %string1294 
  store %object* %string1294, %object** %params_0 
  %opresult1296 = call %object* @callmethod(%object* %call1293, i8* getelementptr([3 x i8]* @.str683,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1296 
  store %object* %opresult1296, %object** %params_0 
  %opresult1298 = call %object* @callmethod(%object* %string1292, i8* getelementptr([3 x i8]* @.str684,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1298 
  ret %object* %opresult1298 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: aststring 
define %object* @meth_aststring1283(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_n = getelementptr %object** %args, i32 0 
  %obj1284 = call %object* @alloc_obj() 
  %str1285 = getelementptr [7 x i8]* @.str672, i32 0, i32 0 
  %string1285 = call %object* @alloc_String(i8* %str1285) 
; compilenode returning %string1285 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1284, %object* %string1285, i32 0) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([5 x i8]* @.str.methname1286, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1286)) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([7 x i8]* @.str.methnamew1286, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1286)) 
  %var_val_n1287 = load %object** %var_n 
; compilenode returning %var_val_n1287 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1284, %object* %var_val_n1287, i32 1) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([6 x i8]* @.str.methname1288, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1288)) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([8 x i8]* @.str.methnamew1288, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1288)) 
  %str1289 = getelementptr [1 x i8]* @.str677, i32 0, i32 0 
  %string1289 = call %object* @alloc_String(i8* %str1289) 
; compilenode returning %string1289 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1284, %object* %string1289, i32 2) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([9 x i8]* @.str.methname1290, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1290)) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([11 x i8]* @.str.methnamew1290, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1290)) 
  call void @addmethod(%object* %obj1284, i8* getelementptr([7 x i8]* @.str.methname1291, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1291)) 
; compilenode returning %obj1284 
  ret %object* %obj1284 
} 
;;;; ENDS 
define %object* @reader_type_1302(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1302(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1304(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1304(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1306(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1306(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1307(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1308 = getelementptr [5 x i8]* @.str695, i32 0, i32 0 
  %string1308 = call %object* @alloc_String(i8* %str1308) 
; compilenode returning %string1308 
; compilenode returning %self 
  %call1309 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str696,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1309 
; compilenode returning %call1309 
; compilenode returning %call1309 
  %str1310 = getelementptr [2 x i8]* @.str697, i32 0, i32 0 
  %string1310 = call %object* @alloc_String(i8* %str1310) 
; compilenode returning %string1310 
  store %object* %string1310, %object** %params_0 
  %opresult1312 = call %object* @callmethod(%object* %call1309, i8* getelementptr([3 x i8]* @.str698,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1312 
  store %object* %opresult1312, %object** %params_0 
  %opresult1314 = call %object* @callmethod(%object* %string1308, i8* getelementptr([3 x i8]* @.str699,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1314 
  ret %object* %opresult1314 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astnum 
define %object* @meth_astnum1299(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_n = getelementptr %object** %args, i32 0 
  %obj1300 = call %object* @alloc_obj() 
  %str1301 = getelementptr [4 x i8]* @.str687, i32 0, i32 0 
  %string1301 = call %object* @alloc_String(i8* %str1301) 
; compilenode returning %string1301 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1300, %object* %string1301, i32 0) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([5 x i8]* @.str.methname1302, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1302)) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([7 x i8]* @.str.methnamew1302, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1302)) 
  %var_val_n1303 = load %object** %var_n 
; compilenode returning %var_val_n1303 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1300, %object* %var_val_n1303, i32 1) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([6 x i8]* @.str.methname1304, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1304)) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([8 x i8]* @.str.methnamew1304, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1304)) 
  %str1305 = getelementptr [1 x i8]* @.str692, i32 0, i32 0 
  %string1305 = call %object* @alloc_String(i8* %str1305) 
; compilenode returning %string1305 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1300, %object* %string1305, i32 2) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([9 x i8]* @.str.methname1306, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1306)) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([11 x i8]* @.str.methnamew1306, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1306)) 
  call void @addmethod(%object* %obj1300, i8* getelementptr([7 x i8]* @.str.methname1307, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1307)) 
; compilenode returning %obj1300 
  ret %object* %obj1300 
} 
;;;; ENDS 
define %object* @reader_type_1318(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1318(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1320(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1320(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_left_1322(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_left_1322(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_right_1324(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_right_1324(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1326(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1326(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 4 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1335(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1336 = load %object** %var_spc 
; compilenode returning %var_val_spc1336 
  %str1337 = getelementptr [3 x i8]* @.str716, i32 0, i32 0 
  %string1337 = call %object* @alloc_String(i8* %str1337) 
; compilenode returning %string1337 
  store %object* %string1337, %object** %params_0 
  %opresult1339 = call %object* @callmethod(%object* %var_val_spc1336, i8* getelementptr([3 x i8]* @.str717,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1339 
  store %object* %opresult1339, %object** %var_spc 
; compilenode returning %opresult1339 
  ret %object* %opresult1339 
} 
;;;; ENDS 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; compiled in to %call1358 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call1374 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1327(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1328 = getelementptr [1 x i8]* @.str714, i32 0, i32 0 
  %string1328 = call %object* @alloc_String(i8* %str1328) 
; compilenode returning %string1328 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1328, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1330 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1330 
  %var_val_depth1331 = load %object** %var_depth 
; compilenode returning %var_val_depth1331 
  store %object* %var_val_depth1331, %object** %params_0 
  %opresult1333 = call %object* @callmethod(%object* %num1330, i8* getelementptr([3 x i8]* @.str715,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1333 
  %obj1334 = call %object* @alloc_obj() 
  %closure1335 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1335, %object** %var_spc) 
  %selfpp1340 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1340 
  call void @addtoclosure(%object*** %closure1335, %object** %selfpp1340) 
  call void @addclosuremethod(%object* %obj1334, i8* getelementptr([6 x i8]* @.str.methname1335, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1335), %object*** %closure1335) 
; compilenode returning %obj1334 
  store %object* %opresult1333, %object** %params_0 
  %iter1329 = call %object* @callmethod(%object* %opresult1333, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1329 
BeginFor1329: 
  %condobj1329 = call %object* @callmethod(%object* %iter1329, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1329_valp = call i1 @istrue(%object* %condobj1329) 
  %cond1329 = icmp eq i1 0, %cond1329_valp 
br i1 %cond1329, label %EndFor1329, label %ForBody1329 
ForBody1329: 
 %forval1329 = call %object* @callmethod(%object* %iter1329, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1329, %object** %params_0 
  call %object* @callmethod(%object* %obj1334, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1329 
EndFor1329: 
; compilenode returning %opresult1333 
  %str1341 = getelementptr [4 x i8]* @.str719, i32 0, i32 0 
  %string1341 = call %object* @alloc_String(i8* %str1341) 
; compilenode returning %string1341 
; compilenode returning %self 
  %call1342 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str720,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1342 
; compilenode returning %call1342 
; compilenode returning %call1342 
  %str1343 = getelementptr [2 x i8]* @.str721, i32 0, i32 0 
  %string1343 = call %object* @alloc_String(i8* %str1343) 
; compilenode returning %string1343 
  store %object* %string1343, %object** %params_0 
  %opresult1345 = call %object* @callmethod(%object* %call1342, i8* getelementptr([3 x i8]* @.str722,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1345 
  store %object* %opresult1345, %object** %params_0 
  %opresult1347 = call %object* @callmethod(%object* %string1341, i8* getelementptr([3 x i8]* @.str723,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1347 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %opresult1347, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s1348 = load %object** %var_s 
; compilenode returning %var_val_s1348 
  %str1349 = getelementptr [2 x i8]* @.str724, i32 0, i32 0 
  %string1349 = call %object* @alloc_String(i8* %str1349) 
; compilenode returning %string1349 
  store %object* %string1349, %object** %params_0 
  %opresult1351 = call %object* @callmethod(%object* %var_val_s1348, i8* getelementptr([3 x i8]* @.str725,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1351 
  store %object* %opresult1351, %object** %var_s 
; compilenode returning %opresult1351 
  %var_val_s1352 = load %object** %var_s 
; compilenode returning %var_val_s1352 
  %var_val_spc1353 = load %object** %var_spc 
; compilenode returning %var_val_spc1353 
  %var_val_depth1354 = load %object** %var_depth 
; compilenode returning %var_val_depth1354 
  %num1355 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1355 
  store %object* %num1355, %object** %params_0 
  %sum1357 = call %object* @callmethod(%object* %var_val_depth1354, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1357 
  store %object* %sum1357, %object** %params_0 
; compilenode returning %self 
  %call1358 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str726,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1358 
; compilenode returning %call1358 
; compilenode returning %call1358 
  %call1359 = call %object* @callmethod(%object* %call1358, i8* getelementptr([7 x i8]* @.str727,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1359 
; compilenode returning %call1359 
  store %object* %call1359, %object** %params_0 
  %opresult1361 = call %object* @callmethod(%object* %var_val_spc1353, i8* getelementptr([3 x i8]* @.str728,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1361 
  store %object* %opresult1361, %object** %params_0 
  %opresult1363 = call %object* @callmethod(%object* %var_val_s1352, i8* getelementptr([3 x i8]* @.str729,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1363 
  store %object* %opresult1363, %object** %var_s 
; compilenode returning %opresult1363 
  %var_val_s1364 = load %object** %var_s 
; compilenode returning %var_val_s1364 
  %str1365 = getelementptr [2 x i8]* @.str730, i32 0, i32 0 
  %string1365 = call %object* @alloc_String(i8* %str1365) 
; compilenode returning %string1365 
  store %object* %string1365, %object** %params_0 
  %opresult1367 = call %object* @callmethod(%object* %var_val_s1364, i8* getelementptr([3 x i8]* @.str731,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1367 
  store %object* %opresult1367, %object** %var_s 
; compilenode returning %opresult1367 
  %var_val_s1368 = load %object** %var_s 
; compilenode returning %var_val_s1368 
  %var_val_spc1369 = load %object** %var_spc 
; compilenode returning %var_val_spc1369 
  %var_val_depth1370 = load %object** %var_depth 
; compilenode returning %var_val_depth1370 
  %num1371 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1371 
  store %object* %num1371, %object** %params_0 
  %sum1373 = call %object* @callmethod(%object* %var_val_depth1370, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1373 
  store %object* %sum1373, %object** %params_0 
; compilenode returning %self 
  %call1374 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str732,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1374 
; compilenode returning %call1374 
; compilenode returning %call1374 
  %call1375 = call %object* @callmethod(%object* %call1374, i8* getelementptr([7 x i8]* @.str733,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1375 
; compilenode returning %call1375 
  store %object* %call1375, %object** %params_0 
  %opresult1377 = call %object* @callmethod(%object* %var_val_spc1369, i8* getelementptr([3 x i8]* @.str734,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1377 
  store %object* %opresult1377, %object** %params_0 
  %opresult1379 = call %object* @callmethod(%object* %var_val_s1368, i8* getelementptr([3 x i8]* @.str735,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1379 
  store %object* %opresult1379, %object** %var_s 
; compilenode returning %opresult1379 
  %var_val_s1380 = load %object** %var_s 
; compilenode returning %var_val_s1380 
  ret %object* %var_val_s1380 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astop 
define %object* @meth_astop1315(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_op = getelementptr %object** %args, i32 0 
  %var_l = getelementptr %object** %args, i32 1 
  %var_r = getelementptr %object** %args, i32 2 
  %obj1316 = call %object* @alloc_obj() 
  %str1317 = getelementptr [3 x i8]* @.str702, i32 0, i32 0 
  %string1317 = call %object* @alloc_String(i8* %str1317) 
; compilenode returning %string1317 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1316, %object* %string1317, i32 0) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([5 x i8]* @.str.methname1318, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1318)) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([7 x i8]* @.str.methnamew1318, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1318)) 
  %var_val_op1319 = load %object** %var_op 
; compilenode returning %var_val_op1319 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1316, %object* %var_val_op1319, i32 1) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([6 x i8]* @.str.methname1320, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1320)) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([8 x i8]* @.str.methnamew1320, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1320)) 
  %var_val_l1321 = load %object** %var_l 
; compilenode returning %var_val_l1321 
; OBJECT VAR DEC left 
  call void @adddatum(%object* %obj1316, %object* %var_val_l1321, i32 2) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([5 x i8]* @.str.methname1322, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_left_1322)) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([7 x i8]* @.str.methnamew1322, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_left_1322)) 
  %var_val_r1323 = load %object** %var_r 
; compilenode returning %var_val_r1323 
; OBJECT VAR DEC right 
  call void @adddatum(%object* %obj1316, %object* %var_val_r1323, i32 3) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([6 x i8]* @.str.methname1324, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_right_1324)) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([8 x i8]* @.str.methnamew1324, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_right_1324)) 
  %str1325 = getelementptr [1 x i8]* @.str711, i32 0, i32 0 
  %string1325 = call %object* @alloc_String(i8* %str1325) 
; compilenode returning %string1325 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1316, %object* %string1325, i32 4) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([9 x i8]* @.str.methname1326, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1326)) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([11 x i8]* @.str.methnamew1326, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1326)) 
  call void @addmethod(%object* %obj1316, i8* getelementptr([7 x i8]* @.str.methname1327, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1327)) 
; compilenode returning %obj1316 
  ret %object* %obj1316 
} 
;;;; ENDS 
define %object* @reader_type_1384(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1384(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1386(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1386(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_index_1388(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_index_1388(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1390(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1390(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1399(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1400 = load %object** %var_spc 
; compilenode returning %var_val_spc1400 
  %str1401 = getelementptr [3 x i8]* @.str750, i32 0, i32 0 
  %string1401 = call %object* @alloc_String(i8* %str1401) 
; compilenode returning %string1401 
  store %object* %string1401, %object** %params_0 
  %opresult1403 = call %object* @callmethod(%object* %var_val_spc1400, i8* getelementptr([3 x i8]* @.str751,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1403 
  store %object* %opresult1403, %object** %var_spc 
; compilenode returning %opresult1403 
  ret %object* %opresult1403 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call1416 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call1432 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1391(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1392 = getelementptr [1 x i8]* @.str748, i32 0, i32 0 
  %string1392 = call %object* @alloc_String(i8* %str1392) 
; compilenode returning %string1392 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1392, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1394 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1394 
  %var_val_depth1395 = load %object** %var_depth 
; compilenode returning %var_val_depth1395 
  store %object* %var_val_depth1395, %object** %params_0 
  %opresult1397 = call %object* @callmethod(%object* %num1394, i8* getelementptr([3 x i8]* @.str749,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1397 
  %obj1398 = call %object* @alloc_obj() 
  %closure1399 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1399, %object** %var_spc) 
  %selfpp1404 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1404 
  call void @addtoclosure(%object*** %closure1399, %object** %selfpp1404) 
  call void @addclosuremethod(%object* %obj1398, i8* getelementptr([6 x i8]* @.str.methname1399, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1399), %object*** %closure1399) 
; compilenode returning %obj1398 
  store %object* %opresult1397, %object** %params_0 
  %iter1393 = call %object* @callmethod(%object* %opresult1397, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1393 
BeginFor1393: 
  %condobj1393 = call %object* @callmethod(%object* %iter1393, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1393_valp = call i1 @istrue(%object* %condobj1393) 
  %cond1393 = icmp eq i1 0, %cond1393_valp 
br i1 %cond1393, label %EndFor1393, label %ForBody1393 
ForBody1393: 
 %forval1393 = call %object* @callmethod(%object* %iter1393, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1393, %object** %params_0 
  call %object* @callmethod(%object* %obj1398, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1393 
EndFor1393: 
; compilenode returning %opresult1397 
  %str1405 = getelementptr [6 x i8]* @.str753, i32 0, i32 0 
  %string1405 = call %object* @alloc_String(i8* %str1405) 
; compilenode returning %string1405 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string1405, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s1406 = load %object** %var_s 
; compilenode returning %var_val_s1406 
  %str1407 = getelementptr [2 x i8]* @.str754, i32 0, i32 0 
  %string1407 = call %object* @alloc_String(i8* %str1407) 
; compilenode returning %string1407 
  store %object* %string1407, %object** %params_0 
  %opresult1409 = call %object* @callmethod(%object* %var_val_s1406, i8* getelementptr([3 x i8]* @.str755,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1409 
  store %object* %opresult1409, %object** %var_s 
; compilenode returning %opresult1409 
  %var_val_s1410 = load %object** %var_s 
; compilenode returning %var_val_s1410 
  %var_val_spc1411 = load %object** %var_spc 
; compilenode returning %var_val_spc1411 
  %var_val_depth1412 = load %object** %var_depth 
; compilenode returning %var_val_depth1412 
  %num1413 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1413 
  store %object* %num1413, %object** %params_0 
  %sum1415 = call %object* @callmethod(%object* %var_val_depth1412, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1415 
  store %object* %sum1415, %object** %params_0 
; compilenode returning %self 
  %call1416 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str756,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1416 
; compilenode returning %call1416 
; compilenode returning %call1416 
  %call1417 = call %object* @callmethod(%object* %call1416, i8* getelementptr([7 x i8]* @.str757,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1417 
; compilenode returning %call1417 
  store %object* %call1417, %object** %params_0 
  %opresult1419 = call %object* @callmethod(%object* %var_val_spc1411, i8* getelementptr([3 x i8]* @.str758,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1419 
  store %object* %opresult1419, %object** %params_0 
  %opresult1421 = call %object* @callmethod(%object* %var_val_s1410, i8* getelementptr([3 x i8]* @.str759,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1421 
  store %object* %opresult1421, %object** %var_s 
; compilenode returning %opresult1421 
  %var_val_s1422 = load %object** %var_s 
; compilenode returning %var_val_s1422 
  %str1423 = getelementptr [2 x i8]* @.str760, i32 0, i32 0 
  %string1423 = call %object* @alloc_String(i8* %str1423) 
; compilenode returning %string1423 
  store %object* %string1423, %object** %params_0 
  %opresult1425 = call %object* @callmethod(%object* %var_val_s1422, i8* getelementptr([3 x i8]* @.str761,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1425 
  store %object* %opresult1425, %object** %var_s 
; compilenode returning %opresult1425 
  %var_val_s1426 = load %object** %var_s 
; compilenode returning %var_val_s1426 
  %var_val_spc1427 = load %object** %var_spc 
; compilenode returning %var_val_spc1427 
  %var_val_depth1428 = load %object** %var_depth 
; compilenode returning %var_val_depth1428 
  %num1429 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1429 
  store %object* %num1429, %object** %params_0 
  %sum1431 = call %object* @callmethod(%object* %var_val_depth1428, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1431 
  store %object* %sum1431, %object** %params_0 
; compilenode returning %self 
  %call1432 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str762,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1432 
; compilenode returning %call1432 
; compilenode returning %call1432 
  %call1433 = call %object* @callmethod(%object* %call1432, i8* getelementptr([7 x i8]* @.str763,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1433 
; compilenode returning %call1433 
  store %object* %call1433, %object** %params_0 
  %opresult1435 = call %object* @callmethod(%object* %var_val_spc1427, i8* getelementptr([3 x i8]* @.str764,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1435 
  store %object* %opresult1435, %object** %params_0 
  %opresult1437 = call %object* @callmethod(%object* %var_val_s1426, i8* getelementptr([3 x i8]* @.str765,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1437 
  store %object* %opresult1437, %object** %var_s 
; compilenode returning %opresult1437 
  %var_val_s1438 = load %object** %var_s 
; compilenode returning %var_val_s1438 
  ret %object* %var_val_s1438 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astindex 
define %object* @meth_astindex1381(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_expr = getelementptr %object** %args, i32 0 
  %var_index = getelementptr %object** %args, i32 1 
  %obj1382 = call %object* @alloc_obj() 
  %str1383 = getelementptr [6 x i8]* @.str738, i32 0, i32 0 
  %string1383 = call %object* @alloc_String(i8* %str1383) 
; compilenode returning %string1383 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1382, %object* %string1383, i32 0) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([5 x i8]* @.str.methname1384, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1384)) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([7 x i8]* @.str.methnamew1384, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1384)) 
  %var_val_expr1385 = load %object** %var_expr 
; compilenode returning %var_val_expr1385 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1382, %object* %var_val_expr1385, i32 1) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([6 x i8]* @.str.methname1386, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1386)) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([8 x i8]* @.str.methnamew1386, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1386)) 
  %var_val_index1387 = load %object** %var_index 
; compilenode returning %var_val_index1387 
; OBJECT VAR DEC index 
  call void @adddatum(%object* %obj1382, %object* %var_val_index1387, i32 2) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([6 x i8]* @.str.methname1388, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_index_1388)) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([8 x i8]* @.str.methnamew1388, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_index_1388)) 
  %str1389 = getelementptr [1 x i8]* @.str745, i32 0, i32 0 
  %string1389 = call %object* @alloc_String(i8* %str1389) 
; compilenode returning %string1389 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1382, %object* %string1389, i32 3) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([9 x i8]* @.str.methname1390, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1390)) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([11 x i8]* @.str.methnamew1390, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1390)) 
  call void @addmethod(%object* %obj1382, i8* getelementptr([7 x i8]* @.str.methname1391, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1391)) 
; compilenode returning %obj1382 
  ret %object* %obj1382 
} 
;;;; ENDS 
define %object* @reader_type_1442(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1442(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_dest_1444(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_dest_1444(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1446(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1446(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1448(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1448(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1457(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1458 = load %object** %var_spc 
; compilenode returning %var_val_spc1458 
  %str1459 = getelementptr [3 x i8]* @.str780, i32 0, i32 0 
  %string1459 = call %object* @alloc_String(i8* %str1459) 
; compilenode returning %string1459 
  store %object* %string1459, %object** %params_0 
  %opresult1461 = call %object* @callmethod(%object* %var_val_spc1458, i8* getelementptr([3 x i8]* @.str781,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1461 
  store %object* %opresult1461, %object** %var_spc 
; compilenode returning %opresult1461 
  ret %object* %opresult1461 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; compiled in to %call1474 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call1490 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1449(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1450 = getelementptr [1 x i8]* @.str778, i32 0, i32 0 
  %string1450 = call %object* @alloc_String(i8* %str1450) 
; compilenode returning %string1450 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1450, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1452 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1452 
  %var_val_depth1453 = load %object** %var_depth 
; compilenode returning %var_val_depth1453 
  store %object* %var_val_depth1453, %object** %params_0 
  %opresult1455 = call %object* @callmethod(%object* %num1452, i8* getelementptr([3 x i8]* @.str779,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1455 
  %obj1456 = call %object* @alloc_obj() 
  %closure1457 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1457, %object** %var_spc) 
  %selfpp1462 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1462 
  call void @addtoclosure(%object*** %closure1457, %object** %selfpp1462) 
  call void @addclosuremethod(%object* %obj1456, i8* getelementptr([6 x i8]* @.str.methname1457, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1457), %object*** %closure1457) 
; compilenode returning %obj1456 
  store %object* %opresult1455, %object** %params_0 
  %iter1451 = call %object* @callmethod(%object* %opresult1455, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1451 
BeginFor1451: 
  %condobj1451 = call %object* @callmethod(%object* %iter1451, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1451_valp = call i1 @istrue(%object* %condobj1451) 
  %cond1451 = icmp eq i1 0, %cond1451_valp 
br i1 %cond1451, label %EndFor1451, label %ForBody1451 
ForBody1451: 
 %forval1451 = call %object* @callmethod(%object* %iter1451, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1451, %object** %params_0 
  call %object* @callmethod(%object* %obj1456, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1451 
EndFor1451: 
; compilenode returning %opresult1455 
  %str1463 = getelementptr [5 x i8]* @.str783, i32 0, i32 0 
  %string1463 = call %object* @alloc_String(i8* %str1463) 
; compilenode returning %string1463 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string1463, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s1464 = load %object** %var_s 
; compilenode returning %var_val_s1464 
  %str1465 = getelementptr [2 x i8]* @.str784, i32 0, i32 0 
  %string1465 = call %object* @alloc_String(i8* %str1465) 
; compilenode returning %string1465 
  store %object* %string1465, %object** %params_0 
  %opresult1467 = call %object* @callmethod(%object* %var_val_s1464, i8* getelementptr([3 x i8]* @.str785,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1467 
  store %object* %opresult1467, %object** %var_s 
; compilenode returning %opresult1467 
  %var_val_s1468 = load %object** %var_s 
; compilenode returning %var_val_s1468 
  %var_val_spc1469 = load %object** %var_spc 
; compilenode returning %var_val_spc1469 
  %var_val_depth1470 = load %object** %var_depth 
; compilenode returning %var_val_depth1470 
  %num1471 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1471 
  store %object* %num1471, %object** %params_0 
  %sum1473 = call %object* @callmethod(%object* %var_val_depth1470, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1473 
  store %object* %sum1473, %object** %params_0 
; compilenode returning %self 
  %call1474 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str786,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1474 
; compilenode returning %call1474 
; compilenode returning %call1474 
  %call1475 = call %object* @callmethod(%object* %call1474, i8* getelementptr([7 x i8]* @.str787,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1475 
; compilenode returning %call1475 
  store %object* %call1475, %object** %params_0 
  %opresult1477 = call %object* @callmethod(%object* %var_val_spc1469, i8* getelementptr([3 x i8]* @.str788,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1477 
  store %object* %opresult1477, %object** %params_0 
  %opresult1479 = call %object* @callmethod(%object* %var_val_s1468, i8* getelementptr([3 x i8]* @.str789,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1479 
  store %object* %opresult1479, %object** %var_s 
; compilenode returning %opresult1479 
  %var_val_s1480 = load %object** %var_s 
; compilenode returning %var_val_s1480 
  %str1481 = getelementptr [2 x i8]* @.str790, i32 0, i32 0 
  %string1481 = call %object* @alloc_String(i8* %str1481) 
; compilenode returning %string1481 
  store %object* %string1481, %object** %params_0 
  %opresult1483 = call %object* @callmethod(%object* %var_val_s1480, i8* getelementptr([3 x i8]* @.str791,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1483 
  store %object* %opresult1483, %object** %var_s 
; compilenode returning %opresult1483 
  %var_val_s1484 = load %object** %var_s 
; compilenode returning %var_val_s1484 
  %var_val_spc1485 = load %object** %var_spc 
; compilenode returning %var_val_spc1485 
  %var_val_depth1486 = load %object** %var_depth 
; compilenode returning %var_val_depth1486 
  %num1487 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1487 
  store %object* %num1487, %object** %params_0 
  %sum1489 = call %object* @callmethod(%object* %var_val_depth1486, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1489 
  store %object* %sum1489, %object** %params_0 
; compilenode returning %self 
  %call1490 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str792,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1490 
; compilenode returning %call1490 
; compilenode returning %call1490 
  %call1491 = call %object* @callmethod(%object* %call1490, i8* getelementptr([7 x i8]* @.str793,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1491 
; compilenode returning %call1491 
  store %object* %call1491, %object** %params_0 
  %opresult1493 = call %object* @callmethod(%object* %var_val_spc1485, i8* getelementptr([3 x i8]* @.str794,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1493 
  store %object* %opresult1493, %object** %params_0 
  %opresult1495 = call %object* @callmethod(%object* %var_val_s1484, i8* getelementptr([3 x i8]* @.str795,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1495 
  store %object* %opresult1495, %object** %var_s 
; compilenode returning %opresult1495 
  %var_val_s1496 = load %object** %var_s 
; compilenode returning %var_val_s1496 
  ret %object* %var_val_s1496 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astbind 
define %object* @meth_astbind1439(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_dest = getelementptr %object** %args, i32 0 
  %var_val = getelementptr %object** %args, i32 1 
  %obj1440 = call %object* @alloc_obj() 
  %str1441 = getelementptr [5 x i8]* @.str768, i32 0, i32 0 
  %string1441 = call %object* @alloc_String(i8* %str1441) 
; compilenode returning %string1441 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1440, %object* %string1441, i32 0) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([5 x i8]* @.str.methname1442, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1442)) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([7 x i8]* @.str.methnamew1442, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1442)) 
  %var_val_dest1443 = load %object** %var_dest 
; compilenode returning %var_val_dest1443 
; OBJECT VAR DEC dest 
  call void @adddatum(%object* %obj1440, %object* %var_val_dest1443, i32 1) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([5 x i8]* @.str.methname1444, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_dest_1444)) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([7 x i8]* @.str.methnamew1444, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_dest_1444)) 
  %var_val_val1445 = load %object** %var_val 
; compilenode returning %var_val_val1445 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1440, %object* %var_val_val1445, i32 2) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([6 x i8]* @.str.methname1446, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1446)) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([8 x i8]* @.str.methnamew1446, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1446)) 
  %str1447 = getelementptr [1 x i8]* @.str775, i32 0, i32 0 
  %string1447 = call %object* @alloc_String(i8* %str1447) 
; compilenode returning %string1447 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1440, %object* %string1447, i32 3) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([9 x i8]* @.str.methname1448, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1448)) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([11 x i8]* @.str.methnamew1448, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1448)) 
  call void @addmethod(%object* %obj1440, i8* getelementptr([7 x i8]* @.str.methname1449, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1449)) 
; compilenode returning %obj1440 
  ret %object* %obj1440 
} 
;;;; ENDS 
define %object* @reader_type_1500(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1500(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_name_1502(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_name_1502(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_1504(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_1504(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1506(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1506(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 3 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply1515(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_spc = getelementptr %object*** %closure, i32 0 
  %var_spc = load %object*** %varc_spc 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_spc1516 = load %object** %var_spc 
; compilenode returning %var_val_spc1516 
  %str1517 = getelementptr [3 x i8]* @.str810, i32 0, i32 0 
  %string1517 = call %object* @alloc_String(i8* %str1517) 
; compilenode returning %string1517 
  store %object* %string1517, %object** %params_0 
  %opresult1519 = call %object* @callmethod(%object* %var_val_spc1516, i8* getelementptr([3 x i8]* @.str811,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1519 
  store %object* %opresult1519, %object** %var_spc 
; compilenode returning %opresult1519 
  ret %object* %opresult1519 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %self 
; got len 5 
; created con 
; pushed statement 
; compiled in to %call1532 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %self 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call1550 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pretty 
define %object* @meth_pretty1507(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_depth = getelementptr %object** %args, i32 0 
  %str1508 = getelementptr [1 x i8]* @.str808, i32 0, i32 0 
  %string1508 = call %object* @alloc_String(i8* %str1508) 
; compilenode returning %string1508 
  %var_spc = call %object** @alloc_var() 
  %var_spc_dec = getelementptr %object* %string1508, i32 0 
  store %object* %var_spc_dec, %object** %var_spc 
; compilenode returning  
  %num1510 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1510 
  %var_val_depth1511 = load %object** %var_depth 
; compilenode returning %var_val_depth1511 
  store %object* %var_val_depth1511, %object** %params_0 
  %opresult1513 = call %object* @callmethod(%object* %num1510, i8* getelementptr([3 x i8]* @.str809,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1513 
  %obj1514 = call %object* @alloc_obj() 
  %closure1515 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1515, %object** %var_spc) 
  %selfpp1520 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1520 
  call void @addtoclosure(%object*** %closure1515, %object** %selfpp1520) 
  call void @addclosuremethod(%object* %obj1514, i8* getelementptr([6 x i8]* @.str.methname1515, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1515), %object*** %closure1515) 
; compilenode returning %obj1514 
  store %object* %opresult1513, %object** %params_0 
  %iter1509 = call %object* @callmethod(%object* %opresult1513, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1509 
BeginFor1509: 
  %condobj1509 = call %object* @callmethod(%object* %iter1509, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1509_valp = call i1 @istrue(%object* %condobj1509) 
  %cond1509 = icmp eq i1 0, %cond1509_valp 
br i1 %cond1509, label %EndFor1509, label %ForBody1509 
ForBody1509: 
 %forval1509 = call %object* @callmethod(%object* %iter1509, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1509, %object** %params_0 
  call %object* @callmethod(%object* %obj1514, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1509 
EndFor1509: 
; compilenode returning %opresult1513 
  %str1521 = getelementptr [7 x i8]* @.str813, i32 0, i32 0 
  %string1521 = call %object* @alloc_String(i8* %str1521) 
; compilenode returning %string1521 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %string1521, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  %var_val_s1522 = load %object** %var_s 
; compilenode returning %var_val_s1522 
  %str1523 = getelementptr [2 x i8]* @.str814, i32 0, i32 0 
  %string1523 = call %object* @alloc_String(i8* %str1523) 
; compilenode returning %string1523 
  store %object* %string1523, %object** %params_0 
  %opresult1525 = call %object* @callmethod(%object* %var_val_s1522, i8* getelementptr([3 x i8]* @.str815,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1525 
  store %object* %opresult1525, %object** %var_s 
; compilenode returning %opresult1525 
  %var_val_s1526 = load %object** %var_s 
; compilenode returning %var_val_s1526 
  %var_val_spc1527 = load %object** %var_spc 
; compilenode returning %var_val_spc1527 
  %var_val_depth1528 = load %object** %var_depth 
; compilenode returning %var_val_depth1528 
  %num1529 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1529 
  store %object* %num1529, %object** %params_0 
  %sum1531 = call %object* @callmethod(%object* %var_val_depth1528, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1531 
  store %object* %sum1531, %object** %params_0 
; compilenode returning %self 
  %call1532 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str816,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1532 
; compilenode returning %call1532 
; compilenode returning %call1532 
  %call1533 = call %object* @callmethod(%object* %call1532, i8* getelementptr([7 x i8]* @.str817,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1533 
; compilenode returning %call1533 
  store %object* %call1533, %object** %params_0 
  %opresult1535 = call %object* @callmethod(%object* %var_val_spc1527, i8* getelementptr([3 x i8]* @.str818,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1535 
  store %object* %opresult1535, %object** %params_0 
  %opresult1537 = call %object* @callmethod(%object* %var_val_s1526, i8* getelementptr([3 x i8]* @.str819,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1537 
  store %object* %opresult1537, %object** %var_s 
; compilenode returning %opresult1537 
  br label %BeginIf1538 
BeginIf1538: 
; compilenode returning %self 
  %call1539 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str820,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1539 
; compilenode returning %call1539 
; compilenode returning %call1539 
  %cond1538_valp = call i1 @istrue(%object* %call1539) 
  %cond1538 = icmp eq i1 0, %cond1538_valp 
br i1 %cond1538, label %EndIf1538, label %TrueBranch1538 
TrueBranch1538: 
  %var_val_s1540 = load %object** %var_s 
; compilenode returning %var_val_s1540 
  %str1541 = getelementptr [6 x i8]* @.str821, i32 0, i32 0 
  %string1541 = call %object* @alloc_String(i8* %str1541) 
; compilenode returning %string1541 
  store %object* %string1541, %object** %params_0 
  %opresult1543 = call %object* @callmethod(%object* %var_val_s1540, i8* getelementptr([3 x i8]* @.str822,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1543 
  store %object* %opresult1543, %object** %var_s 
; compilenode returning %opresult1543 
  %var_val_s1544 = load %object** %var_s 
; compilenode returning %var_val_s1544 
  %var_val_spc1545 = load %object** %var_spc 
; compilenode returning %var_val_spc1545 
  %var_val_depth1546 = load %object** %var_depth 
; compilenode returning %var_val_depth1546 
  %num1547 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1547 
  store %object* %num1547, %object** %params_0 
  %sum1549 = call %object* @callmethod(%object* %var_val_depth1546, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum1549 
  store %object* %sum1549, %object** %params_0 
; compilenode returning %self 
  %call1550 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str823,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1550 
; compilenode returning %call1550 
; compilenode returning %call1550 
  %call1551 = call %object* @callmethod(%object* %call1550, i8* getelementptr([7 x i8]* @.str824,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1551 
; compilenode returning %call1551 
  store %object* %call1551, %object** %params_0 
  %opresult1553 = call %object* @callmethod(%object* %var_val_spc1545, i8* getelementptr([3 x i8]* @.str825,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1553 
  store %object* %opresult1553, %object** %params_0 
  %opresult1555 = call %object* @callmethod(%object* %var_val_s1544, i8* getelementptr([3 x i8]* @.str826,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1555 
  store %object* %opresult1555, %object** %var_s 
; compilenode returning %opresult1555 
  br label %EndIf1538 
EndIf1538: 
  %if1538 = phi %object* [ %opresult1555, %TrueBranch1538], [%call1539, %BeginIf1538] 
; compilenode returning %if1538 
  %var_val_s1556 = load %object** %var_s 
; compilenode returning %var_val_s1556 
  ret %object* %var_val_s1556 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: astvardec 
define %object* @meth_astvardec1497(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_name = getelementptr %object** %args, i32 0 
  %var_val = getelementptr %object** %args, i32 1 
  %obj1498 = call %object* @alloc_obj() 
  %str1499 = getelementptr [7 x i8]* @.str798, i32 0, i32 0 
  %string1499 = call %object* @alloc_String(i8* %str1499) 
; compilenode returning %string1499 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1498, %object* %string1499, i32 0) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([5 x i8]* @.str.methname1500, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1500)) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([7 x i8]* @.str.methnamew1500, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1500)) 
  %var_val_name1501 = load %object** %var_name 
; compilenode returning %var_val_name1501 
; OBJECT VAR DEC name 
  call void @adddatum(%object* %obj1498, %object* %var_val_name1501, i32 1) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([5 x i8]* @.str.methname1502, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_name_1502)) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([7 x i8]* @.str.methnamew1502, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_name_1502)) 
  %var_val_val1503 = load %object** %var_val 
; compilenode returning %var_val_val1503 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj1498, %object* %var_val_val1503, i32 2) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([6 x i8]* @.str.methname1504, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_1504)) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([8 x i8]* @.str.methnamew1504, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_1504)) 
  %str1505 = getelementptr [1 x i8]* @.str805, i32 0, i32 0 
  %string1505 = call %object* @alloc_String(i8* %str1505) 
; compilenode returning %string1505 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1498, %object* %string1505, i32 3) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([9 x i8]* @.str.methname1506, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1506)) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([11 x i8]* @.str.methnamew1506, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1506)) 
  call void @addmethod(%object* %obj1498, i8* getelementptr([7 x i8]* @.str.methname1507, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_pretty1507)) 
; compilenode returning %obj1498 
  ret %object* %obj1498 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1558 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1559 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: accept 
; have closure method: 1 
define %object* @meth_accept1557(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_t = getelementptr %object** %args, i32 0 
  %var_val_sym1558 = load %object** %var_sym 
; compilenode returning %var_val_sym1558 
  %call1559 = call %object* @callmethod(%object* %var_val_sym1558, i8* getelementptr([4 x i8]* @.str829,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1559 
; compilenode returning %call1559 
; compilenode returning %call1559 
  %call1560 = call %object* @callmethod(%object* %call1559, i8* getelementptr([5 x i8]* @.str830,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1560 
; compilenode returning %call1560 
; compilenode returning %call1560 
  %var_val_t1561 = load %object** %var_t 
; compilenode returning %var_val_t1561 
  store %object* %var_val_t1561, %object** %params_0 
  %opresult1563 = call %object* @callmethod(%object* %call1560, i8* getelementptr([3 x i8]* @.str831,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1563 
  ret %object* %opresult1563 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1565 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1566 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1570 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pushnum 
; have closure method: 2 
define %object* @meth_pushnum1564(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_val_sym1565 = load %object** %var_sym 
; compilenode returning %var_val_sym1565 
  %call1566 = call %object* @callmethod(%object* %var_val_sym1565, i8* getelementptr([4 x i8]* @.str833,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1566 
; compilenode returning %call1566 
; compilenode returning %call1566 
  %call1567 = call %object* @callmethod(%object* %call1566, i8* getelementptr([6 x i8]* @.str834,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1567 
; compilenode returning %call1567 
; compilenode returning %call1567 
  store %object* %call1567, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1568 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str835,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1568 
; compilenode returning %call1568 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1568, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1569 = load %object** %var_o 
; compilenode returning %var_val_o1569 
  store %object* %var_val_o1569, %object** %params_0 
  %var_val_values1570 = load %object** %var_values 
; compilenode returning %var_val_values1570 
  %call1571 = call %object* @callmethod(%object* %var_val_values1570, i8* getelementptr([5 x i8]* @.str836,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1571 
; compilenode returning %call1571 
; WARNING: non-member calls not fully supported yet 
  %call1572 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str837,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1572 
; compilenode returning %call1572 
  ret %object* %call1572 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1574 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1575 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1579 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pushstring 
; have closure method: 2 
define %object* @meth_pushstring1573(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_val_sym1574 = load %object** %var_sym 
; compilenode returning %var_val_sym1574 
  %call1575 = call %object* @callmethod(%object* %var_val_sym1574, i8* getelementptr([4 x i8]* @.str839,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1575 
; compilenode returning %call1575 
; compilenode returning %call1575 
  %call1576 = call %object* @callmethod(%object* %call1575, i8* getelementptr([6 x i8]* @.str840,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1576 
; compilenode returning %call1576 
; compilenode returning %call1576 
  store %object* %call1576, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1577 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str841,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1577 
; compilenode returning %call1577 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1577, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1578 = load %object** %var_o 
; compilenode returning %var_val_o1578 
  store %object* %var_val_o1578, %object** %params_0 
  %var_val_values1579 = load %object** %var_values 
; compilenode returning %var_val_values1579 
  %call1580 = call %object* @callmethod(%object* %var_val_values1579, i8* getelementptr([5 x i8]* @.str842,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1580 
; compilenode returning %call1580 
; WARNING: non-member calls not fully supported yet 
  %call1581 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str843,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1581 
; compilenode returning %call1581 
  ret %object* %call1581 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1583 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1584 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1588 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: pushidentifier 
; have closure method: 2 
define %object* @meth_pushidentifier1582(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_val_sym1583 = load %object** %var_sym 
; compilenode returning %var_val_sym1583 
  %call1584 = call %object* @callmethod(%object* %var_val_sym1583, i8* getelementptr([4 x i8]* @.str845,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1584 
; compilenode returning %call1584 
; compilenode returning %call1584 
  %call1585 = call %object* @callmethod(%object* %call1584, i8* getelementptr([6 x i8]* @.str846,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1585 
; compilenode returning %call1585 
; compilenode returning %call1585 
  store %object* %call1585, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1586 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str847,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1586 
; compilenode returning %call1586 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1586, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1587 = load %object** %var_o 
; compilenode returning %var_val_o1587 
  store %object* %var_val_o1587, %object** %params_0 
  %var_val_values1588 = load %object** %var_values 
; compilenode returning %var_val_values1588 
  %call1589 = call %object* @callmethod(%object* %var_val_values1588, i8* getelementptr([5 x i8]* @.str848,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1589 
; compilenode returning %call1589 
; WARNING: non-member calls not fully supported yet 
  %call1590 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str849,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1590 
; compilenode returning %call1590 
  ret %object* %call1590 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1595 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1596 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1605 
; got len 4 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1613 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1614 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %call1628 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1631 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_body1634 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1640 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1641 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %call1655 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1658 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_elseblock1661 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1669 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: doif 
; have closure method: 2 
define %object* @meth_doif1591(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1592 
BeginIf1592: 
  %str1593 = getelementptr [11 x i8]* @.str851, i32 0, i32 0 
  %string1593 = call %object* @alloc_String(i8* %str1593) 
; compilenode returning %string1593 
  store %object* %string1593, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1594 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str852,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1594 
; compilenode returning %call1594 
  %var_val_sym1595 = load %object** %var_sym 
; compilenode returning %var_val_sym1595 
  %call1596 = call %object* @callmethod(%object* %var_val_sym1595, i8* getelementptr([4 x i8]* @.str853,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1596 
; compilenode returning %call1596 
; compilenode returning %call1596 
  %call1597 = call %object* @callmethod(%object* %call1596, i8* getelementptr([6 x i8]* @.str854,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1597 
; compilenode returning %call1597 
; compilenode returning %call1597 
  %str1598 = getelementptr [3 x i8]* @.str855, i32 0, i32 0 
  %string1598 = call %object* @alloc_String(i8* %str1598) 
; compilenode returning %string1598 
  store %object* %string1598, %object** %params_0 
  %opresult1600 = call %object* @callmethod(%object* %call1597, i8* getelementptr([3 x i8]* @.str856,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1600 
  store %object* %opresult1600, %object** %params_0 
  %opresult1602 = call %object* @callmethod(%object* %call1594, i8* getelementptr([2 x i8]* @.str857,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1602 
  %cond1592_valp = call i1 @istrue(%object* %opresult1602) 
  %cond1592 = icmp eq i1 0, %cond1592_valp 
br i1 %cond1592, label %EndIf1592, label %TrueBranch1592 
TrueBranch1592: 
; WARNING: non-member calls not fully supported yet 
  %call1603 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str858,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1603 
; compilenode returning %call1603 
; WARNING: non-member calls not fully supported yet 
  %call1604 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str859,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1604 
; compilenode returning %call1604 
  %var_val_values1605 = load %object** %var_values 
; compilenode returning %var_val_values1605 
  %call1606 = call %object* @callmethod(%object* %var_val_values1605, i8* getelementptr([4 x i8]* @.str860,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1606 
; compilenode returning %call1606 
  %var_cond = call %object** @alloc_var() 
  %var_cond_dec = getelementptr %object* %call1606, i32 0 
  store %object* %var_cond_dec, %object** %var_cond 
; compilenode returning  
  %array1607 = call %object* @alloc_Array() 
; compilenode returning %array1607 
  %var_body = call %object** @alloc_var() 
  %var_body_dec = getelementptr %object* %array1607, i32 0 
  store %object* %var_body_dec, %object** %var_body 
; compilenode returning  
  %array1608 = call %object* @alloc_Array() 
; compilenode returning %array1608 
  %var_elseblock = call %object** @alloc_var() 
  %var_elseblock_dec = getelementptr %object* %array1608, i32 0 
  store %object* %var_elseblock_dec, %object** %var_elseblock 
; compilenode returning  
  %bool1609 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool1609 
  %var_v = call %object** @alloc_var() 
  %var_v_dec = getelementptr %object* %bool1609, i32 0 
  store %object* %var_v_dec, %object** %var_v 
; compilenode returning  
  br label %BeginIf1610 
BeginIf1610: 
  %str1611 = getelementptr [11 x i8]* @.str861, i32 0, i32 0 
  %string1611 = call %object* @alloc_String(i8* %str1611) 
; compilenode returning %string1611 
  store %object* %string1611, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1612 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str862,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1612 
; compilenode returning %call1612 
  %var_val_sym1613 = load %object** %var_sym 
; compilenode returning %var_val_sym1613 
  %call1614 = call %object* @callmethod(%object* %var_val_sym1613, i8* getelementptr([4 x i8]* @.str863,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1614 
; compilenode returning %call1614 
; compilenode returning %call1614 
  %call1615 = call %object* @callmethod(%object* %call1614, i8* getelementptr([6 x i8]* @.str864,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1615 
; compilenode returning %call1615 
; compilenode returning %call1615 
  %str1616 = getelementptr [5 x i8]* @.str865, i32 0, i32 0 
  %string1616 = call %object* @alloc_String(i8* %str1616) 
; compilenode returning %string1616 
  store %object* %string1616, %object** %params_0 
  %opresult1618 = call %object* @callmethod(%object* %call1615, i8* getelementptr([3 x i8]* @.str866,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1618 
  store %object* %opresult1618, %object** %params_0 
  %opresult1620 = call %object* @callmethod(%object* %call1612, i8* getelementptr([2 x i8]* @.str867,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1620 
  %cond1610_valp = call i1 @istrue(%object* %opresult1620) 
  %cond1610 = icmp eq i1 0, %cond1610_valp 
br i1 %cond1610, label %EndIf1610, label %TrueBranch1610 
TrueBranch1610: 
; WARNING: non-member calls not fully supported yet 
  %call1621 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str868,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1621 
; compilenode returning %call1621 
  br label %BeginIf1622 
BeginIf1622: 
  %str1623 = getelementptr [7 x i8]* @.str869, i32 0, i32 0 
  %string1623 = call %object* @alloc_String(i8* %str1623) 
; compilenode returning %string1623 
  store %object* %string1623, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1624 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str870,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1624 
; compilenode returning %call1624 
  %cond1622_valp = call i1 @istrue(%object* %call1624) 
  %cond1622 = icmp eq i1 0, %cond1622_valp 
br i1 %cond1622, label %EndIf1622, label %TrueBranch1622 
TrueBranch1622: 
; WARNING: non-member calls not fully supported yet 
  %call1625 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str871,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1625 
; compilenode returning %call1625 
  br label %BeginWhile1626 
BeginWhile1626: 
  %str1627 = getelementptr [7 x i8]* @.str872, i32 0, i32 0 
  %string1627 = call %object* @alloc_String(i8* %str1627) 
; compilenode returning %string1627 
  store %object* %string1627, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1628 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str873,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1628 
; compilenode returning %call1628 
  %call1629 = call %object* @callmethod(%object* %call1628, i8* getelementptr([4 x i8]* @.str874,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1629 
; compilenode returning %call1629 
; compilenode returning %call1629 
  %cond1626_valp = call i1 @istrue(%object* %call1629) 
  %cond1626 = icmp eq i1 0, %cond1626_valp 
br i1 %cond1626, label %EndWhile1626, label %WhileBody1626 
WhileBody1626: 
; WARNING: non-member calls not fully supported yet 
  %call1630 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str875,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1630 
; compilenode returning %call1630 
  %var_val_values1631 = load %object** %var_values 
; compilenode returning %var_val_values1631 
  %call1632 = call %object* @callmethod(%object* %var_val_values1631, i8* getelementptr([4 x i8]* @.str876,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1632 
; compilenode returning %call1632 
  store %object* %call1632, %object** %var_v 
; compilenode returning %call1632 
  %var_val_v1633 = load %object** %var_v 
; compilenode returning %var_val_v1633 
  store %object* %var_val_v1633, %object** %params_0 
  %var_val_body1634 = load %object** %var_body 
; compilenode returning %var_val_body1634 
  %call1635 = call %object* @callmethod(%object* %var_val_body1634, i8* getelementptr([5 x i8]* @.str877,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1635 
; compilenode returning %call1635 
  br label %BeginWhile1626 
EndWhile1626: 
; compilenode returning %call1629 
; WARNING: non-member calls not fully supported yet 
  %call1636 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str878,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1636 
; compilenode returning %call1636 
  br label %EndIf1622 
EndIf1622: 
  %if1622 = phi %object* [ %call1636, %EndWhile1626], [%call1624, %BeginIf1622] 
; compilenode returning %if1622 
  br label %BeginIf1637 
BeginIf1637: 
  %str1638 = getelementptr [11 x i8]* @.str879, i32 0, i32 0 
  %string1638 = call %object* @alloc_String(i8* %str1638) 
; compilenode returning %string1638 
  store %object* %string1638, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1639 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str880,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1639 
; compilenode returning %call1639 
  %var_val_sym1640 = load %object** %var_sym 
; compilenode returning %var_val_sym1640 
  %call1641 = call %object* @callmethod(%object* %var_val_sym1640, i8* getelementptr([4 x i8]* @.str881,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1641 
; compilenode returning %call1641 
; compilenode returning %call1641 
  %call1642 = call %object* @callmethod(%object* %call1641, i8* getelementptr([6 x i8]* @.str882,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1642 
; compilenode returning %call1642 
; compilenode returning %call1642 
  %str1643 = getelementptr [5 x i8]* @.str883, i32 0, i32 0 
  %string1643 = call %object* @alloc_String(i8* %str1643) 
; compilenode returning %string1643 
  store %object* %string1643, %object** %params_0 
  %opresult1645 = call %object* @callmethod(%object* %call1642, i8* getelementptr([3 x i8]* @.str884,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1645 
  store %object* %opresult1645, %object** %params_0 
  %opresult1647 = call %object* @callmethod(%object* %call1639, i8* getelementptr([2 x i8]* @.str885,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1647 
  %cond1637_valp = call i1 @istrue(%object* %opresult1647) 
  %cond1637 = icmp eq i1 0, %cond1637_valp 
br i1 %cond1637, label %EndIf1637, label %TrueBranch1637 
TrueBranch1637: 
; WARNING: non-member calls not fully supported yet 
  %call1648 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str886,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1648 
; compilenode returning %call1648 
  br label %BeginIf1649 
BeginIf1649: 
  %str1650 = getelementptr [7 x i8]* @.str887, i32 0, i32 0 
  %string1650 = call %object* @alloc_String(i8* %str1650) 
; compilenode returning %string1650 
  store %object* %string1650, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1651 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str888,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1651 
; compilenode returning %call1651 
  %cond1649_valp = call i1 @istrue(%object* %call1651) 
  %cond1649 = icmp eq i1 0, %cond1649_valp 
br i1 %cond1649, label %EndIf1649, label %TrueBranch1649 
TrueBranch1649: 
; WARNING: non-member calls not fully supported yet 
  %call1652 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str889,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1652 
; compilenode returning %call1652 
  br label %BeginWhile1653 
BeginWhile1653: 
  %str1654 = getelementptr [7 x i8]* @.str890, i32 0, i32 0 
  %string1654 = call %object* @alloc_String(i8* %str1654) 
; compilenode returning %string1654 
  store %object* %string1654, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1655 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str891,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1655 
; compilenode returning %call1655 
  %call1656 = call %object* @callmethod(%object* %call1655, i8* getelementptr([4 x i8]* @.str892,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1656 
; compilenode returning %call1656 
; compilenode returning %call1656 
  %cond1653_valp = call i1 @istrue(%object* %call1656) 
  %cond1653 = icmp eq i1 0, %cond1653_valp 
br i1 %cond1653, label %EndWhile1653, label %WhileBody1653 
WhileBody1653: 
; WARNING: non-member calls not fully supported yet 
  %call1657 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str893,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1657 
; compilenode returning %call1657 
  %var_val_values1658 = load %object** %var_values 
; compilenode returning %var_val_values1658 
  %call1659 = call %object* @callmethod(%object* %var_val_values1658, i8* getelementptr([4 x i8]* @.str894,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1659 
; compilenode returning %call1659 
  store %object* %call1659, %object** %var_v 
; compilenode returning %call1659 
  %var_val_v1660 = load %object** %var_v 
; compilenode returning %var_val_v1660 
  store %object* %var_val_v1660, %object** %params_0 
  %var_val_elseblock1661 = load %object** %var_elseblock 
; compilenode returning %var_val_elseblock1661 
  %call1662 = call %object* @callmethod(%object* %var_val_elseblock1661, i8* getelementptr([5 x i8]* @.str895,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1662 
; compilenode returning %call1662 
  br label %BeginWhile1653 
EndWhile1653: 
; compilenode returning %call1656 
; WARNING: non-member calls not fully supported yet 
  %call1663 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str896,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1663 
; compilenode returning %call1663 
  br label %EndIf1649 
EndIf1649: 
  %if1649 = phi %object* [ %call1663, %EndWhile1653], [%call1651, %BeginIf1649] 
; compilenode returning %if1649 
  br label %EndIf1637 
EndIf1637: 
  %if1637 = phi %object* [ %if1649, %EndIf1649], [%opresult1647, %BeginIf1637] 
; compilenode returning %if1637 
  %var_val_cond1664 = load %object** %var_cond 
; compilenode returning %var_val_cond1664 
  %var_val_body1665 = load %object** %var_body 
; compilenode returning %var_val_body1665 
  %var_val_elseblock1666 = load %object** %var_elseblock 
; compilenode returning %var_val_elseblock1666 
  store %object* %var_val_cond1664, %object** %params_0 
  store %object* %var_val_body1665, %object** %params_1 
  store %object* %var_val_elseblock1666, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call1667 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str897,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call1667 
; compilenode returning %call1667 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1667, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1668 = load %object** %var_o 
; compilenode returning %var_val_o1668 
  store %object* %var_val_o1668, %object** %params_0 
  %var_val_values1669 = load %object** %var_values 
; compilenode returning %var_val_values1669 
  %call1670 = call %object* @callmethod(%object* %var_val_values1669, i8* getelementptr([5 x i8]* @.str898,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1670 
; compilenode returning %call1670 
  br label %EndIf1610 
EndIf1610: 
  %if1610 = phi %object* [ %call1670, %EndIf1637], [%opresult1620, %BeginIf1610] 
; compilenode returning %if1610 
  br label %EndIf1592 
EndIf1592: 
  %if1592 = phi %object* [ %if1610, %EndIf1610], [%opresult1602, %BeginIf1592] 
; compilenode returning %if1592 
  ret %object* %if1592 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1675 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1676 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1686 
; got len 4 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1693 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1694 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1707 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %call1715 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1718 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_body1721 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1729 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: dofor 
; have closure method: 2 
define %object* @meth_dofor1671(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1672 
BeginIf1672: 
  %str1673 = getelementptr [11 x i8]* @.str900, i32 0, i32 0 
  %string1673 = call %object* @alloc_String(i8* %str1673) 
; compilenode returning %string1673 
  store %object* %string1673, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1674 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str901,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1674 
; compilenode returning %call1674 
  %var_val_sym1675 = load %object** %var_sym 
; compilenode returning %var_val_sym1675 
  %call1676 = call %object* @callmethod(%object* %var_val_sym1675, i8* getelementptr([4 x i8]* @.str902,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1676 
; compilenode returning %call1676 
; compilenode returning %call1676 
  %call1677 = call %object* @callmethod(%object* %call1676, i8* getelementptr([6 x i8]* @.str903,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1677 
; compilenode returning %call1677 
; compilenode returning %call1677 
  %str1678 = getelementptr [4 x i8]* @.str904, i32 0, i32 0 
  %string1678 = call %object* @alloc_String(i8* %str1678) 
; compilenode returning %string1678 
  store %object* %string1678, %object** %params_0 
  %opresult1680 = call %object* @callmethod(%object* %call1677, i8* getelementptr([3 x i8]* @.str905,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1680 
  store %object* %opresult1680, %object** %params_0 
  %opresult1682 = call %object* @callmethod(%object* %call1674, i8* getelementptr([2 x i8]* @.str906,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1682 
  %cond1672_valp = call i1 @istrue(%object* %opresult1682) 
  %cond1672 = icmp eq i1 0, %cond1672_valp 
br i1 %cond1672, label %EndIf1672, label %TrueBranch1672 
TrueBranch1672: 
; WARNING: non-member calls not fully supported yet 
  %call1683 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str907,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1683 
; compilenode returning %call1683 
  %bool1684 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool1684 
  %var_over = call %object** @alloc_var() 
  %var_over_dec = getelementptr %object* %bool1684, i32 0 
  store %object* %var_over_dec, %object** %var_over 
; compilenode returning  
; WARNING: non-member calls not fully supported yet 
  %call1685 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str908,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1685 
; compilenode returning %call1685 
  %var_val_values1686 = load %object** %var_values 
; compilenode returning %var_val_values1686 
  %call1687 = call %object* @callmethod(%object* %var_val_values1686, i8* getelementptr([4 x i8]* @.str909,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1687 
; compilenode returning %call1687 
  store %object* %call1687, %object** %var_over 
; compilenode returning %call1687 
  %array1688 = call %object* @alloc_Array() 
; compilenode returning %array1688 
  %var_body = call %object** @alloc_var() 
  %var_body_dec = getelementptr %object* %array1688, i32 0 
  store %object* %var_body_dec, %object** %var_body 
; compilenode returning  
  %bool1689 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool1689 
  %var_variable = call %object** @alloc_var() 
  %var_variable_dec = getelementptr %object* %bool1689, i32 0 
  store %object* %var_variable_dec, %object** %var_variable 
; compilenode returning  
  br label %BeginIf1690 
BeginIf1690: 
  %str1691 = getelementptr [11 x i8]* @.str910, i32 0, i32 0 
  %string1691 = call %object* @alloc_String(i8* %str1691) 
; compilenode returning %string1691 
  store %object* %string1691, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1692 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str911,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1692 
; compilenode returning %call1692 
  %var_val_sym1693 = load %object** %var_sym 
; compilenode returning %var_val_sym1693 
  %call1694 = call %object* @callmethod(%object* %var_val_sym1693, i8* getelementptr([4 x i8]* @.str912,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1694 
; compilenode returning %call1694 
; compilenode returning %call1694 
  %call1695 = call %object* @callmethod(%object* %call1694, i8* getelementptr([6 x i8]* @.str913,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1695 
; compilenode returning %call1695 
; compilenode returning %call1695 
  %str1696 = getelementptr [5 x i8]* @.str914, i32 0, i32 0 
  %string1696 = call %object* @alloc_String(i8* %str1696) 
; compilenode returning %string1696 
  store %object* %string1696, %object** %params_0 
  %opresult1698 = call %object* @callmethod(%object* %call1695, i8* getelementptr([3 x i8]* @.str915,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1698 
  store %object* %opresult1698, %object** %params_0 
  %opresult1700 = call %object* @callmethod(%object* %call1692, i8* getelementptr([2 x i8]* @.str916,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1700 
  %cond1690_valp = call i1 @istrue(%object* %opresult1700) 
  %cond1690 = icmp eq i1 0, %cond1690_valp 
br i1 %cond1690, label %EndIf1690, label %TrueBranch1690 
TrueBranch1690: 
; WARNING: non-member calls not fully supported yet 
  %call1701 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str917,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1701 
; compilenode returning %call1701 
  br label %BeginIf1702 
BeginIf1702: 
  %str1703 = getelementptr [7 x i8]* @.str918, i32 0, i32 0 
  %string1703 = call %object* @alloc_String(i8* %str1703) 
; compilenode returning %string1703 
  store %object* %string1703, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1704 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str919,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1704 
; compilenode returning %call1704 
  %cond1702_valp = call i1 @istrue(%object* %call1704) 
  %cond1702 = icmp eq i1 0, %cond1702_valp 
br i1 %cond1702, label %EndIf1702, label %TrueBranch1702 
TrueBranch1702: 
; WARNING: non-member calls not fully supported yet 
  %call1705 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str920,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1705 
; compilenode returning %call1705 
; WARNING: non-member calls not fully supported yet 
  %call1706 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str921,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1706 
; compilenode returning %call1706 
  %var_val_values1707 = load %object** %var_values 
; compilenode returning %var_val_values1707 
  %call1708 = call %object* @callmethod(%object* %var_val_values1707, i8* getelementptr([4 x i8]* @.str922,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1708 
; compilenode returning %call1708 
  store %object* %call1708, %object** %var_variable 
; compilenode returning %call1708 
  br label %BeginIf1709 
BeginIf1709: 
  %str1710 = getelementptr [6 x i8]* @.str923, i32 0, i32 0 
  %string1710 = call %object* @alloc_String(i8* %str1710) 
; compilenode returning %string1710 
  store %object* %string1710, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1711 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str924,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1711 
; compilenode returning %call1711 
  %cond1709_valp = call i1 @istrue(%object* %call1711) 
  %cond1709 = icmp eq i1 0, %cond1709_valp 
br i1 %cond1709, label %EndIf1709, label %TrueBranch1709 
TrueBranch1709: 
; WARNING: non-member calls not fully supported yet 
  %call1712 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str925,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1712 
; compilenode returning %call1712 
  br label %BeginWhile1713 
BeginWhile1713: 
  %str1714 = getelementptr [7 x i8]* @.str926, i32 0, i32 0 
  %string1714 = call %object* @alloc_String(i8* %str1714) 
; compilenode returning %string1714 
  store %object* %string1714, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1715 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str927,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1715 
; compilenode returning %call1715 
  %call1716 = call %object* @callmethod(%object* %call1715, i8* getelementptr([4 x i8]* @.str928,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1716 
; compilenode returning %call1716 
; compilenode returning %call1716 
  %cond1713_valp = call i1 @istrue(%object* %call1716) 
  %cond1713 = icmp eq i1 0, %cond1713_valp 
br i1 %cond1713, label %EndWhile1713, label %WhileBody1713 
WhileBody1713: 
; WARNING: non-member calls not fully supported yet 
  %call1717 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str929,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1717 
; compilenode returning %call1717 
  %var_val_values1718 = load %object** %var_values 
; compilenode returning %var_val_values1718 
  %call1719 = call %object* @callmethod(%object* %var_val_values1718, i8* getelementptr([4 x i8]* @.str930,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1719 
; compilenode returning %call1719 
  %var_v = call %object** @alloc_var() 
  %var_v_dec = getelementptr %object* %call1719, i32 0 
  store %object* %var_v_dec, %object** %var_v 
; compilenode returning  
  %var_val_v1720 = load %object** %var_v 
; compilenode returning %var_val_v1720 
  store %object* %var_val_v1720, %object** %params_0 
  %var_val_body1721 = load %object** %var_body 
; compilenode returning %var_val_body1721 
  %call1722 = call %object* @callmethod(%object* %var_val_body1721, i8* getelementptr([5 x i8]* @.str931,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1722 
; compilenode returning %call1722 
  br label %BeginWhile1713 
EndWhile1713: 
; compilenode returning %call1716 
; WARNING: non-member calls not fully supported yet 
  %call1723 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str932,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1723 
; compilenode returning %call1723 
  br label %EndIf1709 
EndIf1709: 
  %if1709 = phi %object* [ %call1723, %EndWhile1713], [%call1711, %BeginIf1709] 
; compilenode returning %if1709 
  br label %EndIf1702 
EndIf1702: 
  %if1702 = phi %object* [ %if1709, %EndIf1709], [%call1704, %BeginIf1702] 
; compilenode returning %if1702 
  %var_val_over1724 = load %object** %var_over 
; compilenode returning %var_val_over1724 
  %var_val_variable1725 = load %object** %var_variable 
; compilenode returning %var_val_variable1725 
  %var_val_body1726 = load %object** %var_body 
; compilenode returning %var_val_body1726 
  store %object* %var_val_over1724, %object** %params_0 
  store %object* %var_val_variable1725, %object** %params_1 
  store %object* %var_val_body1726, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call1727 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str933,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call1727 
; compilenode returning %call1727 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1727, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1728 = load %object** %var_o 
; compilenode returning %var_val_o1728 
  store %object* %var_val_o1728, %object** %params_0 
  %var_val_values1729 = load %object** %var_values 
; compilenode returning %var_val_values1729 
  %call1730 = call %object* @callmethod(%object* %var_val_values1729, i8* getelementptr([5 x i8]* @.str934,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1730 
; compilenode returning %call1730 
  br label %EndIf1690 
EndIf1690: 
  %if1690 = phi %object* [ %call1730, %EndIf1702], [%opresult1700, %BeginIf1690] 
; compilenode returning %if1690 
  br label %EndIf1672 
EndIf1672: 
  %if1672 = phi %object* [ %if1690, %EndIf1690], [%opresult1682, %BeginIf1672] 
; compilenode returning %if1672 
  ret %object* %if1672 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1735 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1736 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1750 
; got len 4 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1760 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1761 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %call1775 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1778 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_body1781 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1788 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: dowhile 
; have closure method: 2 
define %object* @meth_dowhile1731(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1732 
BeginIf1732: 
  %str1733 = getelementptr [11 x i8]* @.str936, i32 0, i32 0 
  %string1733 = call %object* @alloc_String(i8* %str1733) 
; compilenode returning %string1733 
  store %object* %string1733, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1734 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str937,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1734 
; compilenode returning %call1734 
  %var_val_sym1735 = load %object** %var_sym 
; compilenode returning %var_val_sym1735 
  %call1736 = call %object* @callmethod(%object* %var_val_sym1735, i8* getelementptr([4 x i8]* @.str938,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1736 
; compilenode returning %call1736 
; compilenode returning %call1736 
  %call1737 = call %object* @callmethod(%object* %call1736, i8* getelementptr([6 x i8]* @.str939,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1737 
; compilenode returning %call1737 
; compilenode returning %call1737 
  %str1738 = getelementptr [6 x i8]* @.str940, i32 0, i32 0 
  %string1738 = call %object* @alloc_String(i8* %str1738) 
; compilenode returning %string1738 
  store %object* %string1738, %object** %params_0 
  %opresult1740 = call %object* @callmethod(%object* %call1737, i8* getelementptr([3 x i8]* @.str941,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1740 
  store %object* %opresult1740, %object** %params_0 
  %opresult1742 = call %object* @callmethod(%object* %call1734, i8* getelementptr([2 x i8]* @.str942,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1742 
  %cond1732_valp = call i1 @istrue(%object* %opresult1742) 
  %cond1732 = icmp eq i1 0, %cond1732_valp 
br i1 %cond1732, label %EndIf1732, label %TrueBranch1732 
TrueBranch1732: 
; WARNING: non-member calls not fully supported yet 
  %call1743 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str943,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1743 
; compilenode returning %call1743 
  %bool1744 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool1744 
  %var_cond = call %object** @alloc_var() 
  %var_cond_dec = getelementptr %object* %bool1744, i32 0 
  store %object* %var_cond_dec, %object** %var_cond 
; compilenode returning  
  br label %BeginIf1745 
BeginIf1745: 
  %str1746 = getelementptr [7 x i8]* @.str944, i32 0, i32 0 
  %string1746 = call %object* @alloc_String(i8* %str1746) 
; compilenode returning %string1746 
  store %object* %string1746, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1747 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str945,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1747 
; compilenode returning %call1747 
  %cond1745_valp = call i1 @istrue(%object* %call1747) 
  %cond1745 = icmp eq i1 0, %cond1745_valp 
br i1 %cond1745, label %EndIf1745, label %TrueBranch1745 
TrueBranch1745: 
; WARNING: non-member calls not fully supported yet 
  %call1748 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str946,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1748 
; compilenode returning %call1748 
; WARNING: non-member calls not fully supported yet 
  %call1749 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str947,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1749 
; compilenode returning %call1749 
  %var_val_values1750 = load %object** %var_values 
; compilenode returning %var_val_values1750 
  %call1751 = call %object* @callmethod(%object* %var_val_values1750, i8* getelementptr([4 x i8]* @.str948,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1751 
; compilenode returning %call1751 
  store %object* %call1751, %object** %var_cond 
; compilenode returning %call1751 
  br label %BeginIf1752 
BeginIf1752: 
  %str1753 = getelementptr [7 x i8]* @.str949, i32 0, i32 0 
  %string1753 = call %object* @alloc_String(i8* %str1753) 
; compilenode returning %string1753 
  store %object* %string1753, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1754 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str950,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1754 
; compilenode returning %call1754 
  %cond1752_valp = call i1 @istrue(%object* %call1754) 
  %cond1752 = icmp eq i1 0, %cond1752_valp 
br i1 %cond1752, label %EndIf1752, label %TrueBranch1752 
TrueBranch1752: 
; WARNING: non-member calls not fully supported yet 
  %call1755 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str951,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1755 
; compilenode returning %call1755 
  br label %EndIf1752 
EndIf1752: 
  %if1752 = phi %object* [ %call1755, %TrueBranch1752], [%call1754, %BeginIf1752] 
; compilenode returning %if1752 
  br label %EndIf1745 
EndIf1745: 
  %if1745 = phi %object* [ %if1752, %EndIf1752], [%call1747, %BeginIf1745] 
; compilenode returning %if1745 
  %array1756 = call %object* @alloc_Array() 
; compilenode returning %array1756 
  %var_body = call %object** @alloc_var() 
  %var_body_dec = getelementptr %object* %array1756, i32 0 
  store %object* %var_body_dec, %object** %var_body 
; compilenode returning  
  br label %BeginIf1757 
BeginIf1757: 
  %str1758 = getelementptr [11 x i8]* @.str952, i32 0, i32 0 
  %string1758 = call %object* @alloc_String(i8* %str1758) 
; compilenode returning %string1758 
  store %object* %string1758, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1759 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str953,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1759 
; compilenode returning %call1759 
  %var_val_sym1760 = load %object** %var_sym 
; compilenode returning %var_val_sym1760 
  %call1761 = call %object* @callmethod(%object* %var_val_sym1760, i8* getelementptr([4 x i8]* @.str954,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1761 
; compilenode returning %call1761 
; compilenode returning %call1761 
  %call1762 = call %object* @callmethod(%object* %call1761, i8* getelementptr([6 x i8]* @.str955,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1762 
; compilenode returning %call1762 
; compilenode returning %call1762 
  %str1763 = getelementptr [3 x i8]* @.str956, i32 0, i32 0 
  %string1763 = call %object* @alloc_String(i8* %str1763) 
; compilenode returning %string1763 
  store %object* %string1763, %object** %params_0 
  %opresult1765 = call %object* @callmethod(%object* %call1762, i8* getelementptr([3 x i8]* @.str957,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1765 
  store %object* %opresult1765, %object** %params_0 
  %opresult1767 = call %object* @callmethod(%object* %call1759, i8* getelementptr([2 x i8]* @.str958,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1767 
  %cond1757_valp = call i1 @istrue(%object* %opresult1767) 
  %cond1757 = icmp eq i1 0, %cond1757_valp 
br i1 %cond1757, label %EndIf1757, label %TrueBranch1757 
TrueBranch1757: 
; WARNING: non-member calls not fully supported yet 
  %call1768 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str959,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1768 
; compilenode returning %call1768 
  br label %BeginIf1769 
BeginIf1769: 
  %str1770 = getelementptr [7 x i8]* @.str960, i32 0, i32 0 
  %string1770 = call %object* @alloc_String(i8* %str1770) 
; compilenode returning %string1770 
  store %object* %string1770, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1771 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str961,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1771 
; compilenode returning %call1771 
  %cond1769_valp = call i1 @istrue(%object* %call1771) 
  %cond1769 = icmp eq i1 0, %cond1769_valp 
br i1 %cond1769, label %EndIf1769, label %TrueBranch1769 
TrueBranch1769: 
; WARNING: non-member calls not fully supported yet 
  %call1772 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str962,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1772 
; compilenode returning %call1772 
  br label %BeginWhile1773 
BeginWhile1773: 
  %str1774 = getelementptr [7 x i8]* @.str963, i32 0, i32 0 
  %string1774 = call %object* @alloc_String(i8* %str1774) 
; compilenode returning %string1774 
  store %object* %string1774, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1775 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str964,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1775 
; compilenode returning %call1775 
  %call1776 = call %object* @callmethod(%object* %call1775, i8* getelementptr([4 x i8]* @.str965,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1776 
; compilenode returning %call1776 
; compilenode returning %call1776 
  %cond1773_valp = call i1 @istrue(%object* %call1776) 
  %cond1773 = icmp eq i1 0, %cond1773_valp 
br i1 %cond1773, label %EndWhile1773, label %WhileBody1773 
WhileBody1773: 
; WARNING: non-member calls not fully supported yet 
  %call1777 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str966,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1777 
; compilenode returning %call1777 
  %var_val_values1778 = load %object** %var_values 
; compilenode returning %var_val_values1778 
  %call1779 = call %object* @callmethod(%object* %var_val_values1778, i8* getelementptr([4 x i8]* @.str967,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1779 
; compilenode returning %call1779 
  %var_v = call %object** @alloc_var() 
  %var_v_dec = getelementptr %object* %call1779, i32 0 
  store %object* %var_v_dec, %object** %var_v 
; compilenode returning  
  %var_val_v1780 = load %object** %var_v 
; compilenode returning %var_val_v1780 
  store %object* %var_val_v1780, %object** %params_0 
  %var_val_body1781 = load %object** %var_body 
; compilenode returning %var_val_body1781 
  %call1782 = call %object* @callmethod(%object* %var_val_body1781, i8* getelementptr([5 x i8]* @.str968,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1782 
; compilenode returning %call1782 
  br label %BeginWhile1773 
EndWhile1773: 
; compilenode returning %call1776 
; WARNING: non-member calls not fully supported yet 
  %call1783 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str969,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1783 
; compilenode returning %call1783 
  br label %EndIf1769 
EndIf1769: 
  %if1769 = phi %object* [ %call1783, %EndWhile1773], [%call1771, %BeginIf1769] 
; compilenode returning %if1769 
  %var_val_cond1784 = load %object** %var_cond 
; compilenode returning %var_val_cond1784 
  %var_val_body1785 = load %object** %var_body 
; compilenode returning %var_val_body1785 
  store %object* %var_val_cond1784, %object** %params_0 
  store %object* %var_val_body1785, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call1786 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str970,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call1786 
; compilenode returning %call1786 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1786, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1787 = load %object** %var_o 
; compilenode returning %var_val_o1787 
  store %object* %var_val_o1787, %object** %params_0 
  %var_val_values1788 = load %object** %var_values 
; compilenode returning %var_val_values1788 
  %call1789 = call %object* @callmethod(%object* %var_val_values1788, i8* getelementptr([5 x i8]* @.str971,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1789 
; compilenode returning %call1789 
  br label %EndIf1757 
EndIf1757: 
  %if1757 = phi %object* [ %call1789, %EndIf1769], [%opresult1767, %BeginIf1757] 
; compilenode returning %if1757 
  br label %EndIf1732 
EndIf1732: 
  %if1732 = phi %object* [ %if1757, %EndIf1757], [%opresult1742, %BeginIf1732] 
; compilenode returning %if1732 
  ret %object* %if1732 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1795 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1796 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1803 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1804 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1811 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1812 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: identifier 
; have closure method: 1 
define %object* @meth_identifier1790(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1791 
BeginIf1791: 
  %str1792 = getelementptr [11 x i8]* @.str973, i32 0, i32 0 
  %string1792 = call %object* @alloc_String(i8* %str1792) 
; compilenode returning %string1792 
  store %object* %string1792, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1793 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str974,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1793 
; compilenode returning %call1793 
  %cond1791_valp = call i1 @istrue(%object* %call1793) 
  %cond1791 = icmp eq i1 0, %cond1791_valp 
br i1 %cond1791, label %EndIf1791, label %TrueBranch1791 
TrueBranch1791: 
  br label %BeginIf1794 
BeginIf1794: 
  %var_val_sym1795 = load %object** %var_sym 
; compilenode returning %var_val_sym1795 
  %call1796 = call %object* @callmethod(%object* %var_val_sym1795, i8* getelementptr([4 x i8]* @.str975,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1796 
; compilenode returning %call1796 
; compilenode returning %call1796 
  %call1797 = call %object* @callmethod(%object* %call1796, i8* getelementptr([6 x i8]* @.str976,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1797 
; compilenode returning %call1797 
; compilenode returning %call1797 
  %str1798 = getelementptr [3 x i8]* @.str977, i32 0, i32 0 
  %string1798 = call %object* @alloc_String(i8* %str1798) 
; compilenode returning %string1798 
  store %object* %string1798, %object** %params_0 
  %opresult1800 = call %object* @callmethod(%object* %call1797, i8* getelementptr([3 x i8]* @.str978,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1800 
  %cond1794_valp = call i1 @istrue(%object* %opresult1800) 
  %cond1794 = icmp eq i1 0, %cond1794_valp 
br i1 %cond1794, label %FalseBranch1794, label %TrueBranch1794 
TrueBranch1794: 
; WARNING: non-member calls not fully supported yet 
  %call1801 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str979,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1801 
; compilenode returning %call1801 
  br label %EndIf1794 
FalseBranch1794: 
  br label %BeginIf1802 
BeginIf1802: 
  %var_val_sym1803 = load %object** %var_sym 
; compilenode returning %var_val_sym1803 
  %call1804 = call %object* @callmethod(%object* %var_val_sym1803, i8* getelementptr([4 x i8]* @.str980,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1804 
; compilenode returning %call1804 
; compilenode returning %call1804 
  %call1805 = call %object* @callmethod(%object* %call1804, i8* getelementptr([6 x i8]* @.str981,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1805 
; compilenode returning %call1805 
; compilenode returning %call1805 
  %str1806 = getelementptr [6 x i8]* @.str982, i32 0, i32 0 
  %string1806 = call %object* @alloc_String(i8* %str1806) 
; compilenode returning %string1806 
  store %object* %string1806, %object** %params_0 
  %opresult1808 = call %object* @callmethod(%object* %call1805, i8* getelementptr([3 x i8]* @.str983,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1808 
  %cond1802_valp = call i1 @istrue(%object* %opresult1808) 
  %cond1802 = icmp eq i1 0, %cond1802_valp 
br i1 %cond1802, label %FalseBranch1802, label %TrueBranch1802 
TrueBranch1802: 
; WARNING: non-member calls not fully supported yet 
  %call1809 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str984,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1809 
; compilenode returning %call1809 
  br label %EndIf1802 
FalseBranch1802: 
  br label %BeginIf1810 
BeginIf1810: 
  %var_val_sym1811 = load %object** %var_sym 
; compilenode returning %var_val_sym1811 
  %call1812 = call %object* @callmethod(%object* %var_val_sym1811, i8* getelementptr([4 x i8]* @.str985,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1812 
; compilenode returning %call1812 
; compilenode returning %call1812 
  %call1813 = call %object* @callmethod(%object* %call1812, i8* getelementptr([6 x i8]* @.str986,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1813 
; compilenode returning %call1813 
; compilenode returning %call1813 
  %str1814 = getelementptr [4 x i8]* @.str987, i32 0, i32 0 
  %string1814 = call %object* @alloc_String(i8* %str1814) 
; compilenode returning %string1814 
  store %object* %string1814, %object** %params_0 
  %opresult1816 = call %object* @callmethod(%object* %call1813, i8* getelementptr([3 x i8]* @.str988,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1816 
  %cond1810_valp = call i1 @istrue(%object* %opresult1816) 
  %cond1810 = icmp eq i1 0, %cond1810_valp 
br i1 %cond1810, label %FalseBranch1810, label %TrueBranch1810 
TrueBranch1810: 
; WARNING: non-member calls not fully supported yet 
  %call1817 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str989,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1817 
; compilenode returning %call1817 
  br label %EndIf1810 
FalseBranch1810: 
; WARNING: non-member calls not fully supported yet 
  %call1818 = call %object* @callmethod(%object* %self, i8* getelementptr([15 x i8]* @.str990,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1818 
; compilenode returning %call1818 
  br label %EndIf1810 
EndIf1810: 
  %if1810 = phi %object* [ %call1817, %TrueBranch1810], [%call1818, %FalseBranch1810] 
; compilenode returning %if1810 
  br label %EndIf1802 
EndIf1802: 
  %if1802 = phi %object* [ %call1809, %TrueBranch1802], [%if1810, %EndIf1810] 
; compilenode returning %if1802 
  br label %EndIf1794 
EndIf1794: 
  %if1794 = phi %object* [ %call1801, %TrueBranch1794], [%if1802, %EndIf1802] 
; compilenode returning %if1794 
  br label %EndIf1791 
EndIf1791: 
  %if1791 = phi %object* [ %if1794, %EndIf1794], [%call1793, %BeginIf1791] 
; compilenode returning %if1791 
  ret %object* %if1791 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1844 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1845 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: expression 
; have closure method: 1 
define %object* @meth_expression1819(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1820 
BeginIf1820: 
  %str1821 = getelementptr [7 x i8]* @.str992, i32 0, i32 0 
  %string1821 = call %object* @alloc_String(i8* %str1821) 
; compilenode returning %string1821 
  store %object* %string1821, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1822 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str993,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1822 
; compilenode returning %call1822 
  %cond1820_valp = call i1 @istrue(%object* %call1822) 
  %cond1820 = icmp eq i1 0, %cond1820_valp 
br i1 %cond1820, label %FalseBranch1820, label %TrueBranch1820 
TrueBranch1820: 
; WARNING: non-member calls not fully supported yet 
  %call1823 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str994,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1823 
; compilenode returning %call1823 
; WARNING: non-member calls not fully supported yet 
  %call1824 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str995,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1824 
; compilenode returning %call1824 
  br label %BeginIf1825 
BeginIf1825: 
  %str1826 = getelementptr [7 x i8]* @.str996, i32 0, i32 0 
  %string1826 = call %object* @alloc_String(i8* %str1826) 
; compilenode returning %string1826 
  store %object* %string1826, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1827 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str997,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1827 
; compilenode returning %call1827 
  %cond1825_valp = call i1 @istrue(%object* %call1827) 
  %cond1825 = icmp eq i1 0, %cond1825_valp 
br i1 %cond1825, label %EndIf1825, label %TrueBranch1825 
TrueBranch1825: 
; WARNING: non-member calls not fully supported yet 
  %call1828 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str998,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1828 
; compilenode returning %call1828 
  br label %EndIf1825 
EndIf1825: 
  %if1825 = phi %object* [ %call1828, %TrueBranch1825], [%call1827, %BeginIf1825] 
; compilenode returning %if1825 
  br label %EndIf1820 
FalseBranch1820: 
  br label %BeginIf1829 
BeginIf1829: 
  %str1830 = getelementptr [4 x i8]* @.str999, i32 0, i32 0 
  %string1830 = call %object* @alloc_String(i8* %str1830) 
; compilenode returning %string1830 
  store %object* %string1830, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1831 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1000,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1831 
; compilenode returning %call1831 
  %cond1829_valp = call i1 @istrue(%object* %call1831) 
  %cond1829 = icmp eq i1 0, %cond1829_valp 
br i1 %cond1829, label %FalseBranch1829, label %TrueBranch1829 
TrueBranch1829: 
; WARNING: non-member calls not fully supported yet 
  %call1832 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1001,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1832 
; compilenode returning %call1832 
  br label %EndIf1829 
FalseBranch1829: 
  br label %BeginIf1833 
BeginIf1833: 
  %str1834 = getelementptr [7 x i8]* @.str1002, i32 0, i32 0 
  %string1834 = call %object* @alloc_String(i8* %str1834) 
; compilenode returning %string1834 
  store %object* %string1834, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1835 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1003,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1835 
; compilenode returning %call1835 
  %cond1833_valp = call i1 @istrue(%object* %call1835) 
  %cond1833 = icmp eq i1 0, %cond1833_valp 
br i1 %cond1833, label %FalseBranch1833, label %TrueBranch1833 
TrueBranch1833: 
; WARNING: non-member calls not fully supported yet 
  %call1836 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1004,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1836 
; compilenode returning %call1836 
  br label %EndIf1833 
FalseBranch1833: 
  br label %BeginIf1837 
BeginIf1837: 
  %str1838 = getelementptr [11 x i8]* @.str1005, i32 0, i32 0 
  %string1838 = call %object* @alloc_String(i8* %str1838) 
; compilenode returning %string1838 
  store %object* %string1838, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1839 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1006,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1839 
; compilenode returning %call1839 
  %cond1837_valp = call i1 @istrue(%object* %call1839) 
  %cond1837 = icmp eq i1 0, %cond1837_valp 
br i1 %cond1837, label %FalseBranch1837, label %TrueBranch1837 
TrueBranch1837: 
; WARNING: non-member calls not fully supported yet 
  %call1840 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1007,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1840 
; compilenode returning %call1840 
  br label %EndIf1837 
FalseBranch1837: 
  br label %BeginIf1841 
BeginIf1841: 
  %str1842 = getelementptr [8 x i8]* @.str1008, i32 0, i32 0 
  %string1842 = call %object* @alloc_String(i8* %str1842) 
; compilenode returning %string1842 
  store %object* %string1842, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1843 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1009,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1843 
; compilenode returning %call1843 
  %var_val_sym1844 = load %object** %var_sym 
; compilenode returning %var_val_sym1844 
  %call1845 = call %object* @callmethod(%object* %var_val_sym1844, i8* getelementptr([4 x i8]* @.str1010,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1845 
; compilenode returning %call1845 
; compilenode returning %call1845 
  %call1846 = call %object* @callmethod(%object* %call1845, i8* getelementptr([6 x i8]* @.str1011,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1846 
; compilenode returning %call1846 
; compilenode returning %call1846 
  %str1847 = getelementptr [7 x i8]* @.str1012, i32 0, i32 0 
  %string1847 = call %object* @alloc_String(i8* %str1847) 
; compilenode returning %string1847 
  store %object* %string1847, %object** %params_0 
  %opresult1849 = call %object* @callmethod(%object* %call1846, i8* getelementptr([3 x i8]* @.str1013,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1849 
  store %object* %opresult1849, %object** %params_0 
  %opresult1851 = call %object* @callmethod(%object* %call1843, i8* getelementptr([2 x i8]* @.str1014,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1851 
  %cond1841_valp = call i1 @istrue(%object* %opresult1851) 
  %cond1841 = icmp eq i1 0, %cond1841_valp 
br i1 %cond1841, label %FalseBranch1841, label %TrueBranch1841 
TrueBranch1841: 
; WARNING: non-member calls not fully supported yet 
  %call1852 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str1015,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1852 
; compilenode returning %call1852 
  br label %EndIf1841 
FalseBranch1841: 
  br label %BeginIf1853 
BeginIf1853: 
  %str1854 = getelementptr [8 x i8]* @.str1016, i32 0, i32 0 
  %string1854 = call %object* @alloc_String(i8* %str1854) 
; compilenode returning %string1854 
  store %object* %string1854, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1855 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1017,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1855 
; compilenode returning %call1855 
  %cond1853_valp = call i1 @istrue(%object* %call1855) 
  %cond1853 = icmp eq i1 0, %cond1853_valp 
br i1 %cond1853, label %EndIf1853, label %TrueBranch1853 
TrueBranch1853: 
; WARNING: non-member calls not fully supported yet 
  %call1856 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1018,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1856 
; compilenode returning %call1856 
  br label %EndIf1853 
EndIf1853: 
  %if1853 = phi %object* [ %call1856, %TrueBranch1853], [%call1855, %BeginIf1853] 
; compilenode returning %if1853 
  br label %EndIf1841 
EndIf1841: 
  %if1841 = phi %object* [ %call1852, %TrueBranch1841], [%if1853, %EndIf1853] 
; compilenode returning %if1841 
  br label %EndIf1837 
EndIf1837: 
  %if1837 = phi %object* [ %call1840, %TrueBranch1837], [%if1841, %EndIf1841] 
; compilenode returning %if1837 
  br label %EndIf1833 
EndIf1833: 
  %if1833 = phi %object* [ %call1836, %TrueBranch1833], [%if1837, %EndIf1837] 
; compilenode returning %if1833 
  br label %EndIf1829 
EndIf1829: 
  %if1829 = phi %object* [ %call1832, %TrueBranch1829], [%if1833, %EndIf1833] 
; compilenode returning %if1829 
  br label %EndIf1820 
EndIf1820: 
  %if1820 = phi %object* [ %if1825, %EndIf1825], [%if1829, %EndIf1829] 
; compilenode returning %if1820 
; WARNING: non-member calls not fully supported yet 
  %call1857 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1019,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1857 
; compilenode returning %call1857 
; WARNING: non-member calls not fully supported yet 
  %call1858 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str1020,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1858 
; compilenode returning %call1858 
; WARNING: non-member calls not fully supported yet 
  %call1859 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str1021,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1859 
; compilenode returning %call1859 
; WARNING: non-member calls not fully supported yet 
  %call1860 = call %object* @callmethod(%object* %self, i8* getelementptr([15 x i8]* @.str1022,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1860 
; compilenode returning %call1860 
  ret %object* %call1860 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values1866 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1869 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1879 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: postfixsquare 
; have closure method: 1 
define %object* @meth_postfixsquare1861(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_values = getelementptr %object*** %closure, i32 0 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1862 
BeginIf1862: 
  %str1863 = getelementptr [8 x i8]* @.str1024, i32 0, i32 0 
  %string1863 = call %object* @alloc_String(i8* %str1863) 
; compilenode returning %string1863 
  store %object* %string1863, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1864 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1025,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1864 
; compilenode returning %call1864 
  %cond1862_valp = call i1 @istrue(%object* %call1864) 
  %cond1862 = icmp eq i1 0, %cond1862_valp 
br i1 %cond1862, label %EndIf1862, label %TrueBranch1862 
TrueBranch1862: 
; WARNING: non-member calls not fully supported yet 
  %call1865 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1026,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1865 
; compilenode returning %call1865 
  %var_val_values1866 = load %object** %var_values 
; compilenode returning %var_val_values1866 
  %call1867 = call %object* @callmethod(%object* %var_val_values1866, i8* getelementptr([4 x i8]* @.str1027,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1867 
; compilenode returning %call1867 
  %var_expr = call %object** @alloc_var() 
  %var_expr_dec = getelementptr %object* %call1867, i32 0 
  store %object* %var_expr_dec, %object** %var_expr 
; compilenode returning  
; WARNING: non-member calls not fully supported yet 
  %call1868 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1028,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1868 
; compilenode returning %call1868 
  %var_val_values1869 = load %object** %var_values 
; compilenode returning %var_val_values1869 
  %call1870 = call %object* @callmethod(%object* %var_val_values1869, i8* getelementptr([4 x i8]* @.str1029,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1870 
; compilenode returning %call1870 
  %var_index = call %object** @alloc_var() 
  %var_index_dec = getelementptr %object* %call1870, i32 0 
  store %object* %var_index_dec, %object** %var_index 
; compilenode returning  
  br label %BeginIf1871 
BeginIf1871: 
  %str1872 = getelementptr [8 x i8]* @.str1030, i32 0, i32 0 
  %string1872 = call %object* @alloc_String(i8* %str1872) 
; compilenode returning %string1872 
  store %object* %string1872, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1873 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1031,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1873 
; compilenode returning %call1873 
  %cond1871_valp = call i1 @istrue(%object* %call1873) 
  %cond1871 = icmp eq i1 0, %cond1871_valp 
br i1 %cond1871, label %EndIf1871, label %TrueBranch1871 
TrueBranch1871: 
; WARNING: non-member calls not fully supported yet 
  %call1874 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1032,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1874 
; compilenode returning %call1874 
  %var_val_expr1875 = load %object** %var_expr 
; compilenode returning %var_val_expr1875 
  %var_val_index1876 = load %object** %var_index 
; compilenode returning %var_val_index1876 
  store %object* %var_val_expr1875, %object** %params_0 
  store %object* %var_val_index1876, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call1877 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str1033,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call1877 
; compilenode returning %call1877 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1877, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1878 = load %object** %var_o 
; compilenode returning %var_val_o1878 
  store %object* %var_val_o1878, %object** %params_0 
  %var_val_values1879 = load %object** %var_values 
; compilenode returning %var_val_values1879 
  %call1880 = call %object* @callmethod(%object* %var_val_values1879, i8* getelementptr([5 x i8]* @.str1034,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1880 
; compilenode returning %call1880 
  br label %EndIf1871 
EndIf1871: 
  %if1871 = phi %object* [ %call1880, %TrueBranch1871], [%call1873, %BeginIf1871] 
; compilenode returning %if1871 
  br label %EndIf1862 
EndIf1862: 
  %if1862 = phi %object* [ %if1871, %EndIf1871], [%call1864, %BeginIf1862] 
; compilenode returning %if1862 
  ret %object* %if1862 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values1885 
; got len 4 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1887 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1888 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1895 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_ero1897 
; got len 8 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1900 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: expressionrest 
; have closure method: 2 
define %object* @meth_expressionrest1881(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_values = getelementptr %object*** %closure, i32 0 
  %var_values = load %object*** %varc_values 
  %varc_sym = getelementptr %object*** %closure, i32 1 
  %var_sym = load %object*** %varc_sym 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1882 
BeginIf1882: 
  %str1883 = getelementptr [3 x i8]* @.str1036, i32 0, i32 0 
  %string1883 = call %object* @alloc_String(i8* %str1883) 
; compilenode returning %string1883 
  store %object* %string1883, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1884 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1037,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1884 
; compilenode returning %call1884 
  %cond1882_valp = call i1 @istrue(%object* %call1884) 
  %cond1882 = icmp eq i1 0, %cond1882_valp 
br i1 %cond1882, label %EndIf1882, label %TrueBranch1882 
TrueBranch1882: 
  %var_val_values1885 = load %object** %var_values 
; compilenode returning %var_val_values1885 
  %call1886 = call %object* @callmethod(%object* %var_val_values1885, i8* getelementptr([4 x i8]* @.str1038,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1886 
; compilenode returning %call1886 
  %var_a = call %object** @alloc_var() 
  %var_a_dec = getelementptr %object* %call1886, i32 0 
  store %object* %var_a_dec, %object** %var_a 
; compilenode returning  
  %var_val_sym1887 = load %object** %var_sym 
; compilenode returning %var_val_sym1887 
  %call1888 = call %object* @callmethod(%object* %var_val_sym1887, i8* getelementptr([4 x i8]* @.str1039,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1888 
; compilenode returning %call1888 
; compilenode returning %call1888 
  %call1889 = call %object* @callmethod(%object* %call1888, i8* getelementptr([6 x i8]* @.str1040,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1889 
; compilenode returning %call1889 
; compilenode returning %call1889 
  %var_val_a1890 = load %object** %var_a 
; compilenode returning %var_val_a1890 
  %num1891 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1891 
  store %object* %call1889, %object** %params_0 
  store %object* %var_val_a1890, %object** %params_1 
  store %object* %num1891, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call1892 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str1041,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call1892 
; compilenode returning %call1892 
  %var_ero = call %object** @alloc_var() 
  %var_ero_dec = getelementptr %object* %call1892, i32 0 
  store %object* %var_ero_dec, %object** %var_ero 
; compilenode returning  
; WARNING: non-member calls not fully supported yet 
  %call1893 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1042,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1893 
; compilenode returning %call1893 
; WARNING: non-member calls not fully supported yet 
  %call1894 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1043,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1894 
; compilenode returning %call1894 
; WARNING: non-local assigns not yet fully supported 
  %var_val_values1895 = load %object** %var_values 
; compilenode returning %var_val_values1895 
  %call1896 = call %object* @callmethod(%object* %var_val_values1895, i8* getelementptr([4 x i8]* @.str1044,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1896 
; compilenode returning %call1896 
  store %object* %call1896, %object** %params_0 
  %var_val_ero1897 = load %object** %var_ero 
; compilenode returning %var_val_ero1897 
  %call1898 = call %object* @callmethod(%object* %var_val_ero1897, i8* getelementptr([8 x i8]* @.str1045,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1898 
; compilenode returning %call1898 
; compilenode returning %call1898 
  %var_val_ero1899 = load %object** %var_ero 
; compilenode returning %var_val_ero1899 
  store %object* %var_val_ero1899, %object** %params_0 
  %var_val_values1900 = load %object** %var_values 
; compilenode returning %var_val_values1900 
  %call1901 = call %object* @callmethod(%object* %var_val_values1900, i8* getelementptr([5 x i8]* @.str1046,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1901 
; compilenode returning %call1901 
  br label %EndIf1882 
EndIf1882: 
  %if1882 = phi %object* [ %call1901, %TrueBranch1882], [%call1884, %BeginIf1882] 
; compilenode returning %if1882 
  ret %object* %if1882 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values1906 
; got len 4 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym1912 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1913 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1918 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: dotrest 
; have closure method: 2 
define %object* @meth_dotrest1902(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_values = getelementptr %object*** %closure, i32 0 
  %var_values = load %object*** %varc_values 
  %varc_sym = getelementptr %object*** %closure, i32 1 
  %var_sym = load %object*** %varc_sym 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1903 
BeginIf1903: 
  %str1904 = getelementptr [4 x i8]* @.str1048, i32 0, i32 0 
  %string1904 = call %object* @alloc_String(i8* %str1904) 
; compilenode returning %string1904 
  store %object* %string1904, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1905 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1049,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1905 
; compilenode returning %call1905 
  %cond1903_valp = call i1 @istrue(%object* %call1905) 
  %cond1903 = icmp eq i1 0, %cond1903_valp 
br i1 %cond1903, label %EndIf1903, label %TrueBranch1903 
TrueBranch1903: 
  %var_val_values1906 = load %object** %var_values 
; compilenode returning %var_val_values1906 
  %call1907 = call %object* @callmethod(%object* %var_val_values1906, i8* getelementptr([4 x i8]* @.str1050,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1907 
; compilenode returning %call1907 
  %var_lookuptarget = call %object** @alloc_var() 
  %var_lookuptarget_dec = getelementptr %object* %call1907, i32 0 
  store %object* %var_lookuptarget_dec, %object** %var_lookuptarget 
; compilenode returning  
; WARNING: non-member calls not fully supported yet 
  %call1908 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1051,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1908 
; compilenode returning %call1908 
  br label %BeginIf1909 
BeginIf1909: 
  %str1910 = getelementptr [11 x i8]* @.str1052, i32 0, i32 0 
  %string1910 = call %object* @alloc_String(i8* %str1910) 
; compilenode returning %string1910 
  store %object* %string1910, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1911 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1053,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1911 
; compilenode returning %call1911 
  %cond1909_valp = call i1 @istrue(%object* %call1911) 
  %cond1909 = icmp eq i1 0, %cond1909_valp 
br i1 %cond1909, label %EndIf1909, label %TrueBranch1909 
TrueBranch1909: 
  %var_val_sym1912 = load %object** %var_sym 
; compilenode returning %var_val_sym1912 
  %call1913 = call %object* @callmethod(%object* %var_val_sym1912, i8* getelementptr([4 x i8]* @.str1054,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1913 
; compilenode returning %call1913 
; compilenode returning %call1913 
  %call1914 = call %object* @callmethod(%object* %call1913, i8* getelementptr([6 x i8]* @.str1055,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1914 
; compilenode returning %call1914 
; compilenode returning %call1914 
  %var_val_lookuptarget1915 = load %object** %var_lookuptarget 
; compilenode returning %var_val_lookuptarget1915 
  store %object* %call1914, %object** %params_0 
  store %object* %var_val_lookuptarget1915, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call1916 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1056,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call1916 
; compilenode returning %call1916 
  %var_dro = call %object** @alloc_var() 
  %var_dro_dec = getelementptr %object* %call1916, i32 0 
  store %object* %var_dro_dec, %object** %var_dro 
; compilenode returning  
  %var_val_dro1917 = load %object** %var_dro 
; compilenode returning %var_val_dro1917 
  store %object* %var_val_dro1917, %object** %params_0 
  %var_val_values1918 = load %object** %var_values 
; compilenode returning %var_val_values1918 
  %call1919 = call %object* @callmethod(%object* %var_val_values1918, i8* getelementptr([5 x i8]* @.str1057,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1919 
; compilenode returning %call1919 
; WARNING: non-member calls not fully supported yet 
  %call1920 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1058,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1920 
; compilenode returning %call1920 
  br label %BeginIf1921 
BeginIf1921: 
  %str1922 = getelementptr [4 x i8]* @.str1059, i32 0, i32 0 
  %string1922 = call %object* @alloc_String(i8* %str1922) 
; compilenode returning %string1922 
  store %object* %string1922, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1923 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1060,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1923 
; compilenode returning %call1923 
  %cond1921_valp = call i1 @istrue(%object* %call1923) 
  %cond1921 = icmp eq i1 0, %cond1921_valp 
br i1 %cond1921, label %FalseBranch1921, label %TrueBranch1921 
TrueBranch1921: 
; WARNING: non-member calls not fully supported yet 
  %call1924 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1061,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1924 
; compilenode returning %call1924 
  br label %EndIf1921 
FalseBranch1921: 
  br label %BeginIf1925 
BeginIf1925: 
  %str1926 = getelementptr [7 x i8]* @.str1062, i32 0, i32 0 
  %string1926 = call %object* @alloc_String(i8* %str1926) 
; compilenode returning %string1926 
  store %object* %string1926, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1927 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1063,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1927 
; compilenode returning %call1927 
  %cond1925_valp = call i1 @istrue(%object* %call1927) 
  %cond1925 = icmp eq i1 0, %cond1925_valp 
br i1 %cond1925, label %EndIf1925, label %TrueBranch1925 
TrueBranch1925: 
; WARNING: non-member calls not fully supported yet 
  %call1928 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str1064,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1928 
; compilenode returning %call1928 
  br label %EndIf1925 
EndIf1925: 
  %if1925 = phi %object* [ %call1928, %TrueBranch1925], [%call1927, %BeginIf1925] 
; compilenode returning %if1925 
  br label %EndIf1921 
EndIf1921: 
  %if1921 = phi %object* [ %call1924, %TrueBranch1921], [%if1925, %EndIf1925] 
; compilenode returning %if1921 
  br label %EndIf1909 
EndIf1909: 
  %if1909 = phi %object* [ %if1921, %EndIf1921], [%call1911, %BeginIf1909] 
; compilenode returning %if1909 
  br label %EndIf1903 
EndIf1903: 
  %if1903 = phi %object* [ %if1909, %EndIf1909], [%call1905, %BeginIf1903] 
; compilenode returning %if1903 
  ret %object* %if1903 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values1933 
; got len 4 
; created con 
; pushed statement 
define %object* @reader_type_1938(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_1938(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_1940(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_1940(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_values1941 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1953 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_n1956 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams1962 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values1964 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams1969 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams1978 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_params1981 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply1977(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_tmpparams = getelementptr %object*** %closure, i32 0 
  %var_tmpparams = load %object*** %varc_tmpparams 
  %varc_params = getelementptr %object*** %closure, i32 1 
  %var_params = load %object*** %varc_params 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_tmpparams1978 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams1978 
  %call1979 = call %object* @callmethod(%object* %var_val_tmpparams1978, i8* getelementptr([4 x i8]* @.str1092,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1979 
; compilenode returning %call1979 
  %var_p = call %object** @alloc_var() 
  %var_p_dec = getelementptr %object* %call1979, i32 0 
  store %object* %var_p_dec, %object** %var_p 
; compilenode returning  
  %var_val_p1980 = load %object** %var_p 
; compilenode returning %var_val_p1980 
  store %object* %var_val_p1980, %object** %params_0 
  %var_val_params1981 = load %object** %var_params 
; compilenode returning %var_val_params1981 
  %call1982 = call %object* @callmethod(%object* %var_val_params1981, i8* getelementptr([5 x i8]* @.str1093,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1982 
; compilenode returning %call1982 
  ret %object* %call1982 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values1988 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: callrest 
; have closure method: 1 
define %object* @meth_callrest1929(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_values = getelementptr %object*** %closure, i32 0 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1930 
BeginIf1930: 
  %str1931 = getelementptr [7 x i8]* @.str1066, i32 0, i32 0 
  %string1931 = call %object* @alloc_String(i8* %str1931) 
; compilenode returning %string1931 
  store %object* %string1931, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1932 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1067,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1932 
; compilenode returning %call1932 
  %cond1930_valp = call i1 @istrue(%object* %call1932) 
  %cond1930 = icmp eq i1 0, %cond1930_valp 
br i1 %cond1930, label %EndIf1930, label %TrueBranch1930 
TrueBranch1930: 
  %var_val_values1933 = load %object** %var_values 
; compilenode returning %var_val_values1933 
  %call1934 = call %object* @callmethod(%object* %var_val_values1933, i8* getelementptr([4 x i8]* @.str1068,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1934 
; compilenode returning %call1934 
  %var_meth = call %object** @alloc_var() 
  %var_meth_dec = getelementptr %object* %call1934, i32 0 
  store %object* %var_meth_dec, %object** %var_meth 
; compilenode returning  
; WARNING: non-member calls not fully supported yet 
  %call1935 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1069,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1935 
; compilenode returning %call1935 
  %obj1936 = call %object* @alloc_obj() 
  %str1937 = getelementptr [7 x i8]* @.str1070, i32 0, i32 0 
  %string1937 = call %object* @alloc_String(i8* %str1937) 
; compilenode returning %string1937 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj1936, %object* %string1937, i32 0) 
  call void @addmethod(%object* %obj1936, i8* getelementptr([5 x i8]* @.str.methname1938, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_1938)) 
  call void @addmethod(%object* %obj1936, i8* getelementptr([7 x i8]* @.str.methnamew1938, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_1938)) 
  %str1939 = getelementptr [1 x i8]* @.str1073, i32 0, i32 0 
  %string1939 = call %object* @alloc_String(i8* %str1939) 
; compilenode returning %string1939 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj1936, %object* %string1939, i32 1) 
  call void @addmethod(%object* %obj1936, i8* getelementptr([9 x i8]* @.str.methname1940, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_1940)) 
  call void @addmethod(%object* %obj1936, i8* getelementptr([11 x i8]* @.str.methnamew1940, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_1940)) 
; compilenode returning %obj1936 
  store %object* %obj1936, %object** %params_0 
  %var_val_values1941 = load %object** %var_values 
; compilenode returning %var_val_values1941 
  %call1942 = call %object* @callmethod(%object* %var_val_values1941, i8* getelementptr([5 x i8]* @.str1076,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1942 
; compilenode returning %call1942 
; WARNING: non-member calls not fully supported yet 
  %call1943 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1077,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1943 
; compilenode returning %call1943 
  br label %BeginWhile1944 
BeginWhile1944: 
  %str1945 = getelementptr [6 x i8]* @.str1078, i32 0, i32 0 
  %string1945 = call %object* @alloc_String(i8* %str1945) 
; compilenode returning %string1945 
  store %object* %string1945, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1946 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1079,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1946 
; compilenode returning %call1946 
  %cond1944_valp = call i1 @istrue(%object* %call1946) 
  %cond1944 = icmp eq i1 0, %cond1944_valp 
br i1 %cond1944, label %EndWhile1944, label %WhileBody1944 
WhileBody1944: 
; WARNING: non-member calls not fully supported yet 
  %call1947 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1080,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1947 
; compilenode returning %call1947 
; WARNING: non-member calls not fully supported yet 
  %call1948 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1081,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1948 
; compilenode returning %call1948 
  br label %BeginWhile1944 
EndWhile1944: 
; compilenode returning %call1946 
  br label %BeginIf1949 
BeginIf1949: 
  %str1950 = getelementptr [7 x i8]* @.str1082, i32 0, i32 0 
  %string1950 = call %object* @alloc_String(i8* %str1950) 
; compilenode returning %string1950 
  store %object* %string1950, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1951 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1083,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1951 
; compilenode returning %call1951 
  %cond1949_valp = call i1 @istrue(%object* %call1951) 
  %cond1949 = icmp eq i1 0, %cond1949_valp 
br i1 %cond1949, label %EndIf1949, label %TrueBranch1949 
TrueBranch1949: 
  %array1952 = call %object* @alloc_Array() 
; compilenode returning %array1952 
  %var_tmpparams = call %object** @alloc_var() 
  %var_tmpparams_dec = getelementptr %object* %array1952, i32 0 
  store %object* %var_tmpparams_dec, %object** %var_tmpparams 
; compilenode returning  
  %var_val_values1953 = load %object** %var_values 
; compilenode returning %var_val_values1953 
  %call1954 = call %object* @callmethod(%object* %var_val_values1953, i8* getelementptr([4 x i8]* @.str1084,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1954 
; compilenode returning %call1954 
  %var_n = call %object** @alloc_var() 
  %var_n_dec = getelementptr %object* %call1954, i32 0 
  store %object* %var_n_dec, %object** %var_n 
; compilenode returning  
  br label %BeginWhile1955 
BeginWhile1955: 
  %var_val_n1956 = load %object** %var_n 
; compilenode returning %var_val_n1956 
  %call1957 = call %object* @callmethod(%object* %var_val_n1956, i8* getelementptr([5 x i8]* @.str1085,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1957 
; compilenode returning %call1957 
; compilenode returning %call1957 
  %str1958 = getelementptr [7 x i8]* @.str1086, i32 0, i32 0 
  %string1958 = call %object* @alloc_String(i8* %str1958) 
; compilenode returning %string1958 
  store %object* %string1958, %object** %params_0 
  %opresult1960 = call %object* @callmethod(%object* %call1957, i8* getelementptr([3 x i8]* @.str1087,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1960 
  %cond1955_valp = call i1 @istrue(%object* %opresult1960) 
  %cond1955 = icmp eq i1 0, %cond1955_valp 
br i1 %cond1955, label %EndWhile1955, label %WhileBody1955 
WhileBody1955: 
  %var_val_n1961 = load %object** %var_n 
; compilenode returning %var_val_n1961 
  store %object* %var_val_n1961, %object** %params_0 
  %var_val_tmpparams1962 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams1962 
  %call1963 = call %object* @callmethod(%object* %var_val_tmpparams1962, i8* getelementptr([5 x i8]* @.str1088,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1963 
; compilenode returning %call1963 
  %var_val_values1964 = load %object** %var_values 
; compilenode returning %var_val_values1964 
  %call1965 = call %object* @callmethod(%object* %var_val_values1964, i8* getelementptr([4 x i8]* @.str1089,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1965 
; compilenode returning %call1965 
  store %object* %call1965, %object** %var_n 
; compilenode returning %call1965 
  br label %BeginWhile1955 
EndWhile1955: 
; compilenode returning %opresult1960 
  %array1966 = call %object* @alloc_Array() 
; compilenode returning %array1966 
  %var_params = call %object** @alloc_var() 
  %var_params_dec = getelementptr %object* %array1966, i32 0 
  store %object* %var_params_dec, %object** %var_params 
; compilenode returning  
  %num1968 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num1968 
  %var_val_tmpparams1969 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams1969 
  %call1970 = call %object* @callmethod(%object* %var_val_tmpparams1969, i8* getelementptr([7 x i8]* @.str1090,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1970 
; compilenode returning %call1970 
; compilenode returning %call1970 
  %num1971 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1971 
  store %object* %num1971, %object** %params_0 
  %diff1973 = call %object* @callmethod(%object* %call1970, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff1973 
  store %object* %diff1973, %object** %params_0 
  %opresult1975 = call %object* @callmethod(%object* %num1968, i8* getelementptr([3 x i8]* @.str1091,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult1975 
  %obj1976 = call %object* @alloc_obj() 
  %closure1977 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure1977, %object** %var_tmpparams) 
  call void @addtoclosure(%object*** %closure1977, %object** %var_params) 
  %selfpp1983 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp1983 
  call void @addtoclosure(%object*** %closure1977, %object** %selfpp1983) 
  call void @addclosuremethod(%object* %obj1976, i8* getelementptr([6 x i8]* @.str.methname1977, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply1977), %object*** %closure1977) 
; compilenode returning %obj1976 
  store %object* %opresult1975, %object** %params_0 
  %iter1967 = call %object* @callmethod(%object* %opresult1975, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1967 
BeginFor1967: 
  %condobj1967 = call %object* @callmethod(%object* %iter1967, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond1967_valp = call i1 @istrue(%object* %condobj1967) 
  %cond1967 = icmp eq i1 0, %cond1967_valp 
br i1 %cond1967, label %EndFor1967, label %ForBody1967 
ForBody1967: 
 %forval1967 = call %object* @callmethod(%object* %iter1967, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval1967, %object** %params_0 
  call %object* @callmethod(%object* %obj1976, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor1967 
EndFor1967: 
; compilenode returning %opresult1975 
  %var_val_meth1984 = load %object** %var_meth 
; compilenode returning %var_val_meth1984 
  %var_val_params1985 = load %object** %var_params 
; compilenode returning %var_val_params1985 
  store %object* %var_val_meth1984, %object** %params_0 
  store %object* %var_val_params1985, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call1986 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1095,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call1986 
; compilenode returning %call1986 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call1986, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o1987 = load %object** %var_o 
; compilenode returning %var_val_o1987 
  store %object* %var_val_o1987, %object** %params_0 
  %var_val_values1988 = load %object** %var_values 
; compilenode returning %var_val_values1988 
  %call1989 = call %object* @callmethod(%object* %var_val_values1988, i8* getelementptr([5 x i8]* @.str1096,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1989 
; compilenode returning %call1989 
; WARNING: non-member calls not fully supported yet 
  %call1990 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1097,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1990 
; compilenode returning %call1990 
  br label %EndIf1949 
EndIf1949: 
  %if1949 = phi %object* [ %call1990, %EndFor1967], [%call1951, %BeginIf1949] 
; compilenode returning %if1949 
  br label %EndIf1930 
EndIf1930: 
  %if1930 = phi %object* [ %if1949, %EndIf1949], [%call1932, %BeginIf1930] 
; compilenode returning %if1930 
  ret %object* %if1930 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym1995 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call1996 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2006 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2013 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2019 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: vardec 
; have closure method: 2 
define %object* @meth_vardec1991(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf1992 
BeginIf1992: 
  %str1993 = getelementptr [8 x i8]* @.str1099, i32 0, i32 0 
  %string1993 = call %object* @alloc_String(i8* %str1993) 
; compilenode returning %string1993 
  store %object* %string1993, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call1994 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1100,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call1994 
; compilenode returning %call1994 
  %var_val_sym1995 = load %object** %var_sym 
; compilenode returning %var_val_sym1995 
  %call1996 = call %object* @callmethod(%object* %var_val_sym1995, i8* getelementptr([4 x i8]* @.str1101,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1996 
; compilenode returning %call1996 
; compilenode returning %call1996 
  %call1997 = call %object* @callmethod(%object* %call1996, i8* getelementptr([6 x i8]* @.str1102,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call1997 
; compilenode returning %call1997 
; compilenode returning %call1997 
  %str1998 = getelementptr [4 x i8]* @.str1103, i32 0, i32 0 
  %string1998 = call %object* @alloc_String(i8* %str1998) 
; compilenode returning %string1998 
  store %object* %string1998, %object** %params_0 
  %opresult2000 = call %object* @callmethod(%object* %call1997, i8* getelementptr([3 x i8]* @.str1104,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2000 
  store %object* %opresult2000, %object** %params_0 
  %opresult2002 = call %object* @callmethod(%object* %call1994, i8* getelementptr([2 x i8]* @.str1105,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2002 
  %cond1992_valp = call i1 @istrue(%object* %opresult2002) 
  %cond1992 = icmp eq i1 0, %cond1992_valp 
br i1 %cond1992, label %EndIf1992, label %TrueBranch1992 
TrueBranch1992: 
; WARNING: non-member calls not fully supported yet 
  %call2003 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1106,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2003 
; compilenode returning %call2003 
; WARNING: non-member calls not fully supported yet 
  %call2004 = call %object* @callmethod(%object* %self, i8* getelementptr([15 x i8]* @.str1107,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2004 
; compilenode returning %call2004 
  %bool2005 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool2005 
  %var_val = call %object** @alloc_var() 
  %var_val_dec = getelementptr %object* %bool2005, i32 0 
  store %object* %var_val_dec, %object** %var_val 
; compilenode returning  
  %var_val_values2006 = load %object** %var_values 
; compilenode returning %var_val_values2006 
  %call2007 = call %object* @callmethod(%object* %var_val_values2006, i8* getelementptr([4 x i8]* @.str1108,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2007 
; compilenode returning %call2007 
  %var_name = call %object** @alloc_var() 
  %var_name_dec = getelementptr %object* %call2007, i32 0 
  store %object* %var_name_dec, %object** %var_name 
; compilenode returning  
  br label %BeginIf2008 
BeginIf2008: 
  %str2009 = getelementptr [5 x i8]* @.str1109, i32 0, i32 0 
  %string2009 = call %object* @alloc_String(i8* %str2009) 
; compilenode returning %string2009 
  store %object* %string2009, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2010 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1110,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2010 
; compilenode returning %call2010 
  %cond2008_valp = call i1 @istrue(%object* %call2010) 
  %cond2008 = icmp eq i1 0, %cond2008_valp 
br i1 %cond2008, label %EndIf2008, label %TrueBranch2008 
TrueBranch2008: 
; WARNING: non-member calls not fully supported yet 
  %call2011 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1111,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2011 
; compilenode returning %call2011 
; WARNING: non-member calls not fully supported yet 
  %call2012 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1112,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2012 
; compilenode returning %call2012 
  %var_val_values2013 = load %object** %var_values 
; compilenode returning %var_val_values2013 
  %call2014 = call %object* @callmethod(%object* %var_val_values2013, i8* getelementptr([4 x i8]* @.str1113,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2014 
; compilenode returning %call2014 
  store %object* %call2014, %object** %var_val 
; compilenode returning %call2014 
  br label %EndIf2008 
EndIf2008: 
  %if2008 = phi %object* [ %call2014, %TrueBranch2008], [%call2010, %BeginIf2008] 
; compilenode returning %if2008 
  %var_val_name2015 = load %object** %var_name 
; compilenode returning %var_val_name2015 
  %var_val_val2016 = load %object** %var_val 
; compilenode returning %var_val_val2016 
  store %object* %var_val_name2015, %object** %params_0 
  store %object* %var_val_val2016, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call2017 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1114,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call2017 
; compilenode returning %call2017 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call2017, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o2018 = load %object** %var_o 
; compilenode returning %var_val_o2018 
  store %object* %var_val_o2018, %object** %params_0 
  %var_val_values2019 = load %object** %var_values 
; compilenode returning %var_val_values2019 
  %call2020 = call %object* @callmethod(%object* %var_val_values2019, i8* getelementptr([5 x i8]* @.str1115,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2020 
; compilenode returning %call2020 
  br label %EndIf1992 
EndIf1992: 
  %if1992 = phi %object* [ %call2020, %EndIf2008], [%opresult2002, %BeginIf1992] 
; compilenode returning %if1992 
  ret %object* %if1992 
} 
;;;; ENDS 
define %object* @reader_type_2028(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_2028(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_2030(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_2030(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_values2031 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2043 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_n2046 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams2052 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2054 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams2059 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams2068 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_params2071 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply2067(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_tmpparams = getelementptr %object*** %closure, i32 0 
  %var_tmpparams = load %object*** %varc_tmpparams 
  %varc_params = getelementptr %object*** %closure, i32 1 
  %var_params = load %object*** %varc_params 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_tmpparams2068 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams2068 
  %call2069 = call %object* @callmethod(%object* %var_val_tmpparams2068, i8* getelementptr([4 x i8]* @.str1142,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2069 
; compilenode returning %call2069 
  %var_p = call %object** @alloc_var() 
  %var_p_dec = getelementptr %object* %call2069, i32 0 
  store %object* %var_p_dec, %object** %var_p 
; compilenode returning  
  %var_val_p2070 = load %object** %var_p 
; compilenode returning %var_val_p2070 
  store %object* %var_val_p2070, %object** %params_0 
  %var_val_params2071 = load %object** %var_params 
; compilenode returning %var_val_params2071 
  %call2072 = call %object* @callmethod(%object* %var_val_params2071, i8* getelementptr([5 x i8]* @.str1143,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2072 
; compilenode returning %call2072 
  ret %object* %call2072 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values2077 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym2081 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call2082 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: doarray 
; have closure method: 2 
define %object* @meth_doarray2021(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_values = getelementptr %object*** %closure, i32 0 
  %var_values = load %object*** %varc_values 
  %varc_sym = getelementptr %object*** %closure, i32 1 
  %var_sym = load %object*** %varc_sym 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf2022 
BeginIf2022: 
  %str2023 = getelementptr [8 x i8]* @.str1117, i32 0, i32 0 
  %string2023 = call %object* @alloc_String(i8* %str2023) 
; compilenode returning %string2023 
  store %object* %string2023, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2024 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1118,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2024 
; compilenode returning %call2024 
  %cond2022_valp = call i1 @istrue(%object* %call2024) 
  %cond2022 = icmp eq i1 0, %cond2022_valp 
br i1 %cond2022, label %EndIf2022, label %TrueBranch2022 
TrueBranch2022: 
; WARNING: non-member calls not fully supported yet 
  %call2025 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1119,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2025 
; compilenode returning %call2025 
  %obj2026 = call %object* @alloc_obj() 
  %str2027 = getelementptr [8 x i8]* @.str1120, i32 0, i32 0 
  %string2027 = call %object* @alloc_String(i8* %str2027) 
; compilenode returning %string2027 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj2026, %object* %string2027, i32 0) 
  call void @addmethod(%object* %obj2026, i8* getelementptr([5 x i8]* @.str.methname2028, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_2028)) 
  call void @addmethod(%object* %obj2026, i8* getelementptr([7 x i8]* @.str.methnamew2028, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_2028)) 
  %str2029 = getelementptr [1 x i8]* @.str1123, i32 0, i32 0 
  %string2029 = call %object* @alloc_String(i8* %str2029) 
; compilenode returning %string2029 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj2026, %object* %string2029, i32 1) 
  call void @addmethod(%object* %obj2026, i8* getelementptr([9 x i8]* @.str.methname2030, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_2030)) 
  call void @addmethod(%object* %obj2026, i8* getelementptr([11 x i8]* @.str.methnamew2030, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_2030)) 
; compilenode returning %obj2026 
  store %object* %obj2026, %object** %params_0 
  %var_val_values2031 = load %object** %var_values 
; compilenode returning %var_val_values2031 
  %call2032 = call %object* @callmethod(%object* %var_val_values2031, i8* getelementptr([5 x i8]* @.str1126,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2032 
; compilenode returning %call2032 
; WARNING: non-member calls not fully supported yet 
  %call2033 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1127,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2033 
; compilenode returning %call2033 
  br label %BeginWhile2034 
BeginWhile2034: 
  %str2035 = getelementptr [6 x i8]* @.str1128, i32 0, i32 0 
  %string2035 = call %object* @alloc_String(i8* %str2035) 
; compilenode returning %string2035 
  store %object* %string2035, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2036 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1129,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2036 
; compilenode returning %call2036 
  %cond2034_valp = call i1 @istrue(%object* %call2036) 
  %cond2034 = icmp eq i1 0, %cond2034_valp 
br i1 %cond2034, label %EndWhile2034, label %WhileBody2034 
WhileBody2034: 
; WARNING: non-member calls not fully supported yet 
  %call2037 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1130,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2037 
; compilenode returning %call2037 
; WARNING: non-member calls not fully supported yet 
  %call2038 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1131,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2038 
; compilenode returning %call2038 
  br label %BeginWhile2034 
EndWhile2034: 
; compilenode returning %call2036 
  br label %BeginIf2039 
BeginIf2039: 
  %str2040 = getelementptr [8 x i8]* @.str1132, i32 0, i32 0 
  %string2040 = call %object* @alloc_String(i8* %str2040) 
; compilenode returning %string2040 
  store %object* %string2040, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2041 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1133,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2041 
; compilenode returning %call2041 
  %cond2039_valp = call i1 @istrue(%object* %call2041) 
  %cond2039 = icmp eq i1 0, %cond2039_valp 
br i1 %cond2039, label %FalseBranch2039, label %TrueBranch2039 
TrueBranch2039: 
  %array2042 = call %object* @alloc_Array() 
; compilenode returning %array2042 
  %var_tmpparams = call %object** @alloc_var() 
  %var_tmpparams_dec = getelementptr %object* %array2042, i32 0 
  store %object* %var_tmpparams_dec, %object** %var_tmpparams 
; compilenode returning  
  %var_val_values2043 = load %object** %var_values 
; compilenode returning %var_val_values2043 
  %call2044 = call %object* @callmethod(%object* %var_val_values2043, i8* getelementptr([4 x i8]* @.str1134,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2044 
; compilenode returning %call2044 
  %var_n = call %object** @alloc_var() 
  %var_n_dec = getelementptr %object* %call2044, i32 0 
  store %object* %var_n_dec, %object** %var_n 
; compilenode returning  
  br label %BeginWhile2045 
BeginWhile2045: 
  %var_val_n2046 = load %object** %var_n 
; compilenode returning %var_val_n2046 
  %call2047 = call %object* @callmethod(%object* %var_val_n2046, i8* getelementptr([5 x i8]* @.str1135,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2047 
; compilenode returning %call2047 
; compilenode returning %call2047 
  %str2048 = getelementptr [8 x i8]* @.str1136, i32 0, i32 0 
  %string2048 = call %object* @alloc_String(i8* %str2048) 
; compilenode returning %string2048 
  store %object* %string2048, %object** %params_0 
  %opresult2050 = call %object* @callmethod(%object* %call2047, i8* getelementptr([3 x i8]* @.str1137,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2050 
  %cond2045_valp = call i1 @istrue(%object* %opresult2050) 
  %cond2045 = icmp eq i1 0, %cond2045_valp 
br i1 %cond2045, label %EndWhile2045, label %WhileBody2045 
WhileBody2045: 
  %var_val_n2051 = load %object** %var_n 
; compilenode returning %var_val_n2051 
  store %object* %var_val_n2051, %object** %params_0 
  %var_val_tmpparams2052 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams2052 
  %call2053 = call %object* @callmethod(%object* %var_val_tmpparams2052, i8* getelementptr([5 x i8]* @.str1138,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2053 
; compilenode returning %call2053 
  %var_val_values2054 = load %object** %var_values 
; compilenode returning %var_val_values2054 
  %call2055 = call %object* @callmethod(%object* %var_val_values2054, i8* getelementptr([4 x i8]* @.str1139,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2055 
; compilenode returning %call2055 
  store %object* %call2055, %object** %var_n 
; compilenode returning %call2055 
  br label %BeginWhile2045 
EndWhile2045: 
; compilenode returning %opresult2050 
  %array2056 = call %object* @alloc_Array() 
; compilenode returning %array2056 
  %var_params = call %object** @alloc_var() 
  %var_params_dec = getelementptr %object* %array2056, i32 0 
  store %object* %var_params_dec, %object** %var_params 
; compilenode returning  
  %num2058 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2058 
  %var_val_tmpparams2059 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams2059 
  %call2060 = call %object* @callmethod(%object* %var_val_tmpparams2059, i8* getelementptr([7 x i8]* @.str1140,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2060 
; compilenode returning %call2060 
; compilenode returning %call2060 
  %num2061 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2061 
  store %object* %num2061, %object** %params_0 
  %diff2063 = call %object* @callmethod(%object* %call2060, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff2063 
  store %object* %diff2063, %object** %params_0 
  %opresult2065 = call %object* @callmethod(%object* %num2058, i8* getelementptr([3 x i8]* @.str1141,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2065 
  %obj2066 = call %object* @alloc_obj() 
  %closure2067 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure2067, %object** %var_tmpparams) 
  call void @addtoclosure(%object*** %closure2067, %object** %var_params) 
  %selfpp2073 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2073 
  call void @addtoclosure(%object*** %closure2067, %object** %selfpp2073) 
  call void @addclosuremethod(%object* %obj2066, i8* getelementptr([6 x i8]* @.str.methname2067, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2067), %object*** %closure2067) 
; compilenode returning %obj2066 
  store %object* %opresult2065, %object** %params_0 
  %iter2057 = call %object* @callmethod(%object* %opresult2065, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2057 
BeginFor2057: 
  %condobj2057 = call %object* @callmethod(%object* %iter2057, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2057_valp = call i1 @istrue(%object* %condobj2057) 
  %cond2057 = icmp eq i1 0, %cond2057_valp 
br i1 %cond2057, label %EndFor2057, label %ForBody2057 
ForBody2057: 
 %forval2057 = call %object* @callmethod(%object* %iter2057, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2057, %object** %params_0 
  call %object* @callmethod(%object* %obj2066, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2057 
EndFor2057: 
; compilenode returning %opresult2065 
  %var_val_params2074 = load %object** %var_params 
; compilenode returning %var_val_params2074 
  store %object* %var_val_params2074, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2075 = call %object* @callmethod(%object* %self, i8* getelementptr([9 x i8]* @.str1145,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2075 
; compilenode returning %call2075 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call2075, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o2076 = load %object** %var_o 
; compilenode returning %var_val_o2076 
  store %object* %var_val_o2076, %object** %params_0 
  %var_val_values2077 = load %object** %var_values 
; compilenode returning %var_val_values2077 
  %call2078 = call %object* @callmethod(%object* %var_val_values2077, i8* getelementptr([5 x i8]* @.str1146,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2078 
; compilenode returning %call2078 
; WARNING: non-member calls not fully supported yet 
  %call2079 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1147,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2079 
; compilenode returning %call2079 
  br label %EndIf2039 
FalseBranch2039: 
  %str2080 = getelementptr [37 x i8]* @.str1148, i32 0, i32 0 
  %string2080 = call %object* @alloc_String(i8* %str2080) 
; compilenode returning %string2080 
  %var_val_sym2081 = load %object** %var_sym 
; compilenode returning %var_val_sym2081 
  %call2082 = call %object* @callmethod(%object* %var_val_sym2081, i8* getelementptr([4 x i8]* @.str1149,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2082 
; compilenode returning %call2082 
; compilenode returning %call2082 
  %call2083 = call %object* @callmethod(%object* %call2082, i8* getelementptr([5 x i8]* @.str1150,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2083 
; compilenode returning %call2083 
; compilenode returning %call2083 
  store %object* %call2083, %object** %params_0 
  %opresult2085 = call %object* @callmethod(%object* %string2080, i8* getelementptr([3 x i8]* @.str1151,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2085 
  store %object* %opresult2085, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2086 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str1152,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2086 
; compilenode returning %call2086 
  br label %EndIf2039 
EndIf2039: 
  %if2039 = phi %object* [ %call2079, %EndFor2057], [%call2086, %FalseBranch2039] 
; compilenode returning %if2039 
  br label %EndIf2022 
EndIf2022: 
  %if2022 = phi %object* [ %if2039, %EndIf2039], [%call2024, %BeginIf2022] 
; compilenode returning %if2022 
  ret %object* %if2022 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym2091 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call2092 
; got len 6 
; created con 
; pushed statement 
define %object* @reader_type_2105(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_2105(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_2107(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_2107(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_values2108 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %call2113 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2119 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_n2122 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_rbody2128 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2130 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_rbody2135 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_rbody2144 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_body2147 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply2143(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_rbody = getelementptr %object*** %closure, i32 0 
  %var_rbody = load %object*** %varc_rbody 
  %varc_body = getelementptr %object*** %closure, i32 1 
  %var_body = load %object*** %varc_body 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_rbody2144 = load %object** %var_rbody 
; compilenode returning %var_val_rbody2144 
  %call2145 = call %object* @callmethod(%object* %var_val_rbody2144, i8* getelementptr([4 x i8]* @.str1186,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2145 
; compilenode returning %call2145 
  %var_p = call %object** @alloc_var() 
  %var_p_dec = getelementptr %object* %call2145, i32 0 
  store %object* %var_p_dec, %object** %var_p 
; compilenode returning  
  %var_val_p2146 = load %object** %var_p 
; compilenode returning %var_val_p2146 
  store %object* %var_val_p2146, %object** %params_0 
  %var_val_body2147 = load %object** %var_body 
; compilenode returning %var_val_body2147 
  %call2148 = call %object* @callmethod(%object* %var_val_body2147, i8* getelementptr([5 x i8]* @.str1187,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2148 
; compilenode returning %call2148 
  ret %object* %call2148 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_values2153 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: doobject 
; have closure method: 2 
define %object* @meth_doobject2087(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf2088 
BeginIf2088: 
  %str2089 = getelementptr [8 x i8]* @.str1154, i32 0, i32 0 
  %string2089 = call %object* @alloc_String(i8* %str2089) 
; compilenode returning %string2089 
  store %object* %string2089, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2090 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1155,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2090 
; compilenode returning %call2090 
  %var_val_sym2091 = load %object** %var_sym 
; compilenode returning %var_val_sym2091 
  %call2092 = call %object* @callmethod(%object* %var_val_sym2091, i8* getelementptr([4 x i8]* @.str1156,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2092 
; compilenode returning %call2092 
; compilenode returning %call2092 
  %call2093 = call %object* @callmethod(%object* %call2092, i8* getelementptr([6 x i8]* @.str1157,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2093 
; compilenode returning %call2093 
; compilenode returning %call2093 
  %str2094 = getelementptr [7 x i8]* @.str1158, i32 0, i32 0 
  %string2094 = call %object* @alloc_String(i8* %str2094) 
; compilenode returning %string2094 
  store %object* %string2094, %object** %params_0 
  %opresult2096 = call %object* @callmethod(%object* %call2093, i8* getelementptr([3 x i8]* @.str1159,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2096 
  store %object* %opresult2096, %object** %params_0 
  %opresult2098 = call %object* @callmethod(%object* %call2090, i8* getelementptr([2 x i8]* @.str1160,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2098 
  %cond2088_valp = call i1 @istrue(%object* %opresult2098) 
  %cond2088 = icmp eq i1 0, %cond2088_valp 
br i1 %cond2088, label %EndIf2088, label %TrueBranch2088 
TrueBranch2088: 
; WARNING: non-member calls not fully supported yet 
  %call2099 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1161,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2099 
; compilenode returning %call2099 
  br label %BeginIf2100 
BeginIf2100: 
  %str2101 = getelementptr [7 x i8]* @.str1162, i32 0, i32 0 
  %string2101 = call %object* @alloc_String(i8* %str2101) 
; compilenode returning %string2101 
  store %object* %string2101, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2102 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1163,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2102 
; compilenode returning %call2102 
  %cond2100_valp = call i1 @istrue(%object* %call2102) 
  %cond2100 = icmp eq i1 0, %cond2100_valp 
br i1 %cond2100, label %EndIf2100, label %TrueBranch2100 
TrueBranch2100: 
  %obj2103 = call %object* @alloc_obj() 
  %str2104 = getelementptr [7 x i8]* @.str1164, i32 0, i32 0 
  %string2104 = call %object* @alloc_String(i8* %str2104) 
; compilenode returning %string2104 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj2103, %object* %string2104, i32 0) 
  call void @addmethod(%object* %obj2103, i8* getelementptr([5 x i8]* @.str.methname2105, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_2105)) 
  call void @addmethod(%object* %obj2103, i8* getelementptr([7 x i8]* @.str.methnamew2105, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_2105)) 
  %str2106 = getelementptr [1 x i8]* @.str1167, i32 0, i32 0 
  %string2106 = call %object* @alloc_String(i8* %str2106) 
; compilenode returning %string2106 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj2103, %object* %string2106, i32 1) 
  call void @addmethod(%object* %obj2103, i8* getelementptr([9 x i8]* @.str.methname2107, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_2107)) 
  call void @addmethod(%object* %obj2103, i8* getelementptr([11 x i8]* @.str.methnamew2107, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_2107)) 
; compilenode returning %obj2103 
  store %object* %obj2103, %object** %params_0 
  %var_val_values2108 = load %object** %var_values 
; compilenode returning %var_val_values2108 
  %call2109 = call %object* @callmethod(%object* %var_val_values2108, i8* getelementptr([5 x i8]* @.str1170,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2109 
; compilenode returning %call2109 
; WARNING: non-member calls not fully supported yet 
  %call2110 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1171,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2110 
; compilenode returning %call2110 
  br label %BeginWhile2111 
BeginWhile2111: 
  %str2112 = getelementptr [7 x i8]* @.str1172, i32 0, i32 0 
  %string2112 = call %object* @alloc_String(i8* %str2112) 
; compilenode returning %string2112 
  store %object* %string2112, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2113 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1173,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2113 
; compilenode returning %call2113 
  %call2114 = call %object* @callmethod(%object* %call2113, i8* getelementptr([4 x i8]* @.str1174,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2114 
; compilenode returning %call2114 
; compilenode returning %call2114 
  %cond2111_valp = call i1 @istrue(%object* %call2114) 
  %cond2111 = icmp eq i1 0, %cond2111_valp 
br i1 %cond2111, label %EndWhile2111, label %WhileBody2111 
WhileBody2111: 
; WARNING: non-member calls not fully supported yet 
  %call2115 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1175,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2115 
; compilenode returning %call2115 
; WARNING: non-member calls not fully supported yet 
  %call2116 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1176,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2116 
; compilenode returning %call2116 
  br label %BeginWhile2111 
EndWhile2111: 
; compilenode returning %call2114 
; WARNING: non-member calls not fully supported yet 
  %call2117 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1177,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2117 
; compilenode returning %call2117 
  %array2118 = call %object* @alloc_Array() 
; compilenode returning %array2118 
  %var_rbody = call %object** @alloc_var() 
  %var_rbody_dec = getelementptr %object* %array2118, i32 0 
  store %object* %var_rbody_dec, %object** %var_rbody 
; compilenode returning  
  %var_val_values2119 = load %object** %var_values 
; compilenode returning %var_val_values2119 
  %call2120 = call %object* @callmethod(%object* %var_val_values2119, i8* getelementptr([4 x i8]* @.str1178,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2120 
; compilenode returning %call2120 
  %var_n = call %object** @alloc_var() 
  %var_n_dec = getelementptr %object* %call2120, i32 0 
  store %object* %var_n_dec, %object** %var_n 
; compilenode returning  
  br label %BeginWhile2121 
BeginWhile2121: 
  %var_val_n2122 = load %object** %var_n 
; compilenode returning %var_val_n2122 
  %call2123 = call %object* @callmethod(%object* %var_val_n2122, i8* getelementptr([5 x i8]* @.str1179,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2123 
; compilenode returning %call2123 
; compilenode returning %call2123 
  %str2124 = getelementptr [7 x i8]* @.str1180, i32 0, i32 0 
  %string2124 = call %object* @alloc_String(i8* %str2124) 
; compilenode returning %string2124 
  store %object* %string2124, %object** %params_0 
  %opresult2126 = call %object* @callmethod(%object* %call2123, i8* getelementptr([3 x i8]* @.str1181,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2126 
  %cond2121_valp = call i1 @istrue(%object* %opresult2126) 
  %cond2121 = icmp eq i1 0, %cond2121_valp 
br i1 %cond2121, label %EndWhile2121, label %WhileBody2121 
WhileBody2121: 
  %var_val_n2127 = load %object** %var_n 
; compilenode returning %var_val_n2127 
  store %object* %var_val_n2127, %object** %params_0 
  %var_val_rbody2128 = load %object** %var_rbody 
; compilenode returning %var_val_rbody2128 
  %call2129 = call %object* @callmethod(%object* %var_val_rbody2128, i8* getelementptr([5 x i8]* @.str1182,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2129 
; compilenode returning %call2129 
  %var_val_values2130 = load %object** %var_values 
; compilenode returning %var_val_values2130 
  %call2131 = call %object* @callmethod(%object* %var_val_values2130, i8* getelementptr([4 x i8]* @.str1183,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2131 
; compilenode returning %call2131 
  store %object* %call2131, %object** %var_n 
; compilenode returning %call2131 
  br label %BeginWhile2121 
EndWhile2121: 
; compilenode returning %opresult2126 
  %array2132 = call %object* @alloc_Array() 
; compilenode returning %array2132 
  %var_body = call %object** @alloc_var() 
  %var_body_dec = getelementptr %object* %array2132, i32 0 
  store %object* %var_body_dec, %object** %var_body 
; compilenode returning  
  %num2134 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2134 
  %var_val_rbody2135 = load %object** %var_rbody 
; compilenode returning %var_val_rbody2135 
  %call2136 = call %object* @callmethod(%object* %var_val_rbody2135, i8* getelementptr([7 x i8]* @.str1184,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2136 
; compilenode returning %call2136 
; compilenode returning %call2136 
  %num2137 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2137 
  store %object* %num2137, %object** %params_0 
  %diff2139 = call %object* @callmethod(%object* %call2136, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff2139 
  store %object* %diff2139, %object** %params_0 
  %opresult2141 = call %object* @callmethod(%object* %num2134, i8* getelementptr([3 x i8]* @.str1185,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2141 
  %obj2142 = call %object* @alloc_obj() 
  %closure2143 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure2143, %object** %var_rbody) 
  call void @addtoclosure(%object*** %closure2143, %object** %var_body) 
  %selfpp2149 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2149 
  call void @addtoclosure(%object*** %closure2143, %object** %selfpp2149) 
  call void @addclosuremethod(%object* %obj2142, i8* getelementptr([6 x i8]* @.str.methname2143, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2143), %object*** %closure2143) 
; compilenode returning %obj2142 
  store %object* %opresult2141, %object** %params_0 
  %iter2133 = call %object* @callmethod(%object* %opresult2141, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2133 
BeginFor2133: 
  %condobj2133 = call %object* @callmethod(%object* %iter2133, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2133_valp = call i1 @istrue(%object* %condobj2133) 
  %cond2133 = icmp eq i1 0, %cond2133_valp 
br i1 %cond2133, label %EndFor2133, label %ForBody2133 
ForBody2133: 
 %forval2133 = call %object* @callmethod(%object* %iter2133, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2133, %object** %params_0 
  call %object* @callmethod(%object* %obj2142, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2133 
EndFor2133: 
; compilenode returning %opresult2141 
  %var_val_body2150 = load %object** %var_body 
; compilenode returning %var_val_body2150 
  store %object* %var_val_body2150, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2151 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1189,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2151 
; compilenode returning %call2151 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call2151, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o2152 = load %object** %var_o 
; compilenode returning %var_val_o2152 
  store %object* %var_val_o2152, %object** %params_0 
  %var_val_values2153 = load %object** %var_values 
; compilenode returning %var_val_values2153 
  %call2154 = call %object* @callmethod(%object* %var_val_values2153, i8* getelementptr([5 x i8]* @.str1190,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2154 
; compilenode returning %call2154 
  br label %EndIf2100 
EndIf2100: 
  %if2100 = phi %object* [ %call2154, %EndFor2133], [%call2102, %BeginIf2100] 
; compilenode returning %if2100 
  br label %EndIf2088 
EndIf2088: 
  %if2088 = phi %object* [ %if2100, %EndIf2100], [%opresult2098, %BeginIf2088] 
; compilenode returning %if2088 
  ret %object* %if2088 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym2159 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call2160 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2169 
; got len 4 
; created con 
; pushed statement 
define %object* @reader_type_2178(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_2178(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_2180(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_2180(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_values2181 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2194 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_n2197 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams2203 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2205 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams2210 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tmpparams2219 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_params2222 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply2218(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_tmpparams = getelementptr %object*** %closure, i32 0 
  %var_tmpparams = load %object*** %varc_tmpparams 
  %varc_params = getelementptr %object*** %closure, i32 1 
  %var_params = load %object*** %varc_params 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_tmpparams2219 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams2219 
  %call2220 = call %object* @callmethod(%object* %var_val_tmpparams2219, i8* getelementptr([4 x i8]* @.str1228,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2220 
; compilenode returning %call2220 
  %var_p = call %object** @alloc_var() 
  %var_p_dec = getelementptr %object* %call2220, i32 0 
  store %object* %var_p_dec, %object** %var_p 
; compilenode returning  
  %var_val_p2221 = load %object** %var_p 
; compilenode returning %var_val_p2221 
  store %object* %var_val_p2221, %object** %params_0 
  %var_val_params2222 = load %object** %var_params 
; compilenode returning %var_val_params2222 
  %call2223 = call %object* @callmethod(%object* %var_val_params2222, i8* getelementptr([5 x i8]* @.str1229,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2223 
; compilenode returning %call2223 
  ret %object* %call2223 
} 
;;;; ENDS 
define %object* @reader_type_2232(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_2232(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_2234(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_2234(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
; handling member 
; compiled in to %var_val_values2235 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2238 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_s2241 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_body2247 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2250 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_meth2257 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_sym2261 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_meth2265 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2273 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: methoddec 
; have closure method: 2 
define %object* @meth_methoddec2155(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf2156 
BeginIf2156: 
  %str2157 = getelementptr [8 x i8]* @.str1192, i32 0, i32 0 
  %string2157 = call %object* @alloc_String(i8* %str2157) 
; compilenode returning %string2157 
  store %object* %string2157, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2158 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1193,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2158 
; compilenode returning %call2158 
  %var_val_sym2159 = load %object** %var_sym 
; compilenode returning %var_val_sym2159 
  %call2160 = call %object* @callmethod(%object* %var_val_sym2159, i8* getelementptr([4 x i8]* @.str1194,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2160 
; compilenode returning %call2160 
; compilenode returning %call2160 
  %call2161 = call %object* @callmethod(%object* %call2160, i8* getelementptr([6 x i8]* @.str1195,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2161 
; compilenode returning %call2161 
; compilenode returning %call2161 
  %str2162 = getelementptr [7 x i8]* @.str1196, i32 0, i32 0 
  %string2162 = call %object* @alloc_String(i8* %str2162) 
; compilenode returning %string2162 
  store %object* %string2162, %object** %params_0 
  %opresult2164 = call %object* @callmethod(%object* %call2161, i8* getelementptr([3 x i8]* @.str1197,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2164 
  store %object* %opresult2164, %object** %params_0 
  %opresult2166 = call %object* @callmethod(%object* %call2158, i8* getelementptr([2 x i8]* @.str1198,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2166 
  %cond2156_valp = call i1 @istrue(%object* %opresult2166) 
  %cond2156 = icmp eq i1 0, %cond2156_valp 
br i1 %cond2156, label %EndIf2156, label %TrueBranch2156 
TrueBranch2156: 
; WARNING: non-member calls not fully supported yet 
  %call2167 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1199,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2167 
; compilenode returning %call2167 
; WARNING: non-member calls not fully supported yet 
  %call2168 = call %object* @callmethod(%object* %self, i8* getelementptr([15 x i8]* @.str1200,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2168 
; compilenode returning %call2168 
  %var_val_values2169 = load %object** %var_values 
; compilenode returning %var_val_values2169 
  %call2170 = call %object* @callmethod(%object* %var_val_values2169, i8* getelementptr([4 x i8]* @.str1201,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2170 
; compilenode returning %call2170 
  %var_meth = call %object** @alloc_var() 
  %var_meth_dec = getelementptr %object* %call2170, i32 0 
  store %object* %var_meth_dec, %object** %var_meth 
; compilenode returning  
  %array2171 = call %object* @alloc_Array() 
; compilenode returning %array2171 
  %var_rparams = call %object** @alloc_var() 
  %var_rparams_dec = getelementptr %object* %array2171, i32 0 
  store %object* %var_rparams_dec, %object** %var_rparams 
; compilenode returning  
  br label %BeginIf2172 
BeginIf2172: 
  %str2173 = getelementptr [7 x i8]* @.str1202, i32 0, i32 0 
  %string2173 = call %object* @alloc_String(i8* %str2173) 
; compilenode returning %string2173 
  store %object* %string2173, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2174 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1203,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2174 
; compilenode returning %call2174 
  %cond2172_valp = call i1 @istrue(%object* %call2174) 
  %cond2172 = icmp eq i1 0, %cond2172_valp 
br i1 %cond2172, label %EndIf2172, label %TrueBranch2172 
TrueBranch2172: 
; WARNING: non-member calls not fully supported yet 
  %call2175 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1204,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2175 
; compilenode returning %call2175 
  %obj2176 = call %object* @alloc_obj() 
  %str2177 = getelementptr [7 x i8]* @.str1205, i32 0, i32 0 
  %string2177 = call %object* @alloc_String(i8* %str2177) 
; compilenode returning %string2177 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj2176, %object* %string2177, i32 0) 
  call void @addmethod(%object* %obj2176, i8* getelementptr([5 x i8]* @.str.methname2178, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_2178)) 
  call void @addmethod(%object* %obj2176, i8* getelementptr([7 x i8]* @.str.methnamew2178, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_2178)) 
  %str2179 = getelementptr [1 x i8]* @.str1208, i32 0, i32 0 
  %string2179 = call %object* @alloc_String(i8* %str2179) 
; compilenode returning %string2179 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj2176, %object* %string2179, i32 1) 
  call void @addmethod(%object* %obj2176, i8* getelementptr([9 x i8]* @.str.methname2180, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_2180)) 
  call void @addmethod(%object* %obj2176, i8* getelementptr([11 x i8]* @.str.methnamew2180, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_2180)) 
; compilenode returning %obj2176 
  store %object* %obj2176, %object** %params_0 
  %var_val_values2181 = load %object** %var_values 
; compilenode returning %var_val_values2181 
  %call2182 = call %object* @callmethod(%object* %var_val_values2181, i8* getelementptr([5 x i8]* @.str1211,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2182 
; compilenode returning %call2182 
; WARNING: non-member calls not fully supported yet 
  %call2183 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1212,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2183 
; compilenode returning %call2183 
  br label %BeginWhile2184 
BeginWhile2184: 
  %str2185 = getelementptr [6 x i8]* @.str1213, i32 0, i32 0 
  %string2185 = call %object* @alloc_String(i8* %str2185) 
; compilenode returning %string2185 
  store %object* %string2185, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2186 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1214,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2186 
; compilenode returning %call2186 
  %cond2184_valp = call i1 @istrue(%object* %call2186) 
  %cond2184 = icmp eq i1 0, %cond2184_valp 
br i1 %cond2184, label %EndWhile2184, label %WhileBody2184 
WhileBody2184: 
; WARNING: non-member calls not fully supported yet 
  %call2187 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1215,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2187 
; compilenode returning %call2187 
; WARNING: non-member calls not fully supported yet 
  %call2188 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1216,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2188 
; compilenode returning %call2188 
  br label %BeginWhile2184 
EndWhile2184: 
; compilenode returning %call2186 
  br label %BeginIf2189 
BeginIf2189: 
  %str2190 = getelementptr [7 x i8]* @.str1217, i32 0, i32 0 
  %string2190 = call %object* @alloc_String(i8* %str2190) 
; compilenode returning %string2190 
  store %object* %string2190, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2191 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1218,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2191 
; compilenode returning %call2191 
  %cond2189_valp = call i1 @istrue(%object* %call2191) 
  %cond2189 = icmp eq i1 0, %cond2189_valp 
br i1 %cond2189, label %EndIf2189, label %TrueBranch2189 
TrueBranch2189: 
; WARNING: non-member calls not fully supported yet 
  %call2192 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1219,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2192 
; compilenode returning %call2192 
  %array2193 = call %object* @alloc_Array() 
; compilenode returning %array2193 
  %var_tmpparams = call %object** @alloc_var() 
  %var_tmpparams_dec = getelementptr %object* %array2193, i32 0 
  store %object* %var_tmpparams_dec, %object** %var_tmpparams 
; compilenode returning  
  %var_val_values2194 = load %object** %var_values 
; compilenode returning %var_val_values2194 
  %call2195 = call %object* @callmethod(%object* %var_val_values2194, i8* getelementptr([4 x i8]* @.str1220,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2195 
; compilenode returning %call2195 
  %var_n = call %object** @alloc_var() 
  %var_n_dec = getelementptr %object* %call2195, i32 0 
  store %object* %var_n_dec, %object** %var_n 
; compilenode returning  
  br label %BeginWhile2196 
BeginWhile2196: 
  %var_val_n2197 = load %object** %var_n 
; compilenode returning %var_val_n2197 
  %call2198 = call %object* @callmethod(%object* %var_val_n2197, i8* getelementptr([5 x i8]* @.str1221,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2198 
; compilenode returning %call2198 
; compilenode returning %call2198 
  %str2199 = getelementptr [7 x i8]* @.str1222, i32 0, i32 0 
  %string2199 = call %object* @alloc_String(i8* %str2199) 
; compilenode returning %string2199 
  store %object* %string2199, %object** %params_0 
  %opresult2201 = call %object* @callmethod(%object* %call2198, i8* getelementptr([3 x i8]* @.str1223,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2201 
  %cond2196_valp = call i1 @istrue(%object* %opresult2201) 
  %cond2196 = icmp eq i1 0, %cond2196_valp 
br i1 %cond2196, label %EndWhile2196, label %WhileBody2196 
WhileBody2196: 
  %var_val_n2202 = load %object** %var_n 
; compilenode returning %var_val_n2202 
  store %object* %var_val_n2202, %object** %params_0 
  %var_val_tmpparams2203 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams2203 
  %call2204 = call %object* @callmethod(%object* %var_val_tmpparams2203, i8* getelementptr([5 x i8]* @.str1224,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2204 
; compilenode returning %call2204 
  %var_val_values2205 = load %object** %var_values 
; compilenode returning %var_val_values2205 
  %call2206 = call %object* @callmethod(%object* %var_val_values2205, i8* getelementptr([4 x i8]* @.str1225,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2206 
; compilenode returning %call2206 
  store %object* %call2206, %object** %var_n 
; compilenode returning %call2206 
  br label %BeginWhile2196 
EndWhile2196: 
; compilenode returning %opresult2201 
  %array2207 = call %object* @alloc_Array() 
; compilenode returning %array2207 
  %var_params = call %object** @alloc_var() 
  %var_params_dec = getelementptr %object* %array2207, i32 0 
  store %object* %var_params_dec, %object** %var_params 
; compilenode returning  
  %num2209 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2209 
  %var_val_tmpparams2210 = load %object** %var_tmpparams 
; compilenode returning %var_val_tmpparams2210 
  %call2211 = call %object* @callmethod(%object* %var_val_tmpparams2210, i8* getelementptr([7 x i8]* @.str1226,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2211 
; compilenode returning %call2211 
; compilenode returning %call2211 
  %num2212 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2212 
  store %object* %num2212, %object** %params_0 
  %diff2214 = call %object* @callmethod(%object* %call2211, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff2214 
  store %object* %diff2214, %object** %params_0 
  %opresult2216 = call %object* @callmethod(%object* %num2209, i8* getelementptr([3 x i8]* @.str1227,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2216 
  %obj2217 = call %object* @alloc_obj() 
  %closure2218 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure2218, %object** %var_tmpparams) 
  call void @addtoclosure(%object*** %closure2218, %object** %var_params) 
  %selfpp2224 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2224 
  call void @addtoclosure(%object*** %closure2218, %object** %selfpp2224) 
  call void @addclosuremethod(%object* %obj2217, i8* getelementptr([6 x i8]* @.str.methname2218, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2218), %object*** %closure2218) 
; compilenode returning %obj2217 
  store %object* %opresult2216, %object** %params_0 
  %iter2208 = call %object* @callmethod(%object* %opresult2216, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2208 
BeginFor2208: 
  %condobj2208 = call %object* @callmethod(%object* %iter2208, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2208_valp = call i1 @istrue(%object* %condobj2208) 
  %cond2208 = icmp eq i1 0, %cond2208_valp 
br i1 %cond2208, label %EndFor2208, label %ForBody2208 
ForBody2208: 
 %forval2208 = call %object* @callmethod(%object* %iter2208, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2208, %object** %params_0 
  call %object* @callmethod(%object* %obj2217, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2208 
EndFor2208: 
; compilenode returning %opresult2216 
  %array2225 = call %object* @alloc_Array() 
; compilenode returning %array2225 
  %var_body = call %object** @alloc_var() 
  %var_body_dec = getelementptr %object* %array2225, i32 0 
  store %object* %var_body_dec, %object** %var_body 
; compilenode returning  
  br label %BeginIf2226 
BeginIf2226: 
  %str2227 = getelementptr [7 x i8]* @.str1231, i32 0, i32 0 
  %string2227 = call %object* @alloc_String(i8* %str2227) 
; compilenode returning %string2227 
  store %object* %string2227, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2228 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1232,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2228 
; compilenode returning %call2228 
  %cond2226_valp = call i1 @istrue(%object* %call2228) 
  %cond2226 = icmp eq i1 0, %cond2226_valp 
br i1 %cond2226, label %FalseBranch2226, label %TrueBranch2226 
TrueBranch2226: 
; WARNING: non-member calls not fully supported yet 
  %call2229 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1233,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2229 
; compilenode returning %call2229 
  %obj2230 = call %object* @alloc_obj() 
  %str2231 = getelementptr [7 x i8]* @.str1234, i32 0, i32 0 
  %string2231 = call %object* @alloc_String(i8* %str2231) 
; compilenode returning %string2231 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj2230, %object* %string2231, i32 0) 
  call void @addmethod(%object* %obj2230, i8* getelementptr([5 x i8]* @.str.methname2232, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_2232)) 
  call void @addmethod(%object* %obj2230, i8* getelementptr([7 x i8]* @.str.methnamew2232, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_2232)) 
  %str2233 = getelementptr [1 x i8]* @.str1237, i32 0, i32 0 
  %string2233 = call %object* @alloc_String(i8* %str2233) 
; compilenode returning %string2233 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj2230, %object* %string2233, i32 1) 
  call void @addmethod(%object* %obj2230, i8* getelementptr([9 x i8]* @.str.methname2234, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_2234)) 
  call void @addmethod(%object* %obj2230, i8* getelementptr([11 x i8]* @.str.methnamew2234, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_2234)) 
; compilenode returning %obj2230 
  store %object* %obj2230, %object** %params_0 
  %var_val_values2235 = load %object** %var_values 
; compilenode returning %var_val_values2235 
  %call2236 = call %object* @callmethod(%object* %var_val_values2235, i8* getelementptr([5 x i8]* @.str1240,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2236 
; compilenode returning %call2236 
; WARNING: non-member calls not fully supported yet 
  %call2237 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1241,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2237 
; compilenode returning %call2237 
  %var_val_values2238 = load %object** %var_values 
; compilenode returning %var_val_values2238 
  %call2239 = call %object* @callmethod(%object* %var_val_values2238, i8* getelementptr([4 x i8]* @.str1242,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2239 
; compilenode returning %call2239 
  %var_s = call %object** @alloc_var() 
  %var_s_dec = getelementptr %object* %call2239, i32 0 
  store %object* %var_s_dec, %object** %var_s 
; compilenode returning  
  br label %BeginWhile2240 
BeginWhile2240: 
  %var_val_s2241 = load %object** %var_s 
; compilenode returning %var_val_s2241 
  %call2242 = call %object* @callmethod(%object* %var_val_s2241, i8* getelementptr([5 x i8]* @.str1243,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2242 
; compilenode returning %call2242 
; compilenode returning %call2242 
  %str2243 = getelementptr [7 x i8]* @.str1244, i32 0, i32 0 
  %string2243 = call %object* @alloc_String(i8* %str2243) 
; compilenode returning %string2243 
  store %object* %string2243, %object** %params_0 
  %opresult2245 = call %object* @callmethod(%object* %call2242, i8* getelementptr([3 x i8]* @.str1245,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2245 
  %cond2240_valp = call i1 @istrue(%object* %opresult2245) 
  %cond2240 = icmp eq i1 0, %cond2240_valp 
br i1 %cond2240, label %EndWhile2240, label %WhileBody2240 
WhileBody2240: 
  %var_val_s2246 = load %object** %var_s 
; compilenode returning %var_val_s2246 
  store %object* %var_val_s2246, %object** %params_0 
  %var_val_body2247 = load %object** %var_body 
; compilenode returning %var_val_body2247 
  %call2248 = call %object* @callmethod(%object* %var_val_body2247, i8* getelementptr([5 x i8]* @.str1246,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2248 
; compilenode returning %call2248 
; WARNING: non-member calls not fully supported yet 
  %call2249 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1247,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2249 
; compilenode returning %call2249 
  %var_val_values2250 = load %object** %var_values 
; compilenode returning %var_val_values2250 
  %call2251 = call %object* @callmethod(%object* %var_val_values2250, i8* getelementptr([4 x i8]* @.str1248,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2251 
; compilenode returning %call2251 
  store %object* %call2251, %object** %var_s 
; compilenode returning %call2251 
  br label %BeginWhile2240 
EndWhile2240: 
; compilenode returning %opresult2245 
  br label %BeginIf2252 
BeginIf2252: 
  %str2253 = getelementptr [7 x i8]* @.str1249, i32 0, i32 0 
  %string2253 = call %object* @alloc_String(i8* %str2253) 
; compilenode returning %string2253 
  store %object* %string2253, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2254 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1250,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2254 
; compilenode returning %call2254 
  %cond2252_valp = call i1 @istrue(%object* %call2254) 
  %cond2252 = icmp eq i1 0, %cond2252_valp 
br i1 %cond2252, label %FalseBranch2252, label %TrueBranch2252 
TrueBranch2252: 
; WARNING: non-member calls not fully supported yet 
  %call2255 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1251,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2255 
; compilenode returning %call2255 
  br label %EndIf2252 
FalseBranch2252: 
  %str2256 = getelementptr [35 x i8]* @.str1252, i32 0, i32 0 
  %string2256 = call %object* @alloc_String(i8* %str2256) 
; compilenode returning %string2256 
  %var_val_meth2257 = load %object** %var_meth 
; compilenode returning %var_val_meth2257 
  %call2258 = call %object* @callmethod(%object* %var_val_meth2257, i8* getelementptr([6 x i8]* @.str1253,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2258 
; compilenode returning %call2258 
; compilenode returning %call2258 
  store %object* %string2256, %object** %params_0 
  store %object* %call2258, %object** %params_1 
  %call2259 = call %object* @gracelib_print(%object* null, i32 2, %object** %params) 
; compilenode returning %call2259 
  %str2260 = getelementptr [11 x i8]* @.str1254, i32 0, i32 0 
  %string2260 = call %object* @alloc_String(i8* %str2260) 
; compilenode returning %string2260 
  %var_val_sym2261 = load %object** %var_sym 
; compilenode returning %var_val_sym2261 
  %call2262 = call %object* @callmethod(%object* %var_val_sym2261, i8* getelementptr([4 x i8]* @.str1255,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2262 
; compilenode returning %call2262 
; compilenode returning %call2262 
  store %object* %string2260, %object** %params_0 
  store %object* %call2262, %object** %params_1 
  %call2263 = call %object* @gracelib_print(%object* null, i32 2, %object** %params) 
; compilenode returning %call2263 
  br label %EndIf2252 
EndIf2252: 
  %if2252 = phi %object* [ %call2255, %TrueBranch2252], [%call2263, %FalseBranch2252] 
; compilenode returning %if2252 
  br label %EndIf2226 
FalseBranch2226: 
  %str2264 = getelementptr [41 x i8]* @.str1256, i32 0, i32 0 
  %string2264 = call %object* @alloc_String(i8* %str2264) 
; compilenode returning %string2264 
  %var_val_meth2265 = load %object** %var_meth 
; compilenode returning %var_val_meth2265 
  %call2266 = call %object* @callmethod(%object* %var_val_meth2265, i8* getelementptr([6 x i8]* @.str1257,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2266 
; compilenode returning %call2266 
; compilenode returning %call2266 
  store %object* %string2264, %object** %params_0 
  store %object* %call2266, %object** %params_1 
  %call2267 = call %object* @gracelib_print(%object* null, i32 2, %object** %params) 
; compilenode returning %call2267 
  br label %EndIf2226 
EndIf2226: 
  %if2226 = phi %object* [ %if2252, %EndIf2252], [%call2267, %FalseBranch2226] 
; compilenode returning %if2226 
  %var_val_meth2268 = load %object** %var_meth 
; compilenode returning %var_val_meth2268 
  %var_val_params2269 = load %object** %var_params 
; compilenode returning %var_val_params2269 
  %var_val_body2270 = load %object** %var_body 
; compilenode returning %var_val_body2270 
  store %object* %var_val_meth2268, %object** %params_0 
  store %object* %var_val_params2269, %object** %params_1 
  store %object* %var_val_body2270, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call2271 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1258,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call2271 
; compilenode returning %call2271 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call2271, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o2272 = load %object** %var_o 
; compilenode returning %var_val_o2272 
  store %object* %var_val_o2272, %object** %params_0 
  %var_val_values2273 = load %object** %var_values 
; compilenode returning %var_val_values2273 
  %call2274 = call %object* @callmethod(%object* %var_val_values2273, i8* getelementptr([5 x i8]* @.str1259,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2274 
; compilenode returning %call2274 
  br label %EndIf2189 
EndIf2189: 
  %if2189 = phi %object* [ %call2274, %EndIf2226], [%call2191, %BeginIf2189] 
; compilenode returning %if2189 
  br label %EndIf2172 
EndIf2172: 
  %if2172 = phi %object* [ %if2189, %EndIf2189], [%call2174, %BeginIf2172] 
; compilenode returning %if2172 
  br label %EndIf2156 
EndIf2156: 
  %if2156 = phi %object* [ %if2172, %EndIf2172], [%opresult2166, %BeginIf2156] 
; compilenode returning %if2156 
  ret %object* %if2156 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_sym2280 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call2281 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_sym2288 
; got len 4 
; created con 
; pushed statement 
; compiled in to %call2289 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2300 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2304 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_values2310 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: statement 
; have closure method: 2 
define %object* @meth_statement2275(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_sym = getelementptr %object*** %closure, i32 0 
  %var_sym = load %object*** %varc_sym 
  %varc_values = getelementptr %object*** %closure, i32 1 
  %var_values = load %object*** %varc_values 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  br label %BeginIf2276 
BeginIf2276: 
  %str2277 = getelementptr [8 x i8]* @.str1261, i32 0, i32 0 
  %string2277 = call %object* @alloc_String(i8* %str2277) 
; compilenode returning %string2277 
  store %object* %string2277, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2278 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1262,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2278 
; compilenode returning %call2278 
  %cond2276_valp = call i1 @istrue(%object* %call2278) 
  %cond2276 = icmp eq i1 0, %cond2276_valp 
br i1 %cond2276, label %FalseBranch2276, label %TrueBranch2276 
TrueBranch2276: 
  br label %BeginIf2279 
BeginIf2279: 
  %var_val_sym2280 = load %object** %var_sym 
; compilenode returning %var_val_sym2280 
  %call2281 = call %object* @callmethod(%object* %var_val_sym2280, i8* getelementptr([4 x i8]* @.str1263,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2281 
; compilenode returning %call2281 
; compilenode returning %call2281 
  %call2282 = call %object* @callmethod(%object* %call2281, i8* getelementptr([6 x i8]* @.str1264,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2282 
; compilenode returning %call2282 
; compilenode returning %call2282 
  %str2283 = getelementptr [4 x i8]* @.str1265, i32 0, i32 0 
  %string2283 = call %object* @alloc_String(i8* %str2283) 
; compilenode returning %string2283 
  store %object* %string2283, %object** %params_0 
  %opresult2285 = call %object* @callmethod(%object* %call2282, i8* getelementptr([3 x i8]* @.str1266,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2285 
  %cond2279_valp = call i1 @istrue(%object* %opresult2285) 
  %cond2279 = icmp eq i1 0, %cond2279_valp 
br i1 %cond2279, label %FalseBranch2279, label %TrueBranch2279 
TrueBranch2279: 
; WARNING: non-member calls not fully supported yet 
  %call2286 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1267,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2286 
; compilenode returning %call2286 
  br label %EndIf2279 
FalseBranch2279: 
  br label %BeginIf2287 
BeginIf2287: 
  %var_val_sym2288 = load %object** %var_sym 
; compilenode returning %var_val_sym2288 
  %call2289 = call %object* @callmethod(%object* %var_val_sym2288, i8* getelementptr([4 x i8]* @.str1268,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2289 
; compilenode returning %call2289 
; compilenode returning %call2289 
  %call2290 = call %object* @callmethod(%object* %call2289, i8* getelementptr([6 x i8]* @.str1269,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2290 
; compilenode returning %call2290 
; compilenode returning %call2290 
  %str2291 = getelementptr [7 x i8]* @.str1270, i32 0, i32 0 
  %string2291 = call %object* @alloc_String(i8* %str2291) 
; compilenode returning %string2291 
  store %object* %string2291, %object** %params_0 
  %opresult2293 = call %object* @callmethod(%object* %call2290, i8* getelementptr([3 x i8]* @.str1271,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2293 
  %cond2287_valp = call i1 @istrue(%object* %opresult2293) 
  %cond2287 = icmp eq i1 0, %cond2287_valp 
br i1 %cond2287, label %FalseBranch2287, label %TrueBranch2287 
TrueBranch2287: 
; WARNING: non-member calls not fully supported yet 
  %call2294 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1272,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2294 
; compilenode returning %call2294 
  br label %EndIf2287 
FalseBranch2287: 
; WARNING: non-member calls not fully supported yet 
  %call2295 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1273,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2295 
; compilenode returning %call2295 
  br label %EndIf2287 
EndIf2287: 
  %if2287 = phi %object* [ %call2294, %TrueBranch2287], [%call2295, %FalseBranch2287] 
; compilenode returning %if2287 
  br label %EndIf2279 
EndIf2279: 
  %if2279 = phi %object* [ %call2286, %TrueBranch2279], [%if2287, %EndIf2287] 
; compilenode returning %if2279 
  br label %EndIf2276 
FalseBranch2276: 
; WARNING: non-member calls not fully supported yet 
  %call2296 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1274,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2296 
; compilenode returning %call2296 
  br label %BeginIf2297 
BeginIf2297: 
  %str2298 = getelementptr [5 x i8]* @.str1275, i32 0, i32 0 
  %string2298 = call %object* @alloc_String(i8* %str2298) 
; compilenode returning %string2298 
  store %object* %string2298, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2299 = call %object* @callmethod(%object* %self, i8* getelementptr([7 x i8]* @.str1276,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2299 
; compilenode returning %call2299 
  %cond2297_valp = call i1 @istrue(%object* %call2299) 
  %cond2297 = icmp eq i1 0, %cond2297_valp 
br i1 %cond2297, label %EndIf2297, label %TrueBranch2297 
TrueBranch2297: 
  %var_val_values2300 = load %object** %var_values 
; compilenode returning %var_val_values2300 
  %call2301 = call %object* @callmethod(%object* %var_val_values2300, i8* getelementptr([4 x i8]* @.str1277,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2301 
; compilenode returning %call2301 
  %var_dest = call %object** @alloc_var() 
  %var_dest_dec = getelementptr %object* %call2301, i32 0 
  store %object* %var_dest_dec, %object** %var_dest 
; compilenode returning  
; WARNING: non-member calls not fully supported yet 
  %call2302 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1278,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2302 
; compilenode returning %call2302 
; WARNING: non-member calls not fully supported yet 
  %call2303 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1279,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2303 
; compilenode returning %call2303 
  %var_val_values2304 = load %object** %var_values 
; compilenode returning %var_val_values2304 
  %call2305 = call %object* @callmethod(%object* %var_val_values2304, i8* getelementptr([4 x i8]* @.str1280,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2305 
; compilenode returning %call2305 
  %var_val = call %object** @alloc_var() 
  %var_val_dec = getelementptr %object* %call2305, i32 0 
  store %object* %var_val_dec, %object** %var_val 
; compilenode returning  
  %var_val_dest2306 = load %object** %var_dest 
; compilenode returning %var_val_dest2306 
  %var_val_val2307 = load %object** %var_val 
; compilenode returning %var_val_val2307 
  store %object* %var_val_dest2306, %object** %params_0 
  store %object* %var_val_val2307, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call2308 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1281,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call2308 
; compilenode returning %call2308 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call2308, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o2309 = load %object** %var_o 
; compilenode returning %var_val_o2309 
  store %object* %var_val_o2309, %object** %params_0 
  %var_val_values2310 = load %object** %var_values 
; compilenode returning %var_val_values2310 
  %call2311 = call %object* @callmethod(%object* %var_val_values2310, i8* getelementptr([5 x i8]* @.str1282,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2311 
; compilenode returning %call2311 
  br label %EndIf2297 
EndIf2297: 
  %if2297 = phi %object* [ %call2311, %TrueBranch2297], [%call2299, %BeginIf2297] 
; compilenode returning %if2297 
  br label %EndIf2276 
EndIf2276: 
  %if2276 = phi %object* [ %if2279, %EndIf2279], [%if2297, %EndIf2297] 
; compilenode returning %if2276 
  ret %object* %if2276 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_otoks2318 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_otoks2327 
; got len 4 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens2330 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply2326(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_otoks = getelementptr %object*** %closure, i32 0 
  %var_otoks = load %object*** %varc_otoks 
  %varc_tokens = getelementptr %object*** %closure, i32 1 
  %var_tokens = load %object*** %varc_tokens 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %var_val_otoks2327 = load %object** %var_otoks 
; compilenode returning %var_val_otoks2327 
  %call2328 = call %object* @callmethod(%object* %var_val_otoks2327, i8* getelementptr([4 x i8]* @.str1287,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2328 
; compilenode returning %call2328 
  %var_o = call %object** @alloc_var() 
  %var_o_dec = getelementptr %object* %call2328, i32 0 
  store %object* %var_o_dec, %object** %var_o 
; compilenode returning  
  %var_val_o2329 = load %object** %var_o 
; compilenode returning %var_val_o2329 
  store %object* %var_val_o2329, %object** %params_0 
  %var_val_tokens2330 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2330 
  %call2331 = call %object* @callmethod(%object* %var_val_tokens2330, i8* getelementptr([5 x i8]* @.str1288,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2331 
; compilenode returning %call2331 
  ret %object* %call2331 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_tokens2334 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens2340 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens2346 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens2353 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens2360 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_tokens2375 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o2391 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply2389(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %num2390 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2390 
  store %object* %num2390, %object** %params_0 
  %var_val_o2391 = load %object** %var_o 
; compilenode returning %var_val_o2391 
  %call2392 = call %object* @callmethod(%object* %var_val_o2391, i8* getelementptr([7 x i8]* @.str1312,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2392 
; compilenode returning %call2392 
  store %object* %call2392, %object** %params_0 
  %call2393 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2393 
  ret %object* %call2393 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_output2405 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: out 
; have closure method: 1 
define %object* @meth_out2403(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_output = getelementptr %object*** %closure, i32 0 
  %var_output = load %object*** %varc_output 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_s = getelementptr %object** %args, i32 0 
  %var_val_s2404 = load %object** %var_s 
; compilenode returning %var_val_s2404 
  store %object* %var_val_s2404, %object** %params_0 
  %var_val_output2405 = load %object** %var_output 
; compilenode returning %var_val_output2405 
  %call2406 = call %object* @callmethod(%object* %var_val_output2405, i8* getelementptr([5 x i8]* @.str1316,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2406 
; compilenode returning %call2406 
  ret %object* %call2406 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: beginblock 
; have closure method: 1 
define %object* @meth_beginblock2407(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_bblock = getelementptr %object*** %closure, i32 0 
  %var_bblock = load %object*** %varc_bblock 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_s = getelementptr %object** %args, i32 0 
  %str2408 = getelementptr [2 x i8]* @.str1318, i32 0, i32 0 
  %string2408 = call %object* @alloc_String(i8* %str2408) 
; compilenode returning %string2408 
  %var_val_s2409 = load %object** %var_s 
; compilenode returning %var_val_s2409 
  store %object* %var_val_s2409, %object** %params_0 
  %opresult2411 = call %object* @callmethod(%object* %string2408, i8* getelementptr([3 x i8]* @.str1319,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2411 
  store %object* %opresult2411, %object** %var_bblock 
; compilenode returning %opresult2411 
  %var_val_s2412 = load %object** %var_s 
; compilenode returning %var_val_s2412 
  %str2413 = getelementptr [2 x i8]* @.str1320, i32 0, i32 0 
  %string2413 = call %object* @alloc_String(i8* %str2413) 
; compilenode returning %string2413 
  store %object* %string2413, %object** %params_0 
  %opresult2415 = call %object* @callmethod(%object* %var_val_s2412, i8* getelementptr([3 x i8]* @.str1321,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2415 
  store %object* %opresult2415, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2416 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1322,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2416 
; compilenode returning %call2416 
  ret %object* %call2416 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2433 
; got len 6 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply2436(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_r = getelementptr %object*** %closure, i32 0 
  %var_r = load %object*** %varc_r 
  %varc_myc = getelementptr %object*** %closure, i32 1 
  %var_myc = load %object*** %varc_myc 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_a = getelementptr %object** %args, i32 0 
  %var_val_a2437 = load %object** %var_a 
; compilenode returning %var_val_a2437 
  store %object* %var_val_a2437, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2438 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1330,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2438 
; compilenode returning %call2438 
  store %object* %call2438, %object** %var_r 
; compilenode returning %call2438 
  %str2439 = getelementptr [18 x i8]* @.str1331, i32 0, i32 0 
  %string2439 = call %object* @alloc_String(i8* %str2439) 
; compilenode returning %string2439 
  %var_val_r2440 = load %object** %var_r 
; compilenode returning %var_val_r2440 
  %str2441 = getelementptr [22 x i8]* @.str1332, i32 0, i32 0 
  %string2441 = call %object* @alloc_String(i8* %str2441) 
; compilenode returning %string2441 
  store %object* %string2441, %object** %params_0 
  %opresult2443 = call %object* @callmethod(%object* %var_val_r2440, i8* getelementptr([3 x i8]* @.str1333,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2443 
  store %object* %opresult2443, %object** %params_0 
  %opresult2445 = call %object* @callmethod(%object* %string2439, i8* getelementptr([3 x i8]* @.str1334,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2445 
  store %object* %opresult2445, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2446 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1335,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2446 
; compilenode returning %call2446 
  %str2447 = getelementptr [44 x i8]* @.str1336, i32 0, i32 0 
  %string2447 = call %object* @alloc_String(i8* %str2447) 
; compilenode returning %string2447 
  %var_val_myc2448 = load %object** %var_myc 
; compilenode returning %var_val_myc2448 
  %str2449 = getelementptr [42 x i8]* @.str1337, i32 0, i32 0 
  %string2449 = call %object* @alloc_String(i8* %str2449) 
; compilenode returning %string2449 
  %str2450 = getelementptr [41 x i8]* @.str1338, i32 0, i32 0 
  %string2450 = call %object* @alloc_String(i8* %str2450) 
; compilenode returning %string2450 
  store %object* %string2450, %object** %params_0 
  %opresult2452 = call %object* @callmethod(%object* %string2449, i8* getelementptr([3 x i8]* @.str1339,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2452 
  store %object* %opresult2452, %object** %params_0 
  %opresult2454 = call %object* @callmethod(%object* %var_val_myc2448, i8* getelementptr([3 x i8]* @.str1340,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2454 
  store %object* %opresult2454, %object** %params_0 
  %opresult2456 = call %object* @callmethod(%object* %string2447, i8* getelementptr([3 x i8]* @.str1341,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2456 
  store %object* %opresult2456, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2457 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1342,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2457 
; compilenode returning %call2457 
  ret %object* %call2457 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2463 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilearray 
; have closure method: 1 
define %object* @meth_compilearray2417(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_auto_count2418 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2418 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count2418, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count2419 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2419 
  %num2420 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2420 
  store %object* %num2420, %object** %params_0 
  %sum2422 = call %object* @callmethod(%object* %var_val_auto_count2419, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2422 
  store %object* %sum2422, %object** %var_auto_count 
; compilenode returning %sum2422 
  %bool2423 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool2423 
  %var_r = call %object** @alloc_var() 
  %var_r_dec = getelementptr %object* %bool2423, i32 0 
  store %object* %var_r_dec, %object** %var_r 
; compilenode returning  
  %str2424 = getelementptr [9 x i8]* @.str1324, i32 0, i32 0 
  %string2424 = call %object* @alloc_String(i8* %str2424) 
; compilenode returning %string2424 
  %var_val_myc2425 = load %object** %var_myc 
; compilenode returning %var_val_myc2425 
  %str2426 = getelementptr [32 x i8]* @.str1325, i32 0, i32 0 
  %string2426 = call %object* @alloc_String(i8* %str2426) 
; compilenode returning %string2426 
  store %object* %string2426, %object** %params_0 
  %opresult2428 = call %object* @callmethod(%object* %var_val_myc2425, i8* getelementptr([3 x i8]* @.str1326,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2428 
  store %object* %opresult2428, %object** %params_0 
  %opresult2430 = call %object* @callmethod(%object* %string2424, i8* getelementptr([3 x i8]* @.str1327,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2430 
  store %object* %opresult2430, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2431 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1328,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2431 
; compilenode returning %call2431 
  %var_val_o2433 = load %object** %var_o 
; compilenode returning %var_val_o2433 
  %call2434 = call %object* @callmethod(%object* %var_val_o2433, i8* getelementptr([6 x i8]* @.str1329,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2434 
; compilenode returning %call2434 
; compilenode returning %call2434 
  %obj2435 = call %object* @alloc_obj() 
  %closure2436 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure2436, %object** %var_r) 
  call void @addtoclosure(%object*** %closure2436, %object** %var_myc) 
  %selfpp2458 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2458 
  call void @addtoclosure(%object*** %closure2436, %object** %selfpp2458) 
  call void @addclosuremethod(%object* %obj2435, i8* getelementptr([6 x i8]* @.str.methname2436, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2436), %object*** %closure2436) 
; compilenode returning %obj2435 
  store %object* %call2434, %object** %params_0 
  %iter2432 = call %object* @callmethod(%object* %call2434, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2432 
BeginFor2432: 
  %condobj2432 = call %object* @callmethod(%object* %iter2432, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2432_valp = call i1 @istrue(%object* %condobj2432) 
  %cond2432 = icmp eq i1 0, %cond2432_valp 
br i1 %cond2432, label %EndFor2432, label %ForBody2432 
ForBody2432: 
 %forval2432 = call %object* @callmethod(%object* %iter2432, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2432, %object** %params_0 
  call %object* @callmethod(%object* %obj2435, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2432 
EndFor2432: 
; compilenode returning %call2434 
; WARNING: non-local assigns not yet fully supported 
  %str2459 = getelementptr [7 x i8]* @.str1344, i32 0, i32 0 
  %string2459 = call %object* @alloc_String(i8* %str2459) 
; compilenode returning %string2459 
  %var_val_myc2460 = load %object** %var_myc 
; compilenode returning %var_val_myc2460 
  store %object* %var_val_myc2460, %object** %params_0 
  %opresult2462 = call %object* @callmethod(%object* %string2459, i8* getelementptr([3 x i8]* @.str1345,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2462 
  store %object* %opresult2462, %object** %params_0 
  %var_val_o2463 = load %object** %var_o 
; compilenode returning %var_val_o2463 
  %call2464 = call %object* @callmethod(%object* %var_val_o2463, i8* getelementptr([11 x i8]* @.str1346,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2464 
; compilenode returning %call2464 
; compilenode returning %call2464 
  ret %object* %call2464 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2473 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilemember 
define %object* @meth_compilemember2465(%object* %self, i32 %nparams, %object** %args) { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %array2466 = call %object* @alloc_Array() 
; compilenode returning %array2466 
  %var_l = call %object** @alloc_var() 
  %var_l_dec = getelementptr %object* %array2466, i32 0 
  store %object* %var_l_dec, %object** %var_l 
; compilenode returning  
  %var_val_o2467 = load %object** %var_o 
; compilenode returning %var_val_o2467 
  %var_val_l2468 = load %object** %var_l 
; compilenode returning %var_val_l2468 
  store %object* %var_val_o2467, %object** %params_0 
  store %object* %var_val_l2468, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call2469 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str1348,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call2469 
; compilenode returning %call2469 
  %var_c = call %object** @alloc_var() 
  %var_c_dec = getelementptr %object* %call2469, i32 0 
  store %object* %var_c_dec, %object** %var_c 
; compilenode returning  
  %var_val_c2470 = load %object** %var_c 
; compilenode returning %var_val_c2470 
  store %object* %var_val_c2470, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2471 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1349,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2471 
; compilenode returning %call2471 
  %var_r = call %object** @alloc_var() 
  %var_r_dec = getelementptr %object* %call2471, i32 0 
  store %object* %var_r_dec, %object** %var_r 
; compilenode returning  
; WARNING: non-local assigns not yet fully supported 
  %var_val_r2472 = load %object** %var_r 
; compilenode returning %var_val_r2472 
  store %object* %var_val_r2472, %object** %params_0 
  %var_val_o2473 = load %object** %var_o 
; compilenode returning %var_val_o2473 
  %call2474 = call %object* @callmethod(%object* %var_val_o2473, i8* getelementptr([11 x i8]* @.str1350,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2474 
; compilenode returning %call2474 
; compilenode returning %call2474 
  ret %object* %call2474 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2478 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o2480 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o2488 
; got len 5 
; created con 
; pushed statement 
; compiled in to %call2489 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants2519 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants2648 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compileobjvardec 
; have closure method: 2 
define %object* @meth_compileobjvardec2475(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_constants = getelementptr %object*** %closure, i32 1 
  %var_constants = load %object*** %varc_constants 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_selfr = getelementptr %object** %args, i32 1 
  %var_pos = getelementptr %object** %args, i32 2 
  %str2476 = getelementptr [5 x i8]* @.str1352, i32 0, i32 0 
  %string2476 = call %object* @alloc_String(i8* %str2476) 
; compilenode returning %string2476 
  %var_val = call %object** @alloc_var() 
  %var_val_dec = getelementptr %object* %string2476, i32 0 
  store %object* %var_val_dec, %object** %var_val 
; compilenode returning  
  br label %BeginIf2477 
BeginIf2477: 
  %var_val_o2478 = load %object** %var_o 
; compilenode returning %var_val_o2478 
  %call2479 = call %object* @callmethod(%object* %var_val_o2478, i8* getelementptr([6 x i8]* @.str1353,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2479 
; compilenode returning %call2479 
; compilenode returning %call2479 
  %cond2477_valp = call i1 @istrue(%object* %call2479) 
  %cond2477 = icmp eq i1 0, %cond2477_valp 
br i1 %cond2477, label %EndIf2477, label %TrueBranch2477 
TrueBranch2477: 
  %var_val_o2480 = load %object** %var_o 
; compilenode returning %var_val_o2480 
  %call2481 = call %object* @callmethod(%object* %var_val_o2480, i8* getelementptr([6 x i8]* @.str1354,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2481 
; compilenode returning %call2481 
; compilenode returning %call2481 
  store %object* %call2481, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2482 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1355,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2482 
; compilenode returning %call2482 
  store %object* %call2482, %object** %var_val 
; compilenode returning %call2482 
  br label %EndIf2477 
EndIf2477: 
  %if2477 = phi %object* [ %call2482, %TrueBranch2477], [%call2479, %BeginIf2477] 
; compilenode returning %if2477 
  %var_val_auto_count2483 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2483 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count2483, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count2484 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2484 
  %num2485 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2485 
  store %object* %num2485, %object** %params_0 
  %sum2487 = call %object* @callmethod(%object* %var_val_auto_count2484, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2487 
  store %object* %sum2487, %object** %var_auto_count 
; compilenode returning %sum2487 
  %var_val_o2488 = load %object** %var_o 
; compilenode returning %var_val_o2488 
  %call2489 = call %object* @callmethod(%object* %var_val_o2488, i8* getelementptr([5 x i8]* @.str1356,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2489 
; compilenode returning %call2489 
; compilenode returning %call2489 
  %call2490 = call %object* @callmethod(%object* %call2489, i8* getelementptr([6 x i8]* @.str1357,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2490 
; compilenode returning %call2490 
; compilenode returning %call2490 
  %var_nm = call %object** @alloc_var() 
  %var_nm_dec = getelementptr %object* %call2490, i32 0 
  store %object* %var_nm_dec, %object** %var_nm 
; compilenode returning  
  %var_val_nm2491 = load %object** %var_nm 
; compilenode returning %var_val_nm2491 
  %call2492 = call %object* @gracelib_length(%object* %var_val_nm2491) 
; compilenode returning %call2492 
  %num2493 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2493 
  store %object* %num2493, %object** %params_0 
  %sum2495 = call %object* @callmethod(%object* %call2492, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2495 
  %var_len = call %object** @alloc_var() 
  %var_len_dec = getelementptr %object* %sum2495, i32 0 
  store %object* %var_len_dec, %object** %var_len 
; compilenode returning  
  %str2496 = getelementptr [15 x i8]* @.str1358, i32 0, i32 0 
  %string2496 = call %object* @alloc_String(i8* %str2496) 
; compilenode returning %string2496 
  %var_val_myc2497 = load %object** %var_myc 
; compilenode returning %var_val_myc2497 
  %str2498 = getelementptr [25 x i8]* @.str1359, i32 0, i32 0 
  %string2498 = call %object* @alloc_String(i8* %str2498) 
; compilenode returning %string2498 
  %str2499 = getelementptr [11 x i8]* @.str1360, i32 0, i32 0 
  %string2499 = call %object* @alloc_String(i8* %str2499) 
; compilenode returning %string2499 
  %var_val_len2500 = load %object** %var_len 
; compilenode returning %var_val_len2500 
  %str2501 = getelementptr [10 x i8]* @.str1361, i32 0, i32 0 
  %string2501 = call %object* @alloc_String(i8* %str2501) 
; compilenode returning %string2501 
  %var_val_nm2502 = load %object** %var_nm 
; compilenode returning %var_val_nm2502 
  %str2503 = getelementptr [5 x i8]* @.str1362, i32 0, i32 0 
  %string2503 = call %object* @alloc_String(i8* %str2503) 
; compilenode returning %string2503 
  store %object* %string2503, %object** %params_0 
  %opresult2505 = call %object* @callmethod(%object* %var_val_nm2502, i8* getelementptr([3 x i8]* @.str1363,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2505 
  store %object* %opresult2505, %object** %params_0 
  %opresult2507 = call %object* @callmethod(%object* %string2501, i8* getelementptr([3 x i8]* @.str1364,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2507 
  store %object* %opresult2507, %object** %params_0 
  %opresult2509 = call %object* @callmethod(%object* %var_val_len2500, i8* getelementptr([3 x i8]* @.str1365,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2509 
  store %object* %opresult2509, %object** %params_0 
  %opresult2511 = call %object* @callmethod(%object* %string2499, i8* getelementptr([3 x i8]* @.str1366,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2511 
  store %object* %opresult2511, %object** %params_0 
  %opresult2513 = call %object* @callmethod(%object* %string2498, i8* getelementptr([3 x i8]* @.str1367,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2513 
  store %object* %opresult2513, %object** %params_0 
  %opresult2515 = call %object* @callmethod(%object* %var_val_myc2497, i8* getelementptr([3 x i8]* @.str1368,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2515 
  store %object* %opresult2515, %object** %params_0 
  %opresult2517 = call %object* @callmethod(%object* %string2496, i8* getelementptr([3 x i8]* @.str1369,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2517 
  %var_con = call %object** @alloc_var() 
  %var_con_dec = getelementptr %object* %opresult2517, i32 0 
  store %object* %var_con_dec, %object** %var_con 
; compilenode returning  
  %var_val_con2518 = load %object** %var_con 
; compilenode returning %var_val_con2518 
  store %object* %var_val_con2518, %object** %params_0 
  %var_val_constants2519 = load %object** %var_constants 
; compilenode returning %var_val_constants2519 
  %call2520 = call %object* @callmethod(%object* %var_val_constants2519, i8* getelementptr([5 x i8]* @.str1370,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2520 
; compilenode returning %call2520 
  %str2521 = getelementptr [18 x i8]* @.str1371, i32 0, i32 0 
  %string2521 = call %object* @alloc_String(i8* %str2521) 
; compilenode returning %string2521 
  %var_val_nm2522 = load %object** %var_nm 
; compilenode returning %var_val_nm2522 
  store %object* %var_val_nm2522, %object** %params_0 
  %opresult2524 = call %object* @callmethod(%object* %string2521, i8* getelementptr([3 x i8]* @.str1372,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2524 
  store %object* %opresult2524, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2525 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1373,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2525 
; compilenode returning %call2525 
  %str2526 = getelementptr [32 x i8]* @.str1374, i32 0, i32 0 
  %string2526 = call %object* @alloc_String(i8* %str2526) 
; compilenode returning %string2526 
  %var_val_selfr2527 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2527 
  %str2528 = getelementptr [12 x i8]* @.str1375, i32 0, i32 0 
  %string2528 = call %object* @alloc_String(i8* %str2528) 
; compilenode returning %string2528 
  %var_val_val2529 = load %object** %var_val 
; compilenode returning %var_val_val2529 
  %str2530 = getelementptr [7 x i8]* @.str1376, i32 0, i32 0 
  %string2530 = call %object* @alloc_String(i8* %str2530) 
; compilenode returning %string2530 
  %var_val_pos2531 = load %object** %var_pos 
; compilenode returning %var_val_pos2531 
  %str2532 = getelementptr [2 x i8]* @.str1377, i32 0, i32 0 
  %string2532 = call %object* @alloc_String(i8* %str2532) 
; compilenode returning %string2532 
  store %object* %string2532, %object** %params_0 
  %opresult2534 = call %object* @callmethod(%object* %var_val_pos2531, i8* getelementptr([3 x i8]* @.str1378,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2534 
  store %object* %opresult2534, %object** %params_0 
  %opresult2536 = call %object* @callmethod(%object* %string2530, i8* getelementptr([3 x i8]* @.str1379,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2536 
  store %object* %opresult2536, %object** %params_0 
  %opresult2538 = call %object* @callmethod(%object* %var_val_val2529, i8* getelementptr([3 x i8]* @.str1380,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2538 
  store %object* %opresult2538, %object** %params_0 
  %opresult2540 = call %object* @callmethod(%object* %string2528, i8* getelementptr([3 x i8]* @.str1381,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2540 
  store %object* %opresult2540, %object** %params_0 
  %opresult2542 = call %object* @callmethod(%object* %var_val_selfr2527, i8* getelementptr([3 x i8]* @.str1382,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2542 
  store %object* %opresult2542, %object** %params_0 
  %opresult2544 = call %object* @callmethod(%object* %string2526, i8* getelementptr([3 x i8]* @.str1383,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2544 
  store %object* %opresult2544, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2545 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1384,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2545 
; compilenode returning %call2545 
  %str2546 = getelementptr [25 x i8]* @.str1385, i32 0, i32 0 
  %string2546 = call %object* @alloc_String(i8* %str2546) 
; compilenode returning %string2546 
  %var_val_nm2547 = load %object** %var_nm 
; compilenode returning %var_val_nm2547 
  %str2548 = getelementptr [2 x i8]* @.str1386, i32 0, i32 0 
  %string2548 = call %object* @alloc_String(i8* %str2548) 
; compilenode returning %string2548 
  %var_val_myc2549 = load %object** %var_myc 
; compilenode returning %var_val_myc2549 
  %str2550 = getelementptr [32 x i8]* @.str1387, i32 0, i32 0 
  %string2550 = call %object* @alloc_String(i8* %str2550) 
; compilenode returning %string2550 
  %str2551 = getelementptr [19 x i8]* @.str1388, i32 0, i32 0 
  %string2551 = call %object* @alloc_String(i8* %str2551) 
; compilenode returning %string2551 
  store %object* %string2551, %object** %params_0 
  %opresult2553 = call %object* @callmethod(%object* %string2550, i8* getelementptr([3 x i8]* @.str1389,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2553 
  store %object* %opresult2553, %object** %params_0 
  %opresult2555 = call %object* @callmethod(%object* %var_val_myc2549, i8* getelementptr([3 x i8]* @.str1390,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2555 
  store %object* %opresult2555, %object** %params_0 
  %opresult2557 = call %object* @callmethod(%object* %string2548, i8* getelementptr([3 x i8]* @.str1391,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2557 
  store %object* %opresult2557, %object** %params_0 
  %opresult2559 = call %object* @callmethod(%object* %var_val_nm2547, i8* getelementptr([3 x i8]* @.str1392,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2559 
  store %object* %opresult2559, %object** %params_0 
  %opresult2561 = call %object* @callmethod(%object* %string2546, i8* getelementptr([3 x i8]* @.str1393,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2561 
  store %object* %opresult2561, %object** %params_0 
  %call2562 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2562 
  %str2563 = getelementptr [51 x i8]* @.str1394, i32 0, i32 0 
  %string2563 = call %object* @alloc_String(i8* %str2563) 
; compilenode returning %string2563 
  store %object* %string2563, %object** %params_0 
  %call2564 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2564 
  %str2565 = getelementptr [30 x i8]* @.str1395, i32 0, i32 0 
  %string2565 = call %object* @alloc_String(i8* %str2565) 
; compilenode returning %string2565 
  store %object* %string2565, %object** %params_0 
  %call2566 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2566 
  %str2567 = getelementptr [50 x i8]* @.str1396, i32 0, i32 0 
  %string2567 = call %object* @alloc_String(i8* %str2567) 
; compilenode returning %string2567 
  %var_val_pos2568 = load %object** %var_pos 
; compilenode returning %var_val_pos2568 
  store %object* %var_val_pos2568, %object** %params_0 
  %opresult2570 = call %object* @callmethod(%object* %string2567, i8* getelementptr([3 x i8]* @.str1397,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2570 
  store %object* %opresult2570, %object** %params_0 
  %call2571 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2571 
  %str2572 = getelementptr [35 x i8]* @.str1398, i32 0, i32 0 
  %string2572 = call %object* @alloc_String(i8* %str2572) 
; compilenode returning %string2572 
  store %object* %string2572, %object** %params_0 
  %call2573 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2573 
  %str2574 = getelementptr [21 x i8]* @.str1399, i32 0, i32 0 
  %string2574 = call %object* @alloc_String(i8* %str2574) 
; compilenode returning %string2574 
  store %object* %string2574, %object** %params_0 
  %call2575 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2575 
  %str2576 = getelementptr [2 x i8]* @.str1400, i32 0, i32 0 
  %string2576 = call %object* @alloc_String(i8* %str2576) 
; compilenode returning %string2576 
  store %object* %string2576, %object** %params_0 
  %call2577 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2577 
  %str2578 = getelementptr [33 x i8]* @.str1401, i32 0, i32 0 
  %string2578 = call %object* @alloc_String(i8* %str2578) 
; compilenode returning %string2578 
  %var_val_selfr2579 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2579 
  %str2580 = getelementptr [22 x i8]* @.str1402, i32 0, i32 0 
  %string2580 = call %object* @alloc_String(i8* %str2580) 
; compilenode returning %string2580 
  %var_val_len2581 = load %object** %var_len 
; compilenode returning %var_val_len2581 
  %str2582 = getelementptr [23 x i8]* @.str1403, i32 0, i32 0 
  %string2582 = call %object* @alloc_String(i8* %str2582) 
; compilenode returning %string2582 
  %var_val_myc2583 = load %object** %var_myc 
; compilenode returning %var_val_myc2583 
  %str2584 = getelementptr [18 x i8]* @.str1404, i32 0, i32 0 
  %string2584 = call %object* @alloc_String(i8* %str2584) 
; compilenode returning %string2584 
  %str2585 = getelementptr [60 x i8]* @.str1405, i32 0, i32 0 
  %string2585 = call %object* @alloc_String(i8* %str2585) 
; compilenode returning %string2585 
  %str2586 = getelementptr [37 x i8]* @.str1406, i32 0, i32 0 
  %string2586 = call %object* @alloc_String(i8* %str2586) 
; compilenode returning %string2586 
  %var_val_nm2587 = load %object** %var_nm 
; compilenode returning %var_val_nm2587 
  %str2588 = getelementptr [2 x i8]* @.str1407, i32 0, i32 0 
  %string2588 = call %object* @alloc_String(i8* %str2588) 
; compilenode returning %string2588 
  %var_val_myc2589 = load %object** %var_myc 
; compilenode returning %var_val_myc2589 
  %str2590 = getelementptr [3 x i8]* @.str1408, i32 0, i32 0 
  %string2590 = call %object* @alloc_String(i8* %str2590) 
; compilenode returning %string2590 
  store %object* %string2590, %object** %params_0 
  %opresult2592 = call %object* @callmethod(%object* %var_val_myc2589, i8* getelementptr([3 x i8]* @.str1409,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2592 
  store %object* %opresult2592, %object** %params_0 
  %opresult2594 = call %object* @callmethod(%object* %string2588, i8* getelementptr([3 x i8]* @.str1410,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2594 
  store %object* %opresult2594, %object** %params_0 
  %opresult2596 = call %object* @callmethod(%object* %var_val_nm2587, i8* getelementptr([3 x i8]* @.str1411,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2596 
  store %object* %opresult2596, %object** %params_0 
  %opresult2598 = call %object* @callmethod(%object* %string2586, i8* getelementptr([3 x i8]* @.str1412,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2598 
  store %object* %opresult2598, %object** %params_0 
  %opresult2600 = call %object* @callmethod(%object* %string2585, i8* getelementptr([3 x i8]* @.str1413,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2600 
  store %object* %opresult2600, %object** %params_0 
  %opresult2602 = call %object* @callmethod(%object* %string2584, i8* getelementptr([3 x i8]* @.str1414,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2602 
  store %object* %opresult2602, %object** %params_0 
  %opresult2604 = call %object* @callmethod(%object* %var_val_myc2583, i8* getelementptr([3 x i8]* @.str1415,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2604 
  store %object* %opresult2604, %object** %params_0 
  %opresult2606 = call %object* @callmethod(%object* %string2582, i8* getelementptr([3 x i8]* @.str1416,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2606 
  store %object* %opresult2606, %object** %params_0 
  %opresult2608 = call %object* @callmethod(%object* %var_val_len2581, i8* getelementptr([3 x i8]* @.str1417,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2608 
  store %object* %opresult2608, %object** %params_0 
  %opresult2610 = call %object* @callmethod(%object* %string2580, i8* getelementptr([3 x i8]* @.str1418,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2610 
  store %object* %opresult2610, %object** %params_0 
  %opresult2612 = call %object* @callmethod(%object* %var_val_selfr2579, i8* getelementptr([3 x i8]* @.str1419,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2612 
  store %object* %opresult2612, %object** %params_0 
  %opresult2614 = call %object* @callmethod(%object* %string2578, i8* getelementptr([3 x i8]* @.str1420,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2614 
  store %object* %opresult2614, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2615 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1421,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2615 
; compilenode returning %call2615 
  %var_val_nm2616 = load %object** %var_nm 
; compilenode returning %var_val_nm2616 
  %str2617 = getelementptr [3 x i8]* @.str1422, i32 0, i32 0 
  %string2617 = call %object* @alloc_String(i8* %str2617) 
; compilenode returning %string2617 
  store %object* %string2617, %object** %params_0 
  %opresult2619 = call %object* @callmethod(%object* %var_val_nm2616, i8* getelementptr([3 x i8]* @.str1423,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2619 
  %var_nmw = call %object** @alloc_var() 
  %var_nmw_dec = getelementptr %object* %opresult2619, i32 0 
  store %object* %var_nmw_dec, %object** %var_nmw 
; compilenode returning  
  %var_val_nmw2620 = load %object** %var_nmw 
; compilenode returning %var_val_nmw2620 
  %call2621 = call %object* @gracelib_length(%object* %var_val_nmw2620) 
; compilenode returning %call2621 
  %num2622 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2622 
  store %object* %num2622, %object** %params_0 
  %sum2624 = call %object* @callmethod(%object* %call2621, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2624 
  store %object* %sum2624, %object** %var_len 
; compilenode returning %sum2624 
  %str2625 = getelementptr [16 x i8]* @.str1424, i32 0, i32 0 
  %string2625 = call %object* @alloc_String(i8* %str2625) 
; compilenode returning %string2625 
  %var_val_myc2626 = load %object** %var_myc 
; compilenode returning %var_val_myc2626 
  %str2627 = getelementptr [25 x i8]* @.str1425, i32 0, i32 0 
  %string2627 = call %object* @alloc_String(i8* %str2627) 
; compilenode returning %string2627 
  %str2628 = getelementptr [11 x i8]* @.str1426, i32 0, i32 0 
  %string2628 = call %object* @alloc_String(i8* %str2628) 
; compilenode returning %string2628 
  %var_val_len2629 = load %object** %var_len 
; compilenode returning %var_val_len2629 
  %str2630 = getelementptr [10 x i8]* @.str1427, i32 0, i32 0 
  %string2630 = call %object* @alloc_String(i8* %str2630) 
; compilenode returning %string2630 
  %var_val_nmw2631 = load %object** %var_nmw 
; compilenode returning %var_val_nmw2631 
  %str2632 = getelementptr [5 x i8]* @.str1428, i32 0, i32 0 
  %string2632 = call %object* @alloc_String(i8* %str2632) 
; compilenode returning %string2632 
  store %object* %string2632, %object** %params_0 
  %opresult2634 = call %object* @callmethod(%object* %var_val_nmw2631, i8* getelementptr([3 x i8]* @.str1429,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2634 
  store %object* %opresult2634, %object** %params_0 
  %opresult2636 = call %object* @callmethod(%object* %string2630, i8* getelementptr([3 x i8]* @.str1430,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2636 
  store %object* %opresult2636, %object** %params_0 
  %opresult2638 = call %object* @callmethod(%object* %var_val_len2629, i8* getelementptr([3 x i8]* @.str1431,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2638 
  store %object* %opresult2638, %object** %params_0 
  %opresult2640 = call %object* @callmethod(%object* %string2628, i8* getelementptr([3 x i8]* @.str1432,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2640 
  store %object* %opresult2640, %object** %params_0 
  %opresult2642 = call %object* @callmethod(%object* %string2627, i8* getelementptr([3 x i8]* @.str1433,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2642 
  store %object* %opresult2642, %object** %params_0 
  %opresult2644 = call %object* @callmethod(%object* %var_val_myc2626, i8* getelementptr([3 x i8]* @.str1434,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2644 
  store %object* %opresult2644, %object** %params_0 
  %opresult2646 = call %object* @callmethod(%object* %string2625, i8* getelementptr([3 x i8]* @.str1435,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2646 
  store %object* %opresult2646, %object** %var_con 
; compilenode returning %opresult2646 
  %var_val_con2647 = load %object** %var_con 
; compilenode returning %var_val_con2647 
  store %object* %var_val_con2647, %object** %params_0 
  %var_val_constants2648 = load %object** %var_constants 
; compilenode returning %var_val_constants2648 
  %call2649 = call %object* @callmethod(%object* %var_val_constants2648, i8* getelementptr([5 x i8]* @.str1436,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2649 
; compilenode returning %call2649 
  %str2650 = getelementptr [25 x i8]* @.str1437, i32 0, i32 0 
  %string2650 = call %object* @alloc_String(i8* %str2650) 
; compilenode returning %string2650 
  %var_val_nm2651 = load %object** %var_nm 
; compilenode returning %var_val_nm2651 
  %str2652 = getelementptr [2 x i8]* @.str1438, i32 0, i32 0 
  %string2652 = call %object* @alloc_String(i8* %str2652) 
; compilenode returning %string2652 
  %var_val_myc2653 = load %object** %var_myc 
; compilenode returning %var_val_myc2653 
  %str2654 = getelementptr [32 x i8]* @.str1439, i32 0, i32 0 
  %string2654 = call %object* @alloc_String(i8* %str2654) 
; compilenode returning %string2654 
  %str2655 = getelementptr [19 x i8]* @.str1440, i32 0, i32 0 
  %string2655 = call %object* @alloc_String(i8* %str2655) 
; compilenode returning %string2655 
  store %object* %string2655, %object** %params_0 
  %opresult2657 = call %object* @callmethod(%object* %string2654, i8* getelementptr([3 x i8]* @.str1441,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2657 
  store %object* %opresult2657, %object** %params_0 
  %opresult2659 = call %object* @callmethod(%object* %var_val_myc2653, i8* getelementptr([3 x i8]* @.str1442,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2659 
  store %object* %opresult2659, %object** %params_0 
  %opresult2661 = call %object* @callmethod(%object* %string2652, i8* getelementptr([3 x i8]* @.str1443,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2661 
  store %object* %opresult2661, %object** %params_0 
  %opresult2663 = call %object* @callmethod(%object* %var_val_nm2651, i8* getelementptr([3 x i8]* @.str1444,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2663 
  store %object* %opresult2663, %object** %params_0 
  %opresult2665 = call %object* @callmethod(%object* %string2650, i8* getelementptr([3 x i8]* @.str1445,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2665 
  store %object* %opresult2665, %object** %params_0 
  %call2666 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2666 
  %str2667 = getelementptr [49 x i8]* @.str1446, i32 0, i32 0 
  %string2667 = call %object* @alloc_String(i8* %str2667) 
; compilenode returning %string2667 
  store %object* %string2667, %object** %params_0 
  %call2668 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2668 
  %str2669 = getelementptr [33 x i8]* @.str1447, i32 0, i32 0 
  %string2669 = call %object* @alloc_String(i8* %str2669) 
; compilenode returning %string2669 
  store %object* %string2669, %object** %params_0 
  %call2670 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2670 
  %str2671 = getelementptr [51 x i8]* @.str1448, i32 0, i32 0 
  %string2671 = call %object* @alloc_String(i8* %str2671) 
; compilenode returning %string2671 
  store %object* %string2671, %object** %params_0 
  %call2672 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2672 
  %str2673 = getelementptr [30 x i8]* @.str1449, i32 0, i32 0 
  %string2673 = call %object* @alloc_String(i8* %str2673) 
; compilenode returning %string2673 
  store %object* %string2673, %object** %params_0 
  %call2674 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2674 
  %str2675 = getelementptr [50 x i8]* @.str1450, i32 0, i32 0 
  %string2675 = call %object* @alloc_String(i8* %str2675) 
; compilenode returning %string2675 
  %var_val_pos2676 = load %object** %var_pos 
; compilenode returning %var_val_pos2676 
  store %object* %var_val_pos2676, %object** %params_0 
  %opresult2678 = call %object* @callmethod(%object* %string2675, i8* getelementptr([3 x i8]* @.str1451,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2678 
  store %object* %opresult2678, %object** %params_0 
  %call2679 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2679 
  %str2680 = getelementptr [44 x i8]* @.str1452, i32 0, i32 0 
  %string2680 = call %object* @alloc_String(i8* %str2680) 
; compilenode returning %string2680 
  store %object* %string2680, %object** %params_0 
  %call2681 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2681 
  %str2682 = getelementptr [21 x i8]* @.str1453, i32 0, i32 0 
  %string2682 = call %object* @alloc_String(i8* %str2682) 
; compilenode returning %string2682 
  store %object* %string2682, %object** %params_0 
  %call2683 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2683 
  %str2684 = getelementptr [2 x i8]* @.str1454, i32 0, i32 0 
  %string2684 = call %object* @alloc_String(i8* %str2684) 
; compilenode returning %string2684 
  store %object* %string2684, %object** %params_0 
  %call2685 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2685 
  %str2686 = getelementptr [33 x i8]* @.str1455, i32 0, i32 0 
  %string2686 = call %object* @alloc_String(i8* %str2686) 
; compilenode returning %string2686 
  %var_val_selfr2687 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2687 
  %str2688 = getelementptr [22 x i8]* @.str1456, i32 0, i32 0 
  %string2688 = call %object* @alloc_String(i8* %str2688) 
; compilenode returning %string2688 
  %var_val_len2689 = load %object** %var_len 
; compilenode returning %var_val_len2689 
  %str2690 = getelementptr [24 x i8]* @.str1457, i32 0, i32 0 
  %string2690 = call %object* @alloc_String(i8* %str2690) 
; compilenode returning %string2690 
  %var_val_myc2691 = load %object** %var_myc 
; compilenode returning %var_val_myc2691 
  %str2692 = getelementptr [18 x i8]* @.str1458, i32 0, i32 0 
  %string2692 = call %object* @alloc_String(i8* %str2692) 
; compilenode returning %string2692 
  %str2693 = getelementptr [60 x i8]* @.str1459, i32 0, i32 0 
  %string2693 = call %object* @alloc_String(i8* %str2693) 
; compilenode returning %string2693 
  %str2694 = getelementptr [37 x i8]* @.str1460, i32 0, i32 0 
  %string2694 = call %object* @alloc_String(i8* %str2694) 
; compilenode returning %string2694 
  %var_val_nm2695 = load %object** %var_nm 
; compilenode returning %var_val_nm2695 
  %str2696 = getelementptr [2 x i8]* @.str1461, i32 0, i32 0 
  %string2696 = call %object* @alloc_String(i8* %str2696) 
; compilenode returning %string2696 
  %var_val_myc2697 = load %object** %var_myc 
; compilenode returning %var_val_myc2697 
  %str2698 = getelementptr [3 x i8]* @.str1462, i32 0, i32 0 
  %string2698 = call %object* @alloc_String(i8* %str2698) 
; compilenode returning %string2698 
  store %object* %string2698, %object** %params_0 
  %opresult2700 = call %object* @callmethod(%object* %var_val_myc2697, i8* getelementptr([3 x i8]* @.str1463,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2700 
  store %object* %opresult2700, %object** %params_0 
  %opresult2702 = call %object* @callmethod(%object* %string2696, i8* getelementptr([3 x i8]* @.str1464,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2702 
  store %object* %opresult2702, %object** %params_0 
  %opresult2704 = call %object* @callmethod(%object* %var_val_nm2695, i8* getelementptr([3 x i8]* @.str1465,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2704 
  store %object* %opresult2704, %object** %params_0 
  %opresult2706 = call %object* @callmethod(%object* %string2694, i8* getelementptr([3 x i8]* @.str1466,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2706 
  store %object* %opresult2706, %object** %params_0 
  %opresult2708 = call %object* @callmethod(%object* %string2693, i8* getelementptr([3 x i8]* @.str1467,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2708 
  store %object* %opresult2708, %object** %params_0 
  %opresult2710 = call %object* @callmethod(%object* %string2692, i8* getelementptr([3 x i8]* @.str1468,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2710 
  store %object* %opresult2710, %object** %params_0 
  %opresult2712 = call %object* @callmethod(%object* %var_val_myc2691, i8* getelementptr([3 x i8]* @.str1469,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2712 
  store %object* %opresult2712, %object** %params_0 
  %opresult2714 = call %object* @callmethod(%object* %string2690, i8* getelementptr([3 x i8]* @.str1470,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2714 
  store %object* %opresult2714, %object** %params_0 
  %opresult2716 = call %object* @callmethod(%object* %var_val_len2689, i8* getelementptr([3 x i8]* @.str1471,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2716 
  store %object* %opresult2716, %object** %params_0 
  %opresult2718 = call %object* @callmethod(%object* %string2688, i8* getelementptr([3 x i8]* @.str1472,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2718 
  store %object* %opresult2718, %object** %params_0 
  %opresult2720 = call %object* @callmethod(%object* %var_val_selfr2687, i8* getelementptr([3 x i8]* @.str1473,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2720 
  store %object* %opresult2720, %object** %params_0 
  %opresult2722 = call %object* @callmethod(%object* %string2686, i8* getelementptr([3 x i8]* @.str1474,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2722 
  store %object* %opresult2722, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2723 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1475,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2723 
; compilenode returning %call2723 
  ret %object* %call2723 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2744 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_e2749 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_e2758 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply2747(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_selfr = getelementptr %object*** %closure, i32 0 
  %var_selfr = load %object*** %varc_selfr 
  %varc_pos = getelementptr %object*** %closure, i32 1 
  %var_pos = load %object*** %varc_pos 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_e = getelementptr %object** %args, i32 0 
  br label %BeginIf2748 
BeginIf2748: 
  %var_val_e2749 = load %object** %var_e 
; compilenode returning %var_val_e2749 
  %call2750 = call %object* @callmethod(%object* %var_val_e2749, i8* getelementptr([5 x i8]* @.str1485,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2750 
; compilenode returning %call2750 
; compilenode returning %call2750 
  %str2751 = getelementptr [7 x i8]* @.str1486, i32 0, i32 0 
  %string2751 = call %object* @alloc_String(i8* %str2751) 
; compilenode returning %string2751 
  store %object* %string2751, %object** %params_0 
  %opresult2753 = call %object* @callmethod(%object* %call2750, i8* getelementptr([3 x i8]* @.str1487,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2753 
  %cond2748_valp = call i1 @istrue(%object* %opresult2753) 
  %cond2748 = icmp eq i1 0, %cond2748_valp 
br i1 %cond2748, label %EndIf2748, label %TrueBranch2748 
TrueBranch2748: 
  %var_val_e2754 = load %object** %var_e 
; compilenode returning %var_val_e2754 
  %var_val_selfr2755 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2755 
  store %object* %var_val_e2754, %object** %params_0 
  store %object* %var_val_selfr2755, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call2756 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str1488,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call2756 
; compilenode returning %call2756 
  br label %EndIf2748 
EndIf2748: 
  %if2748 = phi %object* [ %call2756, %TrueBranch2748], [%opresult2753, %BeginIf2748] 
; compilenode returning %if2748 
  br label %BeginIf2757 
BeginIf2757: 
  %var_val_e2758 = load %object** %var_e 
; compilenode returning %var_val_e2758 
  %call2759 = call %object* @callmethod(%object* %var_val_e2758, i8* getelementptr([5 x i8]* @.str1489,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2759 
; compilenode returning %call2759 
; compilenode returning %call2759 
  %str2760 = getelementptr [7 x i8]* @.str1490, i32 0, i32 0 
  %string2760 = call %object* @alloc_String(i8* %str2760) 
; compilenode returning %string2760 
  store %object* %string2760, %object** %params_0 
  %opresult2762 = call %object* @callmethod(%object* %call2759, i8* getelementptr([3 x i8]* @.str1491,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2762 
  %cond2757_valp = call i1 @istrue(%object* %opresult2762) 
  %cond2757 = icmp eq i1 0, %cond2757_valp 
br i1 %cond2757, label %EndIf2757, label %TrueBranch2757 
TrueBranch2757: 
  %var_val_e2763 = load %object** %var_e 
; compilenode returning %var_val_e2763 
  %var_val_selfr2764 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2764 
  %var_val_pos2765 = load %object** %var_pos 
; compilenode returning %var_val_pos2765 
  store %object* %var_val_e2763, %object** %params_0 
  store %object* %var_val_selfr2764, %object** %params_1 
  store %object* %var_val_pos2765, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call2766 = call %object* @callmethod(%object* %self, i8* getelementptr([17 x i8]* @.str1492,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call2766 
; compilenode returning %call2766 
  %var_val_pos2767 = load %object** %var_pos 
; compilenode returning %var_val_pos2767 
  %num2768 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2768 
  store %object* %num2768, %object** %params_0 
  %sum2770 = call %object* @callmethod(%object* %var_val_pos2767, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2770 
  store %object* %sum2770, %object** %var_pos 
; compilenode returning %sum2770 
  br label %EndIf2757 
EndIf2757: 
  %if2757 = phi %object* [ %sum2770, %TrueBranch2757], [%opresult2762, %BeginIf2757] 
; compilenode returning %if2757 
  ret %object* %if2757 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2773 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compileobject 
; have closure method: 1 
define %object* @meth_compileobject2724(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_auto_count2725 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2725 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count2725, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count2726 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2726 
  %num2727 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2727 
  store %object* %num2727, %object** %params_0 
  %sum2729 = call %object* @callmethod(%object* %var_val_auto_count2726, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2729 
  store %object* %sum2729, %object** %var_auto_count 
; compilenode returning %sum2729 
  %str2730 = getelementptr [5 x i8]* @.str1477, i32 0, i32 0 
  %string2730 = call %object* @alloc_String(i8* %str2730) 
; compilenode returning %string2730 
  %var_val_myc2731 = load %object** %var_myc 
; compilenode returning %var_val_myc2731 
  store %object* %var_val_myc2731, %object** %params_0 
  %opresult2733 = call %object* @callmethod(%object* %string2730, i8* getelementptr([3 x i8]* @.str1478,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2733 
  %var_selfr = call %object** @alloc_var() 
  %var_selfr_dec = getelementptr %object* %opresult2733, i32 0 
  store %object* %var_selfr_dec, %object** %var_selfr 
; compilenode returning  
  %str2734 = getelementptr [3 x i8]* @.str1479, i32 0, i32 0 
  %string2734 = call %object* @alloc_String(i8* %str2734) 
; compilenode returning %string2734 
  %var_val_selfr2735 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2735 
  %str2736 = getelementptr [30 x i8]* @.str1480, i32 0, i32 0 
  %string2736 = call %object* @alloc_String(i8* %str2736) 
; compilenode returning %string2736 
  store %object* %string2736, %object** %params_0 
  %opresult2738 = call %object* @callmethod(%object* %var_val_selfr2735, i8* getelementptr([3 x i8]* @.str1481,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2738 
  store %object* %opresult2738, %object** %params_0 
  %opresult2740 = call %object* @callmethod(%object* %string2734, i8* getelementptr([3 x i8]* @.str1482,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2740 
  store %object* %opresult2740, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2741 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1483,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2741 
; compilenode returning %call2741 
  %num2742 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2742 
  %var_pos = call %object** @alloc_var() 
  %var_pos_dec = getelementptr %object* %num2742, i32 0 
  store %object* %var_pos_dec, %object** %var_pos 
; compilenode returning  
  %var_val_o2744 = load %object** %var_o 
; compilenode returning %var_val_o2744 
  %call2745 = call %object* @callmethod(%object* %var_val_o2744, i8* getelementptr([6 x i8]* @.str1484,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2745 
; compilenode returning %call2745 
; compilenode returning %call2745 
  %obj2746 = call %object* @alloc_obj() 
  %closure2747 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure2747, %object** %var_selfr) 
  call void @addtoclosure(%object*** %closure2747, %object** %var_pos) 
  %selfpp2771 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2771 
  call void @addtoclosure(%object*** %closure2747, %object** %selfpp2771) 
  call void @addclosuremethod(%object* %obj2746, i8* getelementptr([6 x i8]* @.str.methname2747, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2747), %object*** %closure2747) 
; compilenode returning %obj2746 
  store %object* %call2745, %object** %params_0 
  %iter2743 = call %object* @callmethod(%object* %call2745, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2743 
BeginFor2743: 
  %condobj2743 = call %object* @callmethod(%object* %iter2743, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2743_valp = call i1 @istrue(%object* %condobj2743) 
  %cond2743 = icmp eq i1 0, %cond2743_valp 
br i1 %cond2743, label %EndFor2743, label %ForBody2743 
ForBody2743: 
 %forval2743 = call %object* @callmethod(%object* %iter2743, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2743, %object** %params_0 
  call %object* @callmethod(%object* %obj2746, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2743 
EndFor2743: 
; compilenode returning %call2745 
; WARNING: non-local assigns not yet fully supported 
  %var_val_selfr2772 = load %object** %var_selfr 
; compilenode returning %var_val_selfr2772 
  store %object* %var_val_selfr2772, %object** %params_0 
  %var_val_o2773 = load %object** %var_o 
; compilenode returning %var_val_o2773 
  %call2774 = call %object* @callmethod(%object* %var_val_o2773, i8* getelementptr([11 x i8]* @.str1494,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2774 
; compilenode returning %call2774 
; compilenode returning %call2774 
  ret %object* %call2774 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o2781 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o2787 
; got len 9 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o2789 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_applymeth2793 
; got len 14 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o2956 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilefor 
; have closure method: 2 
define %object* @meth_compilefor2775(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_bblock = getelementptr %object*** %closure, i32 1 
  %var_bblock = load %object*** %varc_bblock 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_auto_count2776 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2776 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count2776, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count2777 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2777 
  %num2778 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2778 
  store %object* %num2778, %object** %params_0 
  %sum2780 = call %object* @callmethod(%object* %var_val_auto_count2777, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2780 
  store %object* %sum2780, %object** %var_auto_count 
; compilenode returning %sum2780 
  %var_val_o2781 = load %object** %var_o 
; compilenode returning %var_val_o2781 
  %call2782 = call %object* @callmethod(%object* %var_val_o2781, i8* getelementptr([6 x i8]* @.str1496,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2782 
; compilenode returning %call2782 
; compilenode returning %call2782 
  store %object* %call2782, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2783 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1497,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2783 
; compilenode returning %call2783 
  %var_over = call %object** @alloc_var() 
  %var_over_dec = getelementptr %object* %call2783, i32 0 
  store %object* %var_over_dec, %object** %var_over 
; compilenode returning  
  %str2784 = getelementptr [6 x i8]* @.str1498, i32 0, i32 0 
  %string2784 = call %object* @alloc_String(i8* %str2784) 
; compilenode returning %string2784 
  store %object* %string2784, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2785 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str1499,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2785 
; compilenode returning %call2785 
  %array2786 = call %object* @alloc_Array() 
  %var_val_o2787 = load %object** %var_o 
; compilenode returning %var_val_o2787 
  %call2788 = call %object* @callmethod(%object* %var_val_o2787, i8* getelementptr([9 x i8]* @.str1500,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2788 
; compilenode returning %call2788 
; compilenode returning %call2788 
  store %object* %call2788, %object** %params_0 
  call %object* @callmethod(%object* %array2786, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array2786 
  %var_val_o2789 = load %object** %var_o 
; compilenode returning %var_val_o2789 
  %call2790 = call %object* @callmethod(%object* %var_val_o2789, i8* getelementptr([5 x i8]* @.str1501,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2790 
; compilenode returning %call2790 
; compilenode returning %call2790 
  store %object* %call2785, %object** %params_0 
  store %object* %array2786, %object** %params_1 
  store %object* %call2790, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call2791 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1502,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call2791 
; compilenode returning %call2791 
  %var_applymeth = call %object** @alloc_var() 
  %var_applymeth_dec = getelementptr %object* %call2791, i32 0 
  store %object* %var_applymeth_dec, %object** %var_applymeth 
; compilenode returning  
; WARNING: non-local assigns not yet fully supported 
  %num2792 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2792 
  store %object* %num2792, %object** %params_0 
  %var_val_applymeth2793 = load %object** %var_applymeth 
; compilenode returning %var_val_applymeth2793 
  %call2794 = call %object* @callmethod(%object* %var_val_applymeth2793, i8* getelementptr([14 x i8]* @.str1503,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2794 
; compilenode returning %call2794 
; compilenode returning %call2794 
  %array2795 = call %object* @alloc_Array() 
  %var_val_applymeth2796 = load %object** %var_applymeth 
; compilenode returning %var_val_applymeth2796 
  store %object* %var_val_applymeth2796, %object** %params_0 
  call %object* @callmethod(%object* %array2795, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array2795 
  store %object* %array2795, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2797 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1504,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2797 
; compilenode returning %call2797 
  %var_objbody = call %object** @alloc_var() 
  %var_objbody_dec = getelementptr %object* %call2797, i32 0 
  store %object* %var_objbody_dec, %object** %var_objbody 
; compilenode returning  
  %var_val_objbody2798 = load %object** %var_objbody 
; compilenode returning %var_val_objbody2798 
  store %object* %var_val_objbody2798, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2799 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1505,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2799 
; compilenode returning %call2799 
  %var_obj = call %object** @alloc_var() 
  %var_obj_dec = getelementptr %object* %call2799, i32 0 
  store %object* %var_obj_dec, %object** %var_obj 
; compilenode returning  
  %str2800 = getelementptr [18 x i8]* @.str1506, i32 0, i32 0 
  %string2800 = call %object* @alloc_String(i8* %str2800) 
; compilenode returning %string2800 
  %var_val_over2801 = load %object** %var_over 
; compilenode returning %var_val_over2801 
  %str2802 = getelementptr [22 x i8]* @.str1507, i32 0, i32 0 
  %string2802 = call %object* @alloc_String(i8* %str2802) 
; compilenode returning %string2802 
  store %object* %string2802, %object** %params_0 
  %opresult2804 = call %object* @callmethod(%object* %var_val_over2801, i8* getelementptr([3 x i8]* @.str1508,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2804 
  store %object* %opresult2804, %object** %params_0 
  %opresult2806 = call %object* @callmethod(%object* %string2800, i8* getelementptr([3 x i8]* @.str1509,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2806 
  store %object* %opresult2806, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2807 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1510,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2807 
; compilenode returning %call2807 
  %str2808 = getelementptr [8 x i8]* @.str1511, i32 0, i32 0 
  %string2808 = call %object* @alloc_String(i8* %str2808) 
; compilenode returning %string2808 
  %var_val_myc2809 = load %object** %var_myc 
; compilenode returning %var_val_myc2809 
  %str2810 = getelementptr [39 x i8]* @.str1512, i32 0, i32 0 
  %string2810 = call %object* @alloc_String(i8* %str2810) 
; compilenode returning %string2810 
  %var_val_over2811 = load %object** %var_over 
; compilenode returning %var_val_over2811 
  %str2812 = getelementptr [42 x i8]* @.str1513, i32 0, i32 0 
  %string2812 = call %object* @alloc_String(i8* %str2812) 
; compilenode returning %string2812 
  %str2813 = getelementptr [41 x i8]* @.str1514, i32 0, i32 0 
  %string2813 = call %object* @alloc_String(i8* %str2813) 
; compilenode returning %string2813 
  store %object* %string2813, %object** %params_0 
  %opresult2815 = call %object* @callmethod(%object* %string2812, i8* getelementptr([3 x i8]* @.str1515,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2815 
  store %object* %opresult2815, %object** %params_0 
  %opresult2817 = call %object* @callmethod(%object* %var_val_over2811, i8* getelementptr([3 x i8]* @.str1516,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2817 
  store %object* %opresult2817, %object** %params_0 
  %opresult2819 = call %object* @callmethod(%object* %string2810, i8* getelementptr([3 x i8]* @.str1517,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2819 
  store %object* %opresult2819, %object** %params_0 
  %opresult2821 = call %object* @callmethod(%object* %var_val_myc2809, i8* getelementptr([3 x i8]* @.str1518,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2821 
  store %object* %opresult2821, %object** %params_0 
  %opresult2823 = call %object* @callmethod(%object* %string2808, i8* getelementptr([3 x i8]* @.str1519,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2823 
  store %object* %opresult2823, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2824 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1520,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2824 
; compilenode returning %call2824 
  %str2825 = getelementptr [21 x i8]* @.str1521, i32 0, i32 0 
  %string2825 = call %object* @alloc_String(i8* %str2825) 
; compilenode returning %string2825 
  %var_val_myc2826 = load %object** %var_myc 
; compilenode returning %var_val_myc2826 
  store %object* %var_val_myc2826, %object** %params_0 
  %opresult2828 = call %object* @callmethod(%object* %string2825, i8* getelementptr([3 x i8]* @.str1522,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2828 
  store %object* %opresult2828, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2829 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1523,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2829 
; compilenode returning %call2829 
  %str2830 = getelementptr [9 x i8]* @.str1524, i32 0, i32 0 
  %string2830 = call %object* @alloc_String(i8* %str2830) 
; compilenode returning %string2830 
  %var_val_myc2831 = load %object** %var_myc 
; compilenode returning %var_val_myc2831 
  store %object* %var_val_myc2831, %object** %params_0 
  %opresult2833 = call %object* @callmethod(%object* %string2830, i8* getelementptr([3 x i8]* @.str1525,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2833 
  store %object* %opresult2833, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2834 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1526,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2834 
; compilenode returning %call2834 
  %str2835 = getelementptr [11 x i8]* @.str1527, i32 0, i32 0 
  %string2835 = call %object* @alloc_String(i8* %str2835) 
; compilenode returning %string2835 
  %var_val_myc2836 = load %object** %var_myc 
; compilenode returning %var_val_myc2836 
  %str2837 = getelementptr [44 x i8]* @.str1528, i32 0, i32 0 
  %string2837 = call %object* @alloc_String(i8* %str2837) 
; compilenode returning %string2837 
  %var_val_myc2838 = load %object** %var_myc 
; compilenode returning %var_val_myc2838 
  %str2839 = getelementptr [46 x i8]* @.str1529, i32 0, i32 0 
  %string2839 = call %object* @alloc_String(i8* %str2839) 
; compilenode returning %string2839 
  %str2840 = getelementptr [41 x i8]* @.str1530, i32 0, i32 0 
  %string2840 = call %object* @alloc_String(i8* %str2840) 
; compilenode returning %string2840 
  store %object* %string2840, %object** %params_0 
  %opresult2842 = call %object* @callmethod(%object* %string2839, i8* getelementptr([3 x i8]* @.str1531,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2842 
  store %object* %opresult2842, %object** %params_0 
  %opresult2844 = call %object* @callmethod(%object* %var_val_myc2838, i8* getelementptr([3 x i8]* @.str1532,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2844 
  store %object* %opresult2844, %object** %params_0 
  %opresult2846 = call %object* @callmethod(%object* %string2837, i8* getelementptr([3 x i8]* @.str1533,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2846 
  store %object* %opresult2846, %object** %params_0 
  %opresult2848 = call %object* @callmethod(%object* %var_val_myc2836, i8* getelementptr([3 x i8]* @.str1534,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2848 
  store %object* %opresult2848, %object** %params_0 
  %opresult2850 = call %object* @callmethod(%object* %string2835, i8* getelementptr([3 x i8]* @.str1535,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2850 
  store %object* %opresult2850, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2851 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1536,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2851 
; compilenode returning %call2851 
  %str2852 = getelementptr [6 x i8]* @.str1537, i32 0, i32 0 
  %string2852 = call %object* @alloc_String(i8* %str2852) 
; compilenode returning %string2852 
  %var_val_myc2853 = load %object** %var_myc 
; compilenode returning %var_val_myc2853 
  store %object* %var_val_myc2853, %object** %params_0 
  %opresult2855 = call %object* @callmethod(%object* %string2852, i8* getelementptr([3 x i8]* @.str1538,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2855 
  %var_creg = call %object** @alloc_var() 
  %var_creg_dec = getelementptr %object* %opresult2855, i32 0 
  store %object* %var_creg_dec, %object** %var_creg 
; compilenode returning  
  %str2856 = getelementptr [3 x i8]* @.str1539, i32 0, i32 0 
  %string2856 = call %object* @alloc_String(i8* %str2856) 
; compilenode returning %string2856 
  %var_val_creg2857 = load %object** %var_creg 
; compilenode returning %var_val_creg2857 
  %str2858 = getelementptr [42 x i8]* @.str1540, i32 0, i32 0 
  %string2858 = call %object* @alloc_String(i8* %str2858) 
; compilenode returning %string2858 
  %var_val_myc2859 = load %object** %var_myc 
; compilenode returning %var_val_myc2859 
  %str2860 = getelementptr [2 x i8]* @.str1541, i32 0, i32 0 
  %string2860 = call %object* @alloc_String(i8* %str2860) 
; compilenode returning %string2860 
  store %object* %string2860, %object** %params_0 
  %opresult2862 = call %object* @callmethod(%object* %var_val_myc2859, i8* getelementptr([3 x i8]* @.str1542,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2862 
  store %object* %opresult2862, %object** %params_0 
  %opresult2864 = call %object* @callmethod(%object* %string2858, i8* getelementptr([3 x i8]* @.str1543,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2864 
  store %object* %opresult2864, %object** %params_0 
  %opresult2866 = call %object* @callmethod(%object* %var_val_creg2857, i8* getelementptr([3 x i8]* @.str1544,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2866 
  store %object* %opresult2866, %object** %params_0 
  %opresult2868 = call %object* @callmethod(%object* %string2856, i8* getelementptr([3 x i8]* @.str1545,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2868 
  store %object* %opresult2868, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2869 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1546,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2869 
; compilenode returning %call2869 
  %str2870 = getelementptr [3 x i8]* @.str1547, i32 0, i32 0 
  %string2870 = call %object* @alloc_String(i8* %str2870) 
; compilenode returning %string2870 
  %var_val_creg2871 = load %object** %var_creg 
; compilenode returning %var_val_creg2871 
  %str2872 = getelementptr [18 x i8]* @.str1548, i32 0, i32 0 
  %string2872 = call %object* @alloc_String(i8* %str2872) 
; compilenode returning %string2872 
  %var_val_creg2873 = load %object** %var_creg 
; compilenode returning %var_val_creg2873 
  %str2874 = getelementptr [6 x i8]* @.str1549, i32 0, i32 0 
  %string2874 = call %object* @alloc_String(i8* %str2874) 
; compilenode returning %string2874 
  store %object* %string2874, %object** %params_0 
  %opresult2876 = call %object* @callmethod(%object* %var_val_creg2873, i8* getelementptr([3 x i8]* @.str1550,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2876 
  store %object* %opresult2876, %object** %params_0 
  %opresult2878 = call %object* @callmethod(%object* %string2872, i8* getelementptr([3 x i8]* @.str1551,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2878 
  store %object* %opresult2878, %object** %params_0 
  %opresult2880 = call %object* @callmethod(%object* %var_val_creg2871, i8* getelementptr([3 x i8]* @.str1552,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2880 
  store %object* %opresult2880, %object** %params_0 
  %opresult2882 = call %object* @callmethod(%object* %string2870, i8* getelementptr([3 x i8]* @.str1553,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2882 
  store %object* %opresult2882, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2883 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1554,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2883 
; compilenode returning %call2883 
  %str2884 = getelementptr [7 x i8]* @.str1555, i32 0, i32 0 
  %string2884 = call %object* @alloc_String(i8* %str2884) 
; compilenode returning %string2884 
  %var_val_creg2885 = load %object** %var_creg 
; compilenode returning %var_val_creg2885 
  %str2886 = getelementptr [16 x i8]* @.str1556, i32 0, i32 0 
  %string2886 = call %object* @alloc_String(i8* %str2886) 
; compilenode returning %string2886 
  %var_val_myc2887 = load %object** %var_myc 
; compilenode returning %var_val_myc2887 
  %str2888 = getelementptr [17 x i8]* @.str1557, i32 0, i32 0 
  %string2888 = call %object* @alloc_String(i8* %str2888) 
; compilenode returning %string2888 
  %var_val_myc2889 = load %object** %var_myc 
; compilenode returning %var_val_myc2889 
  store %object* %var_val_myc2889, %object** %params_0 
  %opresult2891 = call %object* @callmethod(%object* %string2888, i8* getelementptr([3 x i8]* @.str1558,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2891 
  store %object* %opresult2891, %object** %params_0 
  %opresult2893 = call %object* @callmethod(%object* %var_val_myc2887, i8* getelementptr([3 x i8]* @.str1559,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2893 
  store %object* %opresult2893, %object** %params_0 
  %opresult2895 = call %object* @callmethod(%object* %string2886, i8* getelementptr([3 x i8]* @.str1560,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2895 
  store %object* %opresult2895, %object** %params_0 
  %opresult2897 = call %object* @callmethod(%object* %var_val_creg2885, i8* getelementptr([3 x i8]* @.str1561,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2897 
  store %object* %opresult2897, %object** %params_0 
  %opresult2899 = call %object* @callmethod(%object* %string2884, i8* getelementptr([3 x i8]* @.str1562,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2899 
  store %object* %opresult2899, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2900 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1563,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2900 
; compilenode returning %call2900 
  %str2901 = getelementptr [8 x i8]* @.str1564, i32 0, i32 0 
  %string2901 = call %object* @alloc_String(i8* %str2901) 
; compilenode returning %string2901 
  %var_val_myc2902 = load %object** %var_myc 
; compilenode returning %var_val_myc2902 
  store %object* %var_val_myc2902, %object** %params_0 
  %opresult2904 = call %object* @callmethod(%object* %string2901, i8* getelementptr([3 x i8]* @.str1565,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2904 
  store %object* %opresult2904, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2905 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1566,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2905 
; compilenode returning %call2905 
  %str2906 = getelementptr [5 x i8]* @.str1567, i32 0, i32 0 
  %string2906 = call %object* @alloc_String(i8* %str2906) 
; compilenode returning %string2906 
  %var_tret = call %object** @alloc_var() 
  %var_tret_dec = getelementptr %object* %string2906, i32 0 
  store %object* %var_tret_dec, %object** %var_tret 
; compilenode returning  
  %str2907 = getelementptr [6 x i8]* @.str1568, i32 0, i32 0 
  %string2907 = call %object* @alloc_String(i8* %str2907) 
; compilenode returning %string2907 
  %var_tblock = call %object** @alloc_var() 
  %var_tblock_dec = getelementptr %object* %string2907, i32 0 
  store %object* %var_tblock_dec, %object** %var_tblock 
; compilenode returning  
  %str2908 = getelementptr [9 x i8]* @.str1569, i32 0, i32 0 
  %string2908 = call %object* @alloc_String(i8* %str2908) 
; compilenode returning %string2908 
  %var_val_myc2909 = load %object** %var_myc 
; compilenode returning %var_val_myc2909 
  %str2910 = getelementptr [44 x i8]* @.str1570, i32 0, i32 0 
  %string2910 = call %object* @alloc_String(i8* %str2910) 
; compilenode returning %string2910 
  %var_val_myc2911 = load %object** %var_myc 
; compilenode returning %var_val_myc2911 
  %str2912 = getelementptr [42 x i8]* @.str1571, i32 0, i32 0 
  %string2912 = call %object* @alloc_String(i8* %str2912) 
; compilenode returning %string2912 
  %str2913 = getelementptr [41 x i8]* @.str1572, i32 0, i32 0 
  %string2913 = call %object* @alloc_String(i8* %str2913) 
; compilenode returning %string2913 
  store %object* %string2913, %object** %params_0 
  %opresult2915 = call %object* @callmethod(%object* %string2912, i8* getelementptr([3 x i8]* @.str1573,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2915 
  store %object* %opresult2915, %object** %params_0 
  %opresult2917 = call %object* @callmethod(%object* %var_val_myc2911, i8* getelementptr([3 x i8]* @.str1574,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2917 
  store %object* %opresult2917, %object** %params_0 
  %opresult2919 = call %object* @callmethod(%object* %string2910, i8* getelementptr([3 x i8]* @.str1575,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2919 
  store %object* %opresult2919, %object** %params_0 
  %opresult2921 = call %object* @callmethod(%object* %var_val_myc2909, i8* getelementptr([3 x i8]* @.str1576,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2921 
  store %object* %opresult2921, %object** %params_0 
  %opresult2923 = call %object* @callmethod(%object* %string2908, i8* getelementptr([3 x i8]* @.str1577,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2923 
  store %object* %opresult2923, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2924 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1578,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2924 
; compilenode returning %call2924 
  %str2925 = getelementptr [25 x i8]* @.str1579, i32 0, i32 0 
  %string2925 = call %object* @alloc_String(i8* %str2925) 
; compilenode returning %string2925 
  %var_val_myc2926 = load %object** %var_myc 
; compilenode returning %var_val_myc2926 
  %str2927 = getelementptr [22 x i8]* @.str1580, i32 0, i32 0 
  %string2927 = call %object* @alloc_String(i8* %str2927) 
; compilenode returning %string2927 
  store %object* %string2927, %object** %params_0 
  %opresult2929 = call %object* @callmethod(%object* %var_val_myc2926, i8* getelementptr([3 x i8]* @.str1581,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2929 
  store %object* %opresult2929, %object** %params_0 
  %opresult2931 = call %object* @callmethod(%object* %string2925, i8* getelementptr([3 x i8]* @.str1582,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2931 
  store %object* %opresult2931, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2932 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1583,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2932 
; compilenode returning %call2932 
  %str2933 = getelementptr [38 x i8]* @.str1584, i32 0, i32 0 
  %string2933 = call %object* @alloc_String(i8* %str2933) 
; compilenode returning %string2933 
  %var_val_obj2934 = load %object** %var_obj 
; compilenode returning %var_val_obj2934 
  %str2935 = getelementptr [43 x i8]* @.str1585, i32 0, i32 0 
  %string2935 = call %object* @alloc_String(i8* %str2935) 
; compilenode returning %string2935 
  %str2936 = getelementptr [41 x i8]* @.str1586, i32 0, i32 0 
  %string2936 = call %object* @alloc_String(i8* %str2936) 
; compilenode returning %string2936 
  store %object* %string2936, %object** %params_0 
  %opresult2938 = call %object* @callmethod(%object* %string2935, i8* getelementptr([3 x i8]* @.str1587,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2938 
  store %object* %opresult2938, %object** %params_0 
  %opresult2940 = call %object* @callmethod(%object* %var_val_obj2934, i8* getelementptr([3 x i8]* @.str1588,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2940 
  store %object* %opresult2940, %object** %params_0 
  %opresult2942 = call %object* @callmethod(%object* %string2933, i8* getelementptr([3 x i8]* @.str1589,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2942 
  store %object* %opresult2942, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2943 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1590,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2943 
; compilenode returning %call2943 
  %var_val_bblock2944 = load %object** %var_bblock 
; compilenode returning %var_val_bblock2944 
  store %object* %var_val_bblock2944, %object** %var_tblock 
; compilenode returning %var_val_bblock2944 
  %str2945 = getelementptr [21 x i8]* @.str1591, i32 0, i32 0 
  %string2945 = call %object* @alloc_String(i8* %str2945) 
; compilenode returning %string2945 
  %var_val_myc2946 = load %object** %var_myc 
; compilenode returning %var_val_myc2946 
  store %object* %var_val_myc2946, %object** %params_0 
  %opresult2948 = call %object* @callmethod(%object* %string2945, i8* getelementptr([3 x i8]* @.str1592,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2948 
  store %object* %opresult2948, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2949 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1593,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2949 
; compilenode returning %call2949 
  %str2950 = getelementptr [7 x i8]* @.str1594, i32 0, i32 0 
  %string2950 = call %object* @alloc_String(i8* %str2950) 
; compilenode returning %string2950 
  %var_val_myc2951 = load %object** %var_myc 
; compilenode returning %var_val_myc2951 
  store %object* %var_val_myc2951, %object** %params_0 
  %opresult2953 = call %object* @callmethod(%object* %string2950, i8* getelementptr([3 x i8]* @.str1595,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2953 
  store %object* %opresult2953, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2954 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1596,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2954 
; compilenode returning %call2954 
; WARNING: non-local assigns not yet fully supported 
  %var_val_over2955 = load %object** %var_over 
; compilenode returning %var_val_over2955 
  store %object* %var_val_over2955, %object** %params_0 
  %var_val_o2956 = load %object** %var_o 
; compilenode returning %var_val_o2956 
  %call2957 = call %object* @callmethod(%object* %var_val_o2956, i8* getelementptr([11 x i8]* @.str1597,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2957 
; compilenode returning %call2957 
; compilenode returning %call2957 
  ret %object* %call2957 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_o2971 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call2972 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_output2980 
; got len 4 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply2998(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %str2999 = getelementptr [11 x i8]* @.str1616, i32 0, i32 0 
  %string2999 = call %object* @alloc_String(i8* %str2999) 
; compilenode returning %string2999 
  %var_val_i3000 = load %object** %var_i 
; compilenode returning %var_val_i3000 
  %str3001 = getelementptr [41 x i8]* @.str1617, i32 0, i32 0 
  %string3001 = call %object* @alloc_String(i8* %str3001) 
; compilenode returning %string3001 
  %var_val_i3002 = load %object** %var_i 
; compilenode returning %var_val_i3002 
  store %object* %var_val_i3002, %object** %params_0 
  %opresult3004 = call %object* @callmethod(%object* %string3001, i8* getelementptr([3 x i8]* @.str1618,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3004 
  store %object* %opresult3004, %object** %params_0 
  %opresult3006 = call %object* @callmethod(%object* %var_val_i3000, i8* getelementptr([3 x i8]* @.str1619,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3006 
  store %object* %opresult3006, %object** %params_0 
  %opresult3008 = call %object* @callmethod(%object* %string2999, i8* getelementptr([3 x i8]* @.str1620,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3008 
  store %object* %opresult3008, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3009 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1621,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3009 
; compilenode returning %call3009 
  ret %object* %call3009 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3013 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_p3018 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_p3032 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_declaredvars3035 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply3016(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_i = getelementptr %object*** %closure, i32 0 
  %var_i = load %object*** %varc_i 
  %varc_declaredvars = getelementptr %object*** %closure, i32 1 
  %var_declaredvars = load %object*** %varc_declaredvars 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_p = getelementptr %object** %args, i32 0 
  %str3017 = getelementptr [8 x i8]* @.str1624, i32 0, i32 0 
  %string3017 = call %object* @alloc_String(i8* %str3017) 
; compilenode returning %string3017 
  %var_val_p3018 = load %object** %var_p 
; compilenode returning %var_val_p3018 
  %call3019 = call %object* @callmethod(%object* %var_val_p3018, i8* getelementptr([6 x i8]* @.str1625,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3019 
; compilenode returning %call3019 
; compilenode returning %call3019 
  %str3020 = getelementptr [35 x i8]* @.str1626, i32 0, i32 0 
  %string3020 = call %object* @alloc_String(i8* %str3020) 
; compilenode returning %string3020 
  %str3021 = getelementptr [5 x i8]* @.str1627, i32 0, i32 0 
  %string3021 = call %object* @alloc_String(i8* %str3021) 
; compilenode returning %string3021 
  %var_val_i3022 = load %object** %var_i 
; compilenode returning %var_val_i3022 
  store %object* %var_val_i3022, %object** %params_0 
  %opresult3024 = call %object* @callmethod(%object* %string3021, i8* getelementptr([3 x i8]* @.str1628,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3024 
  store %object* %opresult3024, %object** %params_0 
  %opresult3026 = call %object* @callmethod(%object* %string3020, i8* getelementptr([3 x i8]* @.str1629,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3026 
  store %object* %opresult3026, %object** %params_0 
  %opresult3028 = call %object* @callmethod(%object* %call3019, i8* getelementptr([3 x i8]* @.str1630,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3028 
  store %object* %opresult3028, %object** %params_0 
  %opresult3030 = call %object* @callmethod(%object* %string3017, i8* getelementptr([3 x i8]* @.str1631,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3030 
  store %object* %opresult3030, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3031 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1632,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3031 
; compilenode returning %call3031 
  %var_val_p3032 = load %object** %var_p 
; compilenode returning %var_val_p3032 
  %call3033 = call %object* @callmethod(%object* %var_val_p3032, i8* getelementptr([6 x i8]* @.str1633,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3033 
; compilenode returning %call3033 
; compilenode returning %call3033 
  %var_pn = call %object** @alloc_var() 
  %var_pn_dec = getelementptr %object* %call3033, i32 0 
  store %object* %var_pn_dec, %object** %var_pn 
; compilenode returning  
  %var_val_pn3034 = load %object** %var_pn 
; compilenode returning %var_val_pn3034 
  store %object* %var_val_pn3034, %object** %params_0 
  %var_val_declaredvars3035 = load %object** %var_declaredvars 
; compilenode returning %var_val_declaredvars3035 
  %call3036 = call %object* @callmethod(%object* %var_val_declaredvars3035, i8* getelementptr([5 x i8]* @.str1634,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3036 
; compilenode returning %call3036 
  %var_val_i3037 = load %object** %var_i 
; compilenode returning %var_val_i3037 
  %num3038 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3038 
  store %object* %num3038, %object** %params_0 
  %sum3040 = call %object* @callmethod(%object* %var_val_i3037, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3040 
  store %object* %sum3040, %object** %var_i 
; compilenode returning %sum3040 
  ret %object* %sum3040 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3044 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply3047(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_ret = getelementptr %object*** %closure, i32 0 
  %var_ret = load %object*** %varc_ret 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_l = getelementptr %object** %args, i32 0 
  %var_val_l3048 = load %object** %var_l 
; compilenode returning %var_val_l3048 
  store %object* %var_val_l3048, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3049 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1638,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3049 
; compilenode returning %call3049 
  store %object* %call3049, %object** %var_ret 
; compilenode returning %call3049 
  ret %object* %call3049 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply3069(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_u = getelementptr %object*** %closure, i32 0 
  %var_u = load %object*** %varc_u 
  %varc_decl = getelementptr %object*** %closure, i32 1 
  %var_decl = load %object*** %varc_decl 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_d = getelementptr %object** %args, i32 0 
  br label %BeginIf3070 
BeginIf3070: 
  %var_val_d3071 = load %object** %var_d 
; compilenode returning %var_val_d3071 
  %var_val_u3072 = load %object** %var_u 
; compilenode returning %var_val_u3072 
  store %object* %var_val_u3072, %object** %params_0 
  %opresult3074 = call %object* @callmethod(%object* %var_val_d3071, i8* getelementptr([3 x i8]* @.str1645,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3074 
  %cond3070_valp = call i1 @istrue(%object* %opresult3074) 
  %cond3070 = icmp eq i1 0, %cond3070_valp 
br i1 %cond3070, label %EndIf3070, label %TrueBranch3070 
TrueBranch3070: 
  %num3075 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3075 
  store %object* %num3075, %object** %var_decl 
; compilenode returning %num3075 
  br label %EndIf3070 
EndIf3070: 
  %if3070 = phi %object* [ %num3075, %TrueBranch3070], [%opresult3074, %BeginIf3070] 
; compilenode returning %if3070 
  ret %object* %if3070 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply3084(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_u = getelementptr %object*** %closure, i32 0 
  %var_u = load %object*** %varc_u 
  %varc_found = getelementptr %object*** %closure, i32 1 
  %var_found = load %object*** %varc_found 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_v = getelementptr %object** %args, i32 0 
  br label %BeginIf3085 
BeginIf3085: 
  %var_val_v3086 = load %object** %var_v 
; compilenode returning %var_val_v3086 
  %var_val_u3087 = load %object** %var_u 
; compilenode returning %var_val_u3087 
  store %object* %var_val_u3087, %object** %params_0 
  %opresult3089 = call %object* @callmethod(%object* %var_val_v3086, i8* getelementptr([3 x i8]* @.str1647,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3089 
  %cond3085_valp = call i1 @istrue(%object* %opresult3089) 
  %cond3085 = icmp eq i1 0, %cond3085_valp 
br i1 %cond3085, label %EndIf3085, label %TrueBranch3085 
TrueBranch3085: 
  %num3090 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3090 
  store %object* %num3090, %object** %var_found 
; compilenode returning %num3090 
  br label %EndIf3085 
EndIf3085: 
  %if3085 = phi %object* [ %num3090, %TrueBranch3085], [%opresult3089, %BeginIf3085] 
; compilenode returning %if3085 
  ret %object* %if3085 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_closurevars3096 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply3064(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_declaredvars = getelementptr %object*** %closure, i32 0 
  %var_declaredvars = load %object*** %varc_declaredvars 
  %varc_closurevars = getelementptr %object*** %closure, i32 1 
  %var_closurevars = load %object*** %varc_closurevars 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_u = getelementptr %object** %args, i32 0 
  %bool3065 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool3065 
  %var_decl = call %object** @alloc_var() 
  %var_decl_dec = getelementptr %object* %bool3065, i32 0 
  store %object* %var_decl_dec, %object** %var_decl 
; compilenode returning  
  %var_val_declaredvars3067 = load %object** %var_declaredvars 
; compilenode returning %var_val_declaredvars3067 
  %obj3068 = call %object* @alloc_obj() 
  %closure3069 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure3069, %object** %var_u) 
  call void @addtoclosure(%object*** %closure3069, %object** %var_decl) 
  %selfpp3076 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3076 
  call void @addtoclosure(%object*** %closure3069, %object** %selfpp3076) 
  call void @addclosuremethod(%object* %obj3068, i8* getelementptr([6 x i8]* @.str.methname3069, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3069), %object*** %closure3069) 
; compilenode returning %obj3068 
  store %object* %var_val_declaredvars3067, %object** %params_0 
  %iter3066 = call %object* @callmethod(%object* %var_val_declaredvars3067, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3066 
BeginFor3066: 
  %condobj3066 = call %object* @callmethod(%object* %iter3066, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3066_valp = call i1 @istrue(%object* %condobj3066) 
  %cond3066 = icmp eq i1 0, %cond3066_valp 
br i1 %cond3066, label %EndFor3066, label %ForBody3066 
ForBody3066: 
 %forval3066 = call %object* @callmethod(%object* %iter3066, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3066, %object** %params_0 
  call %object* @callmethod(%object* %obj3068, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3066 
EndFor3066: 
; compilenode returning %var_val_declaredvars3067 
  br label %BeginIf3077 
BeginIf3077: 
  %var_val_decl3078 = load %object** %var_decl 
; compilenode returning %var_val_decl3078 
  %cond3077_valp = call i1 @istrue(%object* %var_val_decl3078) 
  %cond3077 = icmp eq i1 0, %cond3077_valp 
br i1 %cond3077, label %FalseBranch3077, label %TrueBranch3077 
TrueBranch3077: 
  %var_val_decl3079 = load %object** %var_decl 
; compilenode returning %var_val_decl3079 
  store %object* %var_val_decl3079, %object** %var_decl 
; compilenode returning %var_val_decl3079 
  br label %EndIf3077 
FalseBranch3077: 
  %bool3080 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool3080 
  %var_found = call %object** @alloc_var() 
  %var_found_dec = getelementptr %object* %bool3080, i32 0 
  store %object* %var_found_dec, %object** %var_found 
; compilenode returning  
  %var_val_closurevars3082 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3082 
  %obj3083 = call %object* @alloc_obj() 
  %closure3084 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure3084, %object** %var_u) 
  call void @addtoclosure(%object*** %closure3084, %object** %var_found) 
  %selfpp3091 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3091 
  call void @addtoclosure(%object*** %closure3084, %object** %selfpp3091) 
  call void @addclosuremethod(%object* %obj3083, i8* getelementptr([6 x i8]* @.str.methname3084, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3084), %object*** %closure3084) 
; compilenode returning %obj3083 
  store %object* %var_val_closurevars3082, %object** %params_0 
  %iter3081 = call %object* @callmethod(%object* %var_val_closurevars3082, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3081 
BeginFor3081: 
  %condobj3081 = call %object* @callmethod(%object* %iter3081, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3081_valp = call i1 @istrue(%object* %condobj3081) 
  %cond3081 = icmp eq i1 0, %cond3081_valp 
br i1 %cond3081, label %EndFor3081, label %ForBody3081 
ForBody3081: 
 %forval3081 = call %object* @callmethod(%object* %iter3081, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3081, %object** %params_0 
  call %object* @callmethod(%object* %obj3083, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3081 
EndFor3081: 
; compilenode returning %var_val_closurevars3082 
  br label %BeginIf3092 
BeginIf3092: 
  %var_val_found3093 = load %object** %var_found 
; compilenode returning %var_val_found3093 
  %cond3092_valp = call i1 @istrue(%object* %var_val_found3093) 
  %cond3092 = icmp eq i1 0, %cond3092_valp 
br i1 %cond3092, label %FalseBranch3092, label %TrueBranch3092 
TrueBranch3092: 
  %var_val_found3094 = load %object** %var_found 
; compilenode returning %var_val_found3094 
  store %object* %var_val_found3094, %object** %var_found 
; compilenode returning %var_val_found3094 
  br label %EndIf3092 
FalseBranch3092: 
  %var_val_u3095 = load %object** %var_u 
; compilenode returning %var_val_u3095 
  store %object* %var_val_u3095, %object** %params_0 
  %var_val_closurevars3096 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3096 
  %call3097 = call %object* @callmethod(%object* %var_val_closurevars3096, i8* getelementptr([5 x i8]* @.str1649,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3097 
; compilenode returning %call3097 
  br label %EndIf3092 
EndIf3092: 
  %if3092 = phi %object* [ %var_val_found3094, %TrueBranch3092], [%call3097, %FalseBranch3092] 
; compilenode returning %if3092 
  br label %EndIf3077 
EndIf3077: 
  %if3077 = phi %object* [ %var_val_decl3079, %TrueBranch3077], [%if3092, %EndIf3092] 
; compilenode returning %if3077 
  ret %object* %if3077 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3100 
; got len 12 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_closurevars3103 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_closurevars3111 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_closurevars3117 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3123 
; got len 12 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply3164(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_j = getelementptr %object*** %closure, i32 0 
  %var_j = load %object*** %varc_j 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_cv = getelementptr %object** %args, i32 0 
  br label %BeginIf3165 
BeginIf3165: 
  %var_val_cv3166 = load %object** %var_cv 
; compilenode returning %var_val_cv3166 
  %str3167 = getelementptr [5 x i8]* @.str1686, i32 0, i32 0 
  %string3167 = call %object* @alloc_String(i8* %str3167) 
; compilenode returning %string3167 
  store %object* %string3167, %object** %params_0 
  %opresult3169 = call %object* @callmethod(%object* %var_val_cv3166, i8* getelementptr([3 x i8]* @.str1687,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3169 
  %cond3165_valp = call i1 @istrue(%object* %opresult3169) 
  %cond3165 = icmp eq i1 0, %cond3165_valp 
br i1 %cond3165, label %FalseBranch3165, label %TrueBranch3165 
TrueBranch3165: 
  %str3170 = getelementptr [9 x i8]* @.str1688, i32 0, i32 0 
  %string3170 = call %object* @alloc_String(i8* %str3170) 
; compilenode returning %string3170 
  %var_val_cv3171 = load %object** %var_cv 
; compilenode returning %var_val_cv3171 
  %str3172 = getelementptr [43 x i8]* @.str1689, i32 0, i32 0 
  %string3172 = call %object* @alloc_String(i8* %str3172) 
; compilenode returning %string3172 
  %var_val_j3173 = load %object** %var_j 
; compilenode returning %var_val_j3173 
  store %object* %var_val_j3173, %object** %params_0 
  %opresult3175 = call %object* @callmethod(%object* %string3172, i8* getelementptr([3 x i8]* @.str1690,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3175 
  store %object* %opresult3175, %object** %params_0 
  %opresult3177 = call %object* @callmethod(%object* %var_val_cv3171, i8* getelementptr([3 x i8]* @.str1691,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3177 
  store %object* %opresult3177, %object** %params_0 
  %opresult3179 = call %object* @callmethod(%object* %string3170, i8* getelementptr([3 x i8]* @.str1692,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3179 
  store %object* %opresult3179, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3180 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1693,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3180 
; compilenode returning %call3180 
  %str3181 = getelementptr [34 x i8]* @.str1694, i32 0, i32 0 
  %string3181 = call %object* @alloc_String(i8* %str3181) 
; compilenode returning %string3181 
  %var_val_cv3182 = load %object** %var_cv 
; compilenode returning %var_val_cv3182 
  store %object* %var_val_cv3182, %object** %params_0 
  %opresult3184 = call %object* @callmethod(%object* %string3181, i8* getelementptr([3 x i8]* @.str1695,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3184 
  store %object* %opresult3184, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3185 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1696,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3185 
; compilenode returning %call3185 
  %str3186 = getelementptr [32 x i8]* @.str1697, i32 0, i32 0 
  %string3186 = call %object* @alloc_String(i8* %str3186) 
; compilenode returning %string3186 
  store %object* %string3186, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3187 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1698,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3187 
; compilenode returning %call3187 
  br label %EndIf3165 
FalseBranch3165: 
  %str3188 = getelementptr [9 x i8]* @.str1699, i32 0, i32 0 
  %string3188 = call %object* @alloc_String(i8* %str3188) 
; compilenode returning %string3188 
  %var_val_cv3189 = load %object** %var_cv 
; compilenode returning %var_val_cv3189 
  %str3190 = getelementptr [43 x i8]* @.str1700, i32 0, i32 0 
  %string3190 = call %object* @alloc_String(i8* %str3190) 
; compilenode returning %string3190 
  %var_val_j3191 = load %object** %var_j 
; compilenode returning %var_val_j3191 
  store %object* %var_val_j3191, %object** %params_0 
  %opresult3193 = call %object* @callmethod(%object* %string3190, i8* getelementptr([3 x i8]* @.str1701,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3193 
  store %object* %opresult3193, %object** %params_0 
  %opresult3195 = call %object* @callmethod(%object* %var_val_cv3189, i8* getelementptr([3 x i8]* @.str1702,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3195 
  store %object* %opresult3195, %object** %params_0 
  %opresult3197 = call %object* @callmethod(%object* %string3188, i8* getelementptr([3 x i8]* @.str1703,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3197 
  store %object* %opresult3197, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3198 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1704,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3198 
; compilenode returning %call3198 
  %str3199 = getelementptr [8 x i8]* @.str1705, i32 0, i32 0 
  %string3199 = call %object* @alloc_String(i8* %str3199) 
; compilenode returning %string3199 
  %var_val_cv3200 = load %object** %var_cv 
; compilenode returning %var_val_cv3200 
  %str3201 = getelementptr [26 x i8]* @.str1706, i32 0, i32 0 
  %string3201 = call %object* @alloc_String(i8* %str3201) 
; compilenode returning %string3201 
  %var_val_cv3202 = load %object** %var_cv 
; compilenode returning %var_val_cv3202 
  store %object* %var_val_cv3202, %object** %params_0 
  %opresult3204 = call %object* @callmethod(%object* %string3201, i8* getelementptr([3 x i8]* @.str1707,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3204 
  store %object* %opresult3204, %object** %params_0 
  %opresult3206 = call %object* @callmethod(%object* %var_val_cv3200, i8* getelementptr([3 x i8]* @.str1708,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3206 
  store %object* %opresult3206, %object** %params_0 
  %opresult3208 = call %object* @callmethod(%object* %string3199, i8* getelementptr([3 x i8]* @.str1709,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3208 
  store %object* %opresult3208, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3209 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1710,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3209 
; compilenode returning %call3209 
  br label %EndIf3165 
EndIf3165: 
  %if3165 = phi %object* [ %call3187, %TrueBranch3165], [%call3209, %FalseBranch3165] 
; compilenode returning %if3165 
  %var_val_j3210 = load %object** %var_j 
; compilenode returning %var_val_j3210 
  %num3211 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3211 
  store %object* %num3211, %object** %params_0 
  %sum3213 = call %object* @callmethod(%object* %var_val_j3210, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3213 
  store %object* %sum3213, %object** %var_j 
; compilenode returning %sum3213 
  ret %object* %sum3213 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply3218(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_l = getelementptr %object** %args, i32 0 
  %var_val_l3219 = load %object** %var_l 
; compilenode returning %var_val_l3219 
  store %object* %var_val_l3219, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3220 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1712,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3220 
; compilenode returning %call3220 
  ret %object* %call3220 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply3227(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_l = getelementptr %object** %args, i32 0 
  %var_val_l3228 = load %object** %var_l 
; compilenode returning %var_val_l3228 
  store %object* %var_val_l3228, %object** %params_0 
  %call3229 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call3229 
  ret %object* %call3229 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_constants3263 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_closurevars3266 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_closurevars3306 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 3 
define %object* @meth_apply3321(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_myc = getelementptr %object*** %closure, i32 1 
  %var_myc = load %object*** %varc_myc 
  %varc_self = getelementptr %object*** %closure, i32 2 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_v = getelementptr %object** %args, i32 0 
  br label %BeginIf3322 
BeginIf3322: 
  %var_val_v3323 = load %object** %var_v 
; compilenode returning %var_val_v3323 
  %str3324 = getelementptr [5 x i8]* @.str1759, i32 0, i32 0 
  %string3324 = call %object* @alloc_String(i8* %str3324) 
; compilenode returning %string3324 
  store %object* %string3324, %object** %params_0 
  %opresult3326 = call %object* @callmethod(%object* %var_val_v3323, i8* getelementptr([3 x i8]* @.str1760,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3326 
  %cond3322_valp = call i1 @istrue(%object* %opresult3326) 
  %cond3322 = icmp eq i1 0, %cond3322_valp 
br i1 %cond3322, label %FalseBranch3322, label %TrueBranch3322 
TrueBranch3322: 
  %str3327 = getelementptr [10 x i8]* @.str1761, i32 0, i32 0 
  %string3327 = call %object* @alloc_String(i8* %str3327) 
; compilenode returning %string3327 
  %var_val_auto_count3328 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3328 
  %str3329 = getelementptr [4 x i8]* @.str1762, i32 0, i32 0 
  %string3329 = call %object* @alloc_String(i8* %str3329) 
; compilenode returning %string3329 
  %str3330 = getelementptr [28 x i8]* @.str1763, i32 0, i32 0 
  %string3330 = call %object* @alloc_String(i8* %str3330) 
; compilenode returning %string3330 
  store %object* %string3330, %object** %params_0 
  %opresult3332 = call %object* @callmethod(%object* %string3329, i8* getelementptr([3 x i8]* @.str1764,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3332 
  store %object* %opresult3332, %object** %params_0 
  %opresult3334 = call %object* @callmethod(%object* %var_val_auto_count3328, i8* getelementptr([3 x i8]* @.str1765,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3334 
  store %object* %opresult3334, %object** %params_0 
  %opresult3336 = call %object* @callmethod(%object* %string3327, i8* getelementptr([3 x i8]* @.str1766,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3336 
  store %object* %opresult3336, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3337 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1767,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3337 
; compilenode returning %call3337 
  %str3338 = getelementptr [42 x i8]* @.str1768, i32 0, i32 0 
  %string3338 = call %object* @alloc_String(i8* %str3338) 
; compilenode returning %string3338 
  %var_val_auto_count3339 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3339 
  store %object* %var_val_auto_count3339, %object** %params_0 
  %opresult3341 = call %object* @callmethod(%object* %string3338, i8* getelementptr([3 x i8]* @.str1769,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3341 
  store %object* %opresult3341, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3342 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1770,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3342 
; compilenode returning %call3342 
  %str3343 = getelementptr [46 x i8]* @.str1771, i32 0, i32 0 
  %string3343 = call %object* @alloc_String(i8* %str3343) 
; compilenode returning %string3343 
  %var_val_myc3344 = load %object** %var_myc 
; compilenode returning %var_val_myc3344 
  %str3345 = getelementptr [3 x i8]* @.str1772, i32 0, i32 0 
  %string3345 = call %object* @alloc_String(i8* %str3345) 
; compilenode returning %string3345 
  %str3346 = getelementptr [18 x i8]* @.str1773, i32 0, i32 0 
  %string3346 = call %object* @alloc_String(i8* %str3346) 
; compilenode returning %string3346 
  %var_val_auto_count3347 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3347 
  %str3348 = getelementptr [2 x i8]* @.str1774, i32 0, i32 0 
  %string3348 = call %object* @alloc_String(i8* %str3348) 
; compilenode returning %string3348 
  store %object* %string3348, %object** %params_0 
  %opresult3350 = call %object* @callmethod(%object* %var_val_auto_count3347, i8* getelementptr([3 x i8]* @.str1775,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3350 
  store %object* %opresult3350, %object** %params_0 
  %opresult3352 = call %object* @callmethod(%object* %string3346, i8* getelementptr([3 x i8]* @.str1776,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3352 
  store %object* %opresult3352, %object** %params_0 
  %opresult3354 = call %object* @callmethod(%object* %string3345, i8* getelementptr([3 x i8]* @.str1777,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3354 
  store %object* %opresult3354, %object** %params_0 
  %opresult3356 = call %object* @callmethod(%object* %var_val_myc3344, i8* getelementptr([3 x i8]* @.str1778,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3356 
  store %object* %opresult3356, %object** %params_0 
  %opresult3358 = call %object* @callmethod(%object* %string3343, i8* getelementptr([3 x i8]* @.str1779,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3358 
  store %object* %opresult3358, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3359 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1780,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3359 
; compilenode returning %call3359 
  %var_val_auto_count3360 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3360 
  %num3361 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3361 
  store %object* %num3361, %object** %params_0 
  %sum3363 = call %object* @callmethod(%object* %var_val_auto_count3360, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3363 
  store %object* %sum3363, %object** %var_auto_count 
; compilenode returning %sum3363 
  br label %EndIf3322 
FalseBranch3322: 
  %str3364 = getelementptr [46 x i8]* @.str1781, i32 0, i32 0 
  %string3364 = call %object* @alloc_String(i8* %str3364) 
; compilenode returning %string3364 
  %var_val_myc3365 = load %object** %var_myc 
; compilenode returning %var_val_myc3365 
  %str3366 = getelementptr [3 x i8]* @.str1782, i32 0, i32 0 
  %string3366 = call %object* @alloc_String(i8* %str3366) 
; compilenode returning %string3366 
  %str3367 = getelementptr [16 x i8]* @.str1783, i32 0, i32 0 
  %string3367 = call %object* @alloc_String(i8* %str3367) 
; compilenode returning %string3367 
  %var_val_v3368 = load %object** %var_v 
; compilenode returning %var_val_v3368 
  %str3369 = getelementptr [2 x i8]* @.str1784, i32 0, i32 0 
  %string3369 = call %object* @alloc_String(i8* %str3369) 
; compilenode returning %string3369 
  store %object* %string3369, %object** %params_0 
  %opresult3371 = call %object* @callmethod(%object* %var_val_v3368, i8* getelementptr([3 x i8]* @.str1785,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3371 
  store %object* %opresult3371, %object** %params_0 
  %opresult3373 = call %object* @callmethod(%object* %string3367, i8* getelementptr([3 x i8]* @.str1786,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3373 
  store %object* %opresult3373, %object** %params_0 
  %opresult3375 = call %object* @callmethod(%object* %string3366, i8* getelementptr([3 x i8]* @.str1787,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3375 
  store %object* %opresult3375, %object** %params_0 
  %opresult3377 = call %object* @callmethod(%object* %var_val_myc3365, i8* getelementptr([3 x i8]* @.str1788,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3377 
  store %object* %opresult3377, %object** %params_0 
  %opresult3379 = call %object* @callmethod(%object* %string3364, i8* getelementptr([3 x i8]* @.str1789,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3379 
  store %object* %opresult3379, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3380 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1790,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3380 
; compilenode returning %call3380 
  br label %EndIf3322 
EndIf3322: 
  %if3322 = phi %object* [ %sum3363, %TrueBranch3322], [%call3380, %FalseBranch3322] 
; compilenode returning %if3322 
  ret %object* %if3322 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: compilemethod 
; have closure method: 6 
define %object* @meth_compilemethod2958(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_output = getelementptr %object*** %closure, i32 0 
  %var_output = load %object*** %varc_output 
  %varc_bblock = getelementptr %object*** %closure, i32 1 
  %var_bblock = load %object*** %varc_bblock 
  %varc_usedvars = getelementptr %object*** %closure, i32 2 
  %var_usedvars = load %object*** %varc_usedvars 
  %varc_declaredvars = getelementptr %object*** %closure, i32 3 
  %var_declaredvars = load %object*** %varc_declaredvars 
  %varc_auto_count = getelementptr %object*** %closure, i32 4 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_constants = getelementptr %object*** %closure, i32 5 
  %var_constants = load %object*** %varc_constants 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_selfobj = getelementptr %object** %args, i32 1 
  %var_val_output2959 = load %object** %var_output 
; compilenode returning %var_val_output2959 
  %var_oldout = call %object** @alloc_var() 
  %var_oldout_dec = getelementptr %object* %var_val_output2959, i32 0 
  store %object* %var_oldout_dec, %object** %var_oldout 
; compilenode returning  
  %var_val_bblock2960 = load %object** %var_bblock 
; compilenode returning %var_val_bblock2960 
  %var_oldbblock = call %object** @alloc_var() 
  %var_oldbblock_dec = getelementptr %object* %var_val_bblock2960, i32 0 
  store %object* %var_oldbblock_dec, %object** %var_oldbblock 
; compilenode returning  
  %var_val_usedvars2961 = load %object** %var_usedvars 
; compilenode returning %var_val_usedvars2961 
  %var_oldusedvars = call %object** @alloc_var() 
  %var_oldusedvars_dec = getelementptr %object* %var_val_usedvars2961, i32 0 
  store %object* %var_oldusedvars_dec, %object** %var_oldusedvars 
; compilenode returning  
  %var_val_declaredvars2962 = load %object** %var_declaredvars 
; compilenode returning %var_val_declaredvars2962 
  %var_olddeclaredvars = call %object** @alloc_var() 
  %var_olddeclaredvars_dec = getelementptr %object* %var_val_declaredvars2962, i32 0 
  store %object* %var_olddeclaredvars_dec, %object** %var_olddeclaredvars 
; compilenode returning  
  %array2963 = call %object* @alloc_Array() 
; compilenode returning %array2963 
  store %object* %array2963, %object** %var_output 
; compilenode returning %array2963 
  %array2964 = call %object* @alloc_Array() 
; compilenode returning %array2964 
  store %object* %array2964, %object** %var_usedvars 
; compilenode returning %array2964 
  %array2965 = call %object* @alloc_Array() 
; compilenode returning %array2965 
  store %object* %array2965, %object** %var_declaredvars 
; compilenode returning %array2965 
  %var_val_auto_count2966 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2966 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count2966, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count2967 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count2967 
  %num2968 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2968 
  store %object* %num2968, %object** %params_0 
  %sum2970 = call %object* @callmethod(%object* %var_val_auto_count2967, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2970 
  store %object* %sum2970, %object** %var_auto_count 
; compilenode returning %sum2970 
  %var_val_o2971 = load %object** %var_o 
; compilenode returning %var_val_o2971 
  %call2972 = call %object* @callmethod(%object* %var_val_o2971, i8* getelementptr([6 x i8]* @.str1599,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2972 
; compilenode returning %call2972 
; compilenode returning %call2972 
  %call2973 = call %object* @callmethod(%object* %call2972, i8* getelementptr([6 x i8]* @.str1600,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2973 
; compilenode returning %call2973 
; compilenode returning %call2973 
  %var_name = call %object** @alloc_var() 
  %var_name_dec = getelementptr %object* %call2973, i32 0 
  store %object* %var_name_dec, %object** %var_name 
; compilenode returning  
  %var_val_name2974 = load %object** %var_name 
; compilenode returning %var_val_name2974 
  %var_val_myc2975 = load %object** %var_myc 
; compilenode returning %var_val_myc2975 
  store %object* %var_val_myc2975, %object** %params_0 
  %opresult2977 = call %object* @callmethod(%object* %var_val_name2974, i8* getelementptr([3 x i8]* @.str1601,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2977 
  %var_nm = call %object** @alloc_var() 
  %var_nm_dec = getelementptr %object* %opresult2977, i32 0 
  store %object* %var_nm_dec, %object** %var_nm 
; compilenode returning  
  %str2978 = getelementptr [6 x i8]* @.str1602, i32 0, i32 0 
  %string2978 = call %object* @alloc_String(i8* %str2978) 
; compilenode returning %string2978 
  store %object* %string2978, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2979 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1603,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2979 
; compilenode returning %call2979 
  %var_val_output2980 = load %object** %var_output 
; compilenode returning %var_val_output2980 
  %call2981 = call %object* @callmethod(%object* %var_val_output2980, i8* getelementptr([4 x i8]* @.str1604,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2981 
; compilenode returning %call2981 
  %str2982 = getelementptr [51 x i8]* @.str1605, i32 0, i32 0 
  %string2982 = call %object* @alloc_String(i8* %str2982) 
; compilenode returning %string2982 
  store %object* %string2982, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2983 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1606,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2983 
; compilenode returning %call2983 
  %str2984 = getelementptr [50 x i8]* @.str1607, i32 0, i32 0 
  %string2984 = call %object* @alloc_String(i8* %str2984) 
; compilenode returning %string2984 
  store %object* %string2984, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2985 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1608,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2985 
; compilenode returning %call2985 
  %str2986 = getelementptr [37 x i8]* @.str1609, i32 0, i32 0 
  %string2986 = call %object* @alloc_String(i8* %str2986) 
; compilenode returning %string2986 
  store %object* %string2986, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2987 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1610,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2987 
; compilenode returning %call2987 
  %str2988 = getelementptr [47 x i8]* @.str1611, i32 0, i32 0 
  %string2988 = call %object* @alloc_String(i8* %str2988) 
; compilenode returning %string2988 
  store %object* %string2988, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2989 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1612,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2989 
; compilenode returning %call2989 
  %str2990 = getelementptr [46 x i8]* @.str1613, i32 0, i32 0 
  %string2990 = call %object* @alloc_String(i8* %str2990) 
; compilenode returning %string2990 
  store %object* %string2990, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2991 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1614,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2991 
; compilenode returning %call2991 
  %num2993 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2993 
  %num2994 = call %object* @alloc_Float64(double 10.0) 
; compilenode returning %num2994 
  store %object* %num2994, %object** %params_0 
  %opresult2996 = call %object* @callmethod(%object* %num2993, i8* getelementptr([3 x i8]* @.str1615,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2996 
  %obj2997 = call %object* @alloc_obj() 
  %closure2998 = call %object*** @createclosure(i32 1) 
  %selfpp3010 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3010 
  call void @addtoclosure(%object*** %closure2998, %object** %selfpp3010) 
  call void @addclosuremethod(%object* %obj2997, i8* getelementptr([6 x i8]* @.str.methname2998, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2998), %object*** %closure2998) 
; compilenode returning %obj2997 
  store %object* %opresult2996, %object** %params_0 
  %iter2992 = call %object* @callmethod(%object* %opresult2996, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2992 
BeginFor2992: 
  %condobj2992 = call %object* @callmethod(%object* %iter2992, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2992_valp = call i1 @istrue(%object* %condobj2992) 
  %cond2992 = icmp eq i1 0, %cond2992_valp 
br i1 %cond2992, label %EndFor2992, label %ForBody2992 
ForBody2992: 
 %forval2992 = call %object* @callmethod(%object* %iter2992, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2992, %object** %params_0 
  call %object* @callmethod(%object* %obj2997, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2992 
EndFor2992: 
; compilenode returning %opresult2996 
  %num3011 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3011 
  %var_i = call %object** @alloc_var() 
  %var_i_dec = getelementptr %object* %num3011, i32 0 
  store %object* %var_i_dec, %object** %var_i 
; compilenode returning  
  %var_val_o3013 = load %object** %var_o 
; compilenode returning %var_val_o3013 
  %call3014 = call %object* @callmethod(%object* %var_val_o3013, i8* getelementptr([7 x i8]* @.str1623,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3014 
; compilenode returning %call3014 
; compilenode returning %call3014 
  %obj3015 = call %object* @alloc_obj() 
  %closure3016 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure3016, %object** %var_i) 
  call void @addtoclosure(%object*** %closure3016, %object** %var_declaredvars) 
  %selfpp3041 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3041 
  call void @addtoclosure(%object*** %closure3016, %object** %selfpp3041) 
  call void @addclosuremethod(%object* %obj3015, i8* getelementptr([6 x i8]* @.str.methname3016, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3016), %object*** %closure3016) 
; compilenode returning %obj3015 
  store %object* %call3014, %object** %params_0 
  %iter3012 = call %object* @callmethod(%object* %call3014, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3012 
BeginFor3012: 
  %condobj3012 = call %object* @callmethod(%object* %iter3012, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3012_valp = call i1 @istrue(%object* %condobj3012) 
  %cond3012 = icmp eq i1 0, %cond3012_valp 
br i1 %cond3012, label %EndFor3012, label %ForBody3012 
ForBody3012: 
 %forval3012 = call %object* @callmethod(%object* %iter3012, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3012, %object** %params_0 
  call %object* @callmethod(%object* %obj3015, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3012 
EndFor3012: 
; compilenode returning %call3014 
  %str3042 = getelementptr [5 x i8]* @.str1636, i32 0, i32 0 
  %string3042 = call %object* @alloc_String(i8* %str3042) 
; compilenode returning %string3042 
  %var_ret = call %object** @alloc_var() 
  %var_ret_dec = getelementptr %object* %string3042, i32 0 
  store %object* %var_ret_dec, %object** %var_ret 
; compilenode returning  
  %var_val_o3044 = load %object** %var_o 
; compilenode returning %var_val_o3044 
  %call3045 = call %object* @callmethod(%object* %var_val_o3044, i8* getelementptr([5 x i8]* @.str1637,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3045 
; compilenode returning %call3045 
; compilenode returning %call3045 
  %obj3046 = call %object* @alloc_obj() 
  %closure3047 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3047, %object** %var_ret) 
  %selfpp3050 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3050 
  call void @addtoclosure(%object*** %closure3047, %object** %selfpp3050) 
  call void @addclosuremethod(%object* %obj3046, i8* getelementptr([6 x i8]* @.str.methname3047, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3047), %object*** %closure3047) 
; compilenode returning %obj3046 
  store %object* %call3045, %object** %params_0 
  %iter3043 = call %object* @callmethod(%object* %call3045, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3043 
BeginFor3043: 
  %condobj3043 = call %object* @callmethod(%object* %iter3043, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3043_valp = call i1 @istrue(%object* %condobj3043) 
  %cond3043 = icmp eq i1 0, %cond3043_valp 
br i1 %cond3043, label %EndFor3043, label %ForBody3043 
ForBody3043: 
 %forval3043 = call %object* @callmethod(%object* %iter3043, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3043, %object** %params_0 
  call %object* @callmethod(%object* %obj3046, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3043 
EndFor3043: 
; compilenode returning %call3045 
  %str3051 = getelementptr [16 x i8]* @.str1640, i32 0, i32 0 
  %string3051 = call %object* @alloc_String(i8* %str3051) 
; compilenode returning %string3051 
  %var_val_ret3052 = load %object** %var_ret 
; compilenode returning %var_val_ret3052 
  store %object* %var_val_ret3052, %object** %params_0 
  %opresult3054 = call %object* @callmethod(%object* %string3051, i8* getelementptr([3 x i8]* @.str1641,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3054 
  store %object* %opresult3054, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3055 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1642,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3055 
; compilenode returning %call3055 
  %str3056 = getelementptr [2 x i8]* @.str1643, i32 0, i32 0 
  %string3056 = call %object* @alloc_String(i8* %str3056) 
; compilenode returning %string3056 
  store %object* %string3056, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3057 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1644,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3057 
; compilenode returning %call3057 
  %var_val_output3058 = load %object** %var_output 
; compilenode returning %var_val_output3058 
  %var_body = call %object** @alloc_var() 
  %var_body_dec = getelementptr %object* %var_val_output3058, i32 0 
  store %object* %var_body_dec, %object** %var_body 
; compilenode returning  
  %array3059 = call %object* @alloc_Array() 
; compilenode returning %array3059 
  store %object* %array3059, %object** %var_output 
; compilenode returning %array3059 
  %array3060 = call %object* @alloc_Array() 
; compilenode returning %array3060 
  %var_closurevars = call %object** @alloc_var() 
  %var_closurevars_dec = getelementptr %object* %array3060, i32 0 
  store %object* %var_closurevars_dec, %object** %var_closurevars 
; compilenode returning  
  %var_val_usedvars3062 = load %object** %var_usedvars 
; compilenode returning %var_val_usedvars3062 
  %obj3063 = call %object* @alloc_obj() 
  %closure3064 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure3064, %object** %var_declaredvars) 
  call void @addtoclosure(%object*** %closure3064, %object** %var_closurevars) 
  %selfpp3098 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3098 
  call void @addtoclosure(%object*** %closure3064, %object** %selfpp3098) 
  call void @addclosuremethod(%object* %obj3063, i8* getelementptr([6 x i8]* @.str.methname3064, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3064), %object*** %closure3064) 
; compilenode returning %obj3063 
  store %object* %var_val_usedvars3062, %object** %params_0 
  %iter3061 = call %object* @callmethod(%object* %var_val_usedvars3062, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3061 
BeginFor3061: 
  %condobj3061 = call %object* @callmethod(%object* %iter3061, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3061_valp = call i1 @istrue(%object* %condobj3061) 
  %cond3061 = icmp eq i1 0, %cond3061_valp 
br i1 %cond3061, label %EndFor3061, label %ForBody3061 
ForBody3061: 
 %forval3061 = call %object* @callmethod(%object* %iter3061, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3061, %object** %params_0 
  call %object* @callmethod(%object* %obj3063, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3061 
EndFor3061: 
; compilenode returning %var_val_usedvars3062 
  br label %BeginIf3099 
BeginIf3099: 
  %var_val_o3100 = load %object** %var_o 
; compilenode returning %var_val_o3100 
  %call3101 = call %object* @callmethod(%object* %var_val_o3100, i8* getelementptr([12 x i8]* @.str1651,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3101 
; compilenode returning %call3101 
; compilenode returning %call3101 
  %cond3099_valp = call i1 @istrue(%object* %call3101) 
  %cond3099 = icmp eq i1 0, %cond3099_valp 
br i1 %cond3099, label %EndIf3099, label %TrueBranch3099 
TrueBranch3099: 
  %str3102 = getelementptr [5 x i8]* @.str1652, i32 0, i32 0 
  %string3102 = call %object* @alloc_String(i8* %str3102) 
; compilenode returning %string3102 
  store %object* %string3102, %object** %params_0 
  %var_val_closurevars3103 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3103 
  %call3104 = call %object* @callmethod(%object* %var_val_closurevars3103, i8* getelementptr([5 x i8]* @.str1653,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3104 
; compilenode returning %call3104 
  br label %EndIf3099 
EndIf3099: 
  %if3099 = phi %object* [ %call3104, %TrueBranch3099], [%call3101, %BeginIf3099] 
; compilenode returning %if3099 
  %str3105 = getelementptr [25 x i8]* @.str1654, i32 0, i32 0 
  %string3105 = call %object* @alloc_String(i8* %str3105) 
; compilenode returning %string3105 
  %var_val_name3106 = load %object** %var_name 
; compilenode returning %var_val_name3106 
  store %object* %var_val_name3106, %object** %params_0 
  %opresult3108 = call %object* @callmethod(%object* %string3105, i8* getelementptr([3 x i8]* @.str1655,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3108 
  store %object* %opresult3108, %object** %params_0 
  %call3109 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call3109 
  br label %BeginIf3110 
BeginIf3110: 
  %var_val_closurevars3111 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3111 
  %call3112 = call %object* @callmethod(%object* %var_val_closurevars3111, i8* getelementptr([7 x i8]* @.str1656,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3112 
; compilenode returning %call3112 
; compilenode returning %call3112 
  %num3113 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3113 
  store %object* %num3113, %object** %params_0 
  %opresult3115 = call %object* @callmethod(%object* %call3112, i8* getelementptr([2 x i8]* @.str1657,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3115 
  %cond3110_valp = call i1 @istrue(%object* %opresult3115) 
  %cond3110 = icmp eq i1 0, %cond3110_valp 
br i1 %cond3110, label %FalseBranch3110, label %TrueBranch3110 
TrueBranch3110: 
  %str3116 = getelementptr [24 x i8]* @.str1658, i32 0, i32 0 
  %string3116 = call %object* @alloc_String(i8* %str3116) 
; compilenode returning %string3116 
  %var_val_closurevars3117 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3117 
  %call3118 = call %object* @callmethod(%object* %var_val_closurevars3117, i8* getelementptr([7 x i8]* @.str1659,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3118 
; compilenode returning %call3118 
; compilenode returning %call3118 
  store %object* %call3118, %object** %params_0 
  %opresult3120 = call %object* @callmethod(%object* %string3116, i8* getelementptr([3 x i8]* @.str1660,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3120 
  store %object* %opresult3120, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3121 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1661,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3121 
; compilenode returning %call3121 
  br label %BeginIf3122 
BeginIf3122: 
  %var_val_o3123 = load %object** %var_o 
; compilenode returning %var_val_o3123 
  %call3124 = call %object* @callmethod(%object* %var_val_o3123, i8* getelementptr([12 x i8]* @.str1662,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3124 
; compilenode returning %call3124 
; compilenode returning %call3124 
  %cond3122_valp = call i1 @istrue(%object* %call3124) 
  %cond3122 = icmp eq i1 0, %cond3122_valp 
br i1 %cond3122, label %FalseBranch3122, label %TrueBranch3122 
TrueBranch3122: 
  %str3125 = getelementptr [23 x i8]* @.str1663, i32 0, i32 0 
  %string3125 = call %object* @alloc_String(i8* %str3125) 
; compilenode returning %string3125 
  %var_val_nm3126 = load %object** %var_nm 
; compilenode returning %var_val_nm3126 
  %str3127 = getelementptr [36 x i8]* @.str1664, i32 0, i32 0 
  %string3127 = call %object* @alloc_String(i8* %str3127) 
; compilenode returning %string3127 
  %str3128 = getelementptr [40 x i8]* @.str1665, i32 0, i32 0 
  %string3128 = call %object* @alloc_String(i8* %str3128) 
; compilenode returning %string3128 
  store %object* %string3128, %object** %params_0 
  %opresult3130 = call %object* @callmethod(%object* %string3127, i8* getelementptr([3 x i8]* @.str1666,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3130 
  store %object* %opresult3130, %object** %params_0 
  %opresult3132 = call %object* @callmethod(%object* %var_val_nm3126, i8* getelementptr([3 x i8]* @.str1667,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3132 
  store %object* %opresult3132, %object** %params_0 
  %opresult3134 = call %object* @callmethod(%object* %string3125, i8* getelementptr([3 x i8]* @.str1668,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3134 
  store %object* %opresult3134, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3135 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1669,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3135 
; compilenode returning %call3135 
  br label %EndIf3122 
FalseBranch3122: 
  %str3136 = getelementptr [23 x i8]* @.str1670, i32 0, i32 0 
  %string3136 = call %object* @alloc_String(i8* %str3136) 
; compilenode returning %string3136 
  %var_val_nm3137 = load %object** %var_nm 
; compilenode returning %var_val_nm3137 
  %str3138 = getelementptr [32 x i8]* @.str1671, i32 0, i32 0 
  %string3138 = call %object* @alloc_String(i8* %str3138) 
; compilenode returning %string3138 
  %str3139 = getelementptr [40 x i8]* @.str1672, i32 0, i32 0 
  %string3139 = call %object* @alloc_String(i8* %str3139) 
; compilenode returning %string3139 
  store %object* %string3139, %object** %params_0 
  %opresult3141 = call %object* @callmethod(%object* %string3138, i8* getelementptr([3 x i8]* @.str1673,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3141 
  store %object* %opresult3141, %object** %params_0 
  %opresult3143 = call %object* @callmethod(%object* %var_val_nm3137, i8* getelementptr([3 x i8]* @.str1674,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3143 
  store %object* %opresult3143, %object** %params_0 
  %opresult3145 = call %object* @callmethod(%object* %string3136, i8* getelementptr([3 x i8]* @.str1675,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3145 
  store %object* %opresult3145, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3146 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1676,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3146 
; compilenode returning %call3146 
  br label %EndIf3122 
EndIf3122: 
  %if3122 = phi %object* [ %call3135, %TrueBranch3122], [%call3146, %FalseBranch3122] 
; compilenode returning %if3122 
  br label %EndIf3110 
FalseBranch3110: 
  %str3147 = getelementptr [23 x i8]* @.str1677, i32 0, i32 0 
  %string3147 = call %object* @alloc_String(i8* %str3147) 
; compilenode returning %string3147 
  %var_val_nm3148 = load %object** %var_nm 
; compilenode returning %var_val_nm3148 
  %str3149 = getelementptr [32 x i8]* @.str1678, i32 0, i32 0 
  %string3149 = call %object* @alloc_String(i8* %str3149) 
; compilenode returning %string3149 
  %str3150 = getelementptr [19 x i8]* @.str1679, i32 0, i32 0 
  %string3150 = call %object* @alloc_String(i8* %str3150) 
; compilenode returning %string3150 
  store %object* %string3150, %object** %params_0 
  %opresult3152 = call %object* @callmethod(%object* %string3149, i8* getelementptr([3 x i8]* @.str1680,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3152 
  store %object* %opresult3152, %object** %params_0 
  %opresult3154 = call %object* @callmethod(%object* %var_val_nm3148, i8* getelementptr([3 x i8]* @.str1681,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3154 
  store %object* %opresult3154, %object** %params_0 
  %opresult3156 = call %object* @callmethod(%object* %string3147, i8* getelementptr([3 x i8]* @.str1682,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3156 
  store %object* %opresult3156, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3157 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1683,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3157 
; compilenode returning %call3157 
  br label %EndIf3110 
EndIf3110: 
  %if3110 = phi %object* [ %if3122, %EndIf3122], [%call3157, %FalseBranch3110] 
; compilenode returning %if3110 
  %str3158 = getelementptr [6 x i8]* @.str1684, i32 0, i32 0 
  %string3158 = call %object* @alloc_String(i8* %str3158) 
; compilenode returning %string3158 
  store %object* %string3158, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3159 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1685,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3159 
; compilenode returning %call3159 
  %num3160 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3160 
  %var_j = call %object** @alloc_var() 
  %var_j_dec = getelementptr %object* %num3160, i32 0 
  store %object* %var_j_dec, %object** %var_j 
; compilenode returning  
  %var_val_closurevars3162 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3162 
  %obj3163 = call %object* @alloc_obj() 
  %closure3164 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3164, %object** %var_j) 
  %selfpp3214 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3214 
  call void @addtoclosure(%object*** %closure3164, %object** %selfpp3214) 
  call void @addclosuremethod(%object* %obj3163, i8* getelementptr([6 x i8]* @.str.methname3164, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3164), %object*** %closure3164) 
; compilenode returning %obj3163 
  store %object* %var_val_closurevars3162, %object** %params_0 
  %iter3161 = call %object* @callmethod(%object* %var_val_closurevars3162, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3161 
BeginFor3161: 
  %condobj3161 = call %object* @callmethod(%object* %iter3161, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3161_valp = call i1 @istrue(%object* %condobj3161) 
  %cond3161 = icmp eq i1 0, %cond3161_valp 
br i1 %cond3161, label %EndFor3161, label %ForBody3161 
ForBody3161: 
 %forval3161 = call %object* @callmethod(%object* %iter3161, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3161, %object** %params_0 
  call %object* @callmethod(%object* %obj3163, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3161 
EndFor3161: 
; compilenode returning %var_val_closurevars3162 
  %var_val_body3216 = load %object** %var_body 
; compilenode returning %var_val_body3216 
  %obj3217 = call %object* @alloc_obj() 
  %closure3218 = call %object*** @createclosure(i32 1) 
  %selfpp3221 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3221 
  call void @addtoclosure(%object*** %closure3218, %object** %selfpp3221) 
  call void @addclosuremethod(%object* %obj3217, i8* getelementptr([6 x i8]* @.str.methname3218, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3218), %object*** %closure3218) 
; compilenode returning %obj3217 
  store %object* %var_val_body3216, %object** %params_0 
  %iter3215 = call %object* @callmethod(%object* %var_val_body3216, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3215 
BeginFor3215: 
  %condobj3215 = call %object* @callmethod(%object* %iter3215, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3215_valp = call i1 @istrue(%object* %condobj3215) 
  %cond3215 = icmp eq i1 0, %cond3215_valp 
br i1 %cond3215, label %EndFor3215, label %ForBody3215 
ForBody3215: 
 %forval3215 = call %object* @callmethod(%object* %iter3215, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3215, %object** %params_0 
  call %object* @callmethod(%object* %obj3217, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3215 
EndFor3215: 
; compilenode returning %var_val_body3216 
  %str3222 = getelementptr [10 x i8]* @.str1714, i32 0, i32 0 
  %string3222 = call %object* @alloc_String(i8* %str3222) 
; compilenode returning %string3222 
  store %object* %string3222, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3223 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1715,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3223 
; compilenode returning %call3223 
  %var_val_output3225 = load %object** %var_output 
; compilenode returning %var_val_output3225 
  %obj3226 = call %object* @alloc_obj() 
  %closure3227 = call %object*** @createclosure(i32 1) 
  %selfpp3230 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3230 
  call void @addtoclosure(%object*** %closure3227, %object** %selfpp3230) 
  call void @addclosuremethod(%object* %obj3226, i8* getelementptr([6 x i8]* @.str.methname3227, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3227), %object*** %closure3227) 
; compilenode returning %obj3226 
  store %object* %var_val_output3225, %object** %params_0 
  %iter3224 = call %object* @callmethod(%object* %var_val_output3225, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3224 
BeginFor3224: 
  %condobj3224 = call %object* @callmethod(%object* %iter3224, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3224_valp = call i1 @istrue(%object* %condobj3224) 
  %cond3224 = icmp eq i1 0, %cond3224_valp 
br i1 %cond3224, label %EndFor3224, label %ForBody3224 
ForBody3224: 
 %forval3224 = call %object* @callmethod(%object* %iter3224, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3224, %object** %params_0 
  call %object* @callmethod(%object* %obj3226, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3224 
EndFor3224: 
; compilenode returning %var_val_output3225 
  %var_val_oldout3231 = load %object** %var_oldout 
; compilenode returning %var_val_oldout3231 
  store %object* %var_val_oldout3231, %object** %var_output 
; compilenode returning %var_val_oldout3231 
  %var_val_oldbblock3232 = load %object** %var_oldbblock 
; compilenode returning %var_val_oldbblock3232 
  store %object* %var_val_oldbblock3232, %object** %var_bblock 
; compilenode returning %var_val_oldbblock3232 
  %var_val_oldusedvars3233 = load %object** %var_oldusedvars 
; compilenode returning %var_val_oldusedvars3233 
  store %object* %var_val_oldusedvars3233, %object** %var_usedvars 
; compilenode returning %var_val_oldusedvars3233 
  %var_val_olddeclaredvars3234 = load %object** %var_olddeclaredvars 
; compilenode returning %var_val_olddeclaredvars3234 
  store %object* %var_val_olddeclaredvars3234, %object** %var_declaredvars 
; compilenode returning %var_val_olddeclaredvars3234 
  %var_val_name3235 = load %object** %var_name 
; compilenode returning %var_val_name3235 
  %call3236 = call %object* @gracelib_length(%object* %var_val_name3235) 
; compilenode returning %call3236 
  %num3237 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3237 
  store %object* %num3237, %object** %params_0 
  %sum3239 = call %object* @callmethod(%object* %call3236, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3239 
  %var_len = call %object** @alloc_var() 
  %var_len_dec = getelementptr %object* %sum3239, i32 0 
  store %object* %var_len_dec, %object** %var_len 
; compilenode returning  
  %str3240 = getelementptr [15 x i8]* @.str1717, i32 0, i32 0 
  %string3240 = call %object* @alloc_String(i8* %str3240) 
; compilenode returning %string3240 
  %var_val_myc3241 = load %object** %var_myc 
; compilenode returning %var_val_myc3241 
  %str3242 = getelementptr [25 x i8]* @.str1718, i32 0, i32 0 
  %string3242 = call %object* @alloc_String(i8* %str3242) 
; compilenode returning %string3242 
  %str3243 = getelementptr [11 x i8]* @.str1719, i32 0, i32 0 
  %string3243 = call %object* @alloc_String(i8* %str3243) 
; compilenode returning %string3243 
  %var_val_len3244 = load %object** %var_len 
; compilenode returning %var_val_len3244 
  %str3245 = getelementptr [10 x i8]* @.str1720, i32 0, i32 0 
  %string3245 = call %object* @alloc_String(i8* %str3245) 
; compilenode returning %string3245 
  %var_val_name3246 = load %object** %var_name 
; compilenode returning %var_val_name3246 
  %str3247 = getelementptr [5 x i8]* @.str1721, i32 0, i32 0 
  %string3247 = call %object* @alloc_String(i8* %str3247) 
; compilenode returning %string3247 
  store %object* %string3247, %object** %params_0 
  %opresult3249 = call %object* @callmethod(%object* %var_val_name3246, i8* getelementptr([3 x i8]* @.str1722,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3249 
  store %object* %opresult3249, %object** %params_0 
  %opresult3251 = call %object* @callmethod(%object* %string3245, i8* getelementptr([3 x i8]* @.str1723,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3251 
  store %object* %opresult3251, %object** %params_0 
  %opresult3253 = call %object* @callmethod(%object* %var_val_len3244, i8* getelementptr([3 x i8]* @.str1724,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3253 
  store %object* %opresult3253, %object** %params_0 
  %opresult3255 = call %object* @callmethod(%object* %string3243, i8* getelementptr([3 x i8]* @.str1725,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3255 
  store %object* %opresult3255, %object** %params_0 
  %opresult3257 = call %object* @callmethod(%object* %string3242, i8* getelementptr([3 x i8]* @.str1726,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3257 
  store %object* %opresult3257, %object** %params_0 
  %opresult3259 = call %object* @callmethod(%object* %var_val_myc3241, i8* getelementptr([3 x i8]* @.str1727,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3259 
  store %object* %opresult3259, %object** %params_0 
  %opresult3261 = call %object* @callmethod(%object* %string3240, i8* getelementptr([3 x i8]* @.str1728,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3261 
  %var_con = call %object** @alloc_var() 
  %var_con_dec = getelementptr %object* %opresult3261, i32 0 
  store %object* %var_con_dec, %object** %var_con 
; compilenode returning  
  %var_val_con3262 = load %object** %var_con 
; compilenode returning %var_val_con3262 
  store %object* %var_val_con3262, %object** %params_0 
  %var_val_constants3263 = load %object** %var_constants 
; compilenode returning %var_val_constants3263 
  %call3264 = call %object* @callmethod(%object* %var_val_constants3263, i8* getelementptr([5 x i8]* @.str1729,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3264 
; compilenode returning %call3264 
  br label %BeginIf3265 
BeginIf3265: 
  %var_val_closurevars3266 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3266 
  %call3267 = call %object* @callmethod(%object* %var_val_closurevars3266, i8* getelementptr([7 x i8]* @.str1730,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3267 
; compilenode returning %call3267 
; compilenode returning %call3267 
  %num3268 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3268 
  store %object* %num3268, %object** %params_0 
  %opresult3270 = call %object* @callmethod(%object* %call3267, i8* getelementptr([3 x i8]* @.str1731,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3270 
  %cond3265_valp = call i1 @istrue(%object* %opresult3270) 
  %cond3265 = icmp eq i1 0, %cond3265_valp 
br i1 %cond3265, label %FalseBranch3265, label %TrueBranch3265 
TrueBranch3265: 
  %str3271 = getelementptr [33 x i8]* @.str1732, i32 0, i32 0 
  %string3271 = call %object* @alloc_String(i8* %str3271) 
; compilenode returning %string3271 
  %var_val_selfobj3272 = load %object** %var_selfobj 
; compilenode returning %var_val_selfobj3272 
  %str3273 = getelementptr [22 x i8]* @.str1733, i32 0, i32 0 
  %string3273 = call %object* @alloc_String(i8* %str3273) 
; compilenode returning %string3273 
  %var_val_len3274 = load %object** %var_len 
; compilenode returning %var_val_len3274 
  %str3275 = getelementptr [23 x i8]* @.str1734, i32 0, i32 0 
  %string3275 = call %object* @alloc_String(i8* %str3275) 
; compilenode returning %string3275 
  %var_val_myc3276 = load %object** %var_myc 
; compilenode returning %var_val_myc3276 
  %str3277 = getelementptr [18 x i8]* @.str1735, i32 0, i32 0 
  %string3277 = call %object* @alloc_String(i8* %str3277) 
; compilenode returning %string3277 
  %str3278 = getelementptr [60 x i8]* @.str1736, i32 0, i32 0 
  %string3278 = call %object* @alloc_String(i8* %str3278) 
; compilenode returning %string3278 
  %str3279 = getelementptr [35 x i8]* @.str1737, i32 0, i32 0 
  %string3279 = call %object* @alloc_String(i8* %str3279) 
; compilenode returning %string3279 
  %var_val_nm3280 = load %object** %var_nm 
; compilenode returning %var_val_nm3280 
  %str3281 = getelementptr [3 x i8]* @.str1738, i32 0, i32 0 
  %string3281 = call %object* @alloc_String(i8* %str3281) 
; compilenode returning %string3281 
  store %object* %string3281, %object** %params_0 
  %opresult3283 = call %object* @callmethod(%object* %var_val_nm3280, i8* getelementptr([3 x i8]* @.str1739,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3283 
  store %object* %opresult3283, %object** %params_0 
  %opresult3285 = call %object* @callmethod(%object* %string3279, i8* getelementptr([3 x i8]* @.str1740,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3285 
  store %object* %opresult3285, %object** %params_0 
  %opresult3287 = call %object* @callmethod(%object* %string3278, i8* getelementptr([3 x i8]* @.str1741,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3287 
  store %object* %opresult3287, %object** %params_0 
  %opresult3289 = call %object* @callmethod(%object* %string3277, i8* getelementptr([3 x i8]* @.str1742,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3289 
  store %object* %opresult3289, %object** %params_0 
  %opresult3291 = call %object* @callmethod(%object* %var_val_myc3276, i8* getelementptr([3 x i8]* @.str1743,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3291 
  store %object* %opresult3291, %object** %params_0 
  %opresult3293 = call %object* @callmethod(%object* %string3275, i8* getelementptr([3 x i8]* @.str1744,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3293 
  store %object* %opresult3293, %object** %params_0 
  %opresult3295 = call %object* @callmethod(%object* %var_val_len3274, i8* getelementptr([3 x i8]* @.str1745,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3295 
  store %object* %opresult3295, %object** %params_0 
  %opresult3297 = call %object* @callmethod(%object* %string3273, i8* getelementptr([3 x i8]* @.str1746,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3297 
  store %object* %opresult3297, %object** %params_0 
  %opresult3299 = call %object* @callmethod(%object* %var_val_selfobj3272, i8* getelementptr([3 x i8]* @.str1747,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3299 
  store %object* %opresult3299, %object** %params_0 
  %opresult3301 = call %object* @callmethod(%object* %string3271, i8* getelementptr([3 x i8]* @.str1748,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3301 
  store %object* %opresult3301, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3302 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1749,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3302 
; compilenode returning %call3302 
  br label %EndIf3265 
FalseBranch3265: 
  %str3303 = getelementptr [11 x i8]* @.str1750, i32 0, i32 0 
  %string3303 = call %object* @alloc_String(i8* %str3303) 
; compilenode returning %string3303 
  %var_val_myc3304 = load %object** %var_myc 
; compilenode returning %var_val_myc3304 
  %str3305 = getelementptr [39 x i8]* @.str1751, i32 0, i32 0 
  %string3305 = call %object* @alloc_String(i8* %str3305) 
; compilenode returning %string3305 
  %var_val_closurevars3306 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3306 
  %call3307 = call %object* @callmethod(%object* %var_val_closurevars3306, i8* getelementptr([7 x i8]* @.str1752,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3307 
; compilenode returning %call3307 
; compilenode returning %call3307 
  %str3308 = getelementptr [2 x i8]* @.str1753, i32 0, i32 0 
  %string3308 = call %object* @alloc_String(i8* %str3308) 
; compilenode returning %string3308 
  store %object* %string3308, %object** %params_0 
  %opresult3310 = call %object* @callmethod(%object* %call3307, i8* getelementptr([3 x i8]* @.str1754,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3310 
  store %object* %opresult3310, %object** %params_0 
  %opresult3312 = call %object* @callmethod(%object* %string3305, i8* getelementptr([3 x i8]* @.str1755,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3312 
  store %object* %opresult3312, %object** %params_0 
  %opresult3314 = call %object* @callmethod(%object* %var_val_myc3304, i8* getelementptr([3 x i8]* @.str1756,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3314 
  store %object* %opresult3314, %object** %params_0 
  %opresult3316 = call %object* @callmethod(%object* %string3303, i8* getelementptr([3 x i8]* @.str1757,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3316 
  store %object* %opresult3316, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3317 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1758,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3317 
; compilenode returning %call3317 
  %var_val_closurevars3319 = load %object** %var_closurevars 
; compilenode returning %var_val_closurevars3319 
  %obj3320 = call %object* @alloc_obj() 
  %closure3321 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure3321, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure3321, %object** %var_myc) 
  %selfpp3381 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3381 
  call void @addtoclosure(%object*** %closure3321, %object** %selfpp3381) 
  call void @addclosuremethod(%object* %obj3320, i8* getelementptr([6 x i8]* @.str.methname3321, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3321), %object*** %closure3321) 
; compilenode returning %obj3320 
  store %object* %var_val_closurevars3319, %object** %params_0 
  %iter3318 = call %object* @callmethod(%object* %var_val_closurevars3319, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3318 
BeginFor3318: 
  %condobj3318 = call %object* @callmethod(%object* %iter3318, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3318_valp = call i1 @istrue(%object* %condobj3318) 
  %cond3318 = icmp eq i1 0, %cond3318_valp 
br i1 %cond3318, label %EndFor3318, label %ForBody3318 
ForBody3318: 
 %forval3318 = call %object* @callmethod(%object* %iter3318, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3318, %object** %params_0 
  call %object* @callmethod(%object* %obj3320, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3318 
EndFor3318: 
; compilenode returning %var_val_closurevars3319 
  %str3382 = getelementptr [40 x i8]* @.str1792, i32 0, i32 0 
  %string3382 = call %object* @alloc_String(i8* %str3382) 
; compilenode returning %string3382 
  %var_val_selfobj3383 = load %object** %var_selfobj 
; compilenode returning %var_val_selfobj3383 
  %str3384 = getelementptr [22 x i8]* @.str1793, i32 0, i32 0 
  %string3384 = call %object* @alloc_String(i8* %str3384) 
; compilenode returning %string3384 
  %var_val_len3385 = load %object** %var_len 
; compilenode returning %var_val_len3385 
  %str3386 = getelementptr [23 x i8]* @.str1794, i32 0, i32 0 
  %string3386 = call %object* @alloc_String(i8* %str3386) 
; compilenode returning %string3386 
  %var_val_myc3387 = load %object** %var_myc 
; compilenode returning %var_val_myc3387 
  %str3388 = getelementptr [18 x i8]* @.str1795, i32 0, i32 0 
  %string3388 = call %object* @alloc_String(i8* %str3388) 
; compilenode returning %string3388 
  %str3389 = getelementptr [72 x i8]* @.str1796, i32 0, i32 0 
  %string3389 = call %object* @alloc_String(i8* %str3389) 
; compilenode returning %string3389 
  %str3390 = getelementptr [47 x i8]* @.str1797, i32 0, i32 0 
  %string3390 = call %object* @alloc_String(i8* %str3390) 
; compilenode returning %string3390 
  %var_val_nm3391 = load %object** %var_nm 
; compilenode returning %var_val_nm3391 
  %str3392 = getelementptr [23 x i8]* @.str1798, i32 0, i32 0 
  %string3392 = call %object* @alloc_String(i8* %str3392) 
; compilenode returning %string3392 
  %var_val_myc3393 = load %object** %var_myc 
; compilenode returning %var_val_myc3393 
  %str3394 = getelementptr [2 x i8]* @.str1799, i32 0, i32 0 
  %string3394 = call %object* @alloc_String(i8* %str3394) 
; compilenode returning %string3394 
  store %object* %string3394, %object** %params_0 
  %opresult3396 = call %object* @callmethod(%object* %var_val_myc3393, i8* getelementptr([3 x i8]* @.str1800,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3396 
  store %object* %opresult3396, %object** %params_0 
  %opresult3398 = call %object* @callmethod(%object* %string3392, i8* getelementptr([3 x i8]* @.str1801,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3398 
  store %object* %opresult3398, %object** %params_0 
  %opresult3400 = call %object* @callmethod(%object* %var_val_nm3391, i8* getelementptr([3 x i8]* @.str1802,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3400 
  store %object* %opresult3400, %object** %params_0 
  %opresult3402 = call %object* @callmethod(%object* %string3390, i8* getelementptr([3 x i8]* @.str1803,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3402 
  store %object* %opresult3402, %object** %params_0 
  %opresult3404 = call %object* @callmethod(%object* %string3389, i8* getelementptr([3 x i8]* @.str1804,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3404 
  store %object* %opresult3404, %object** %params_0 
  %opresult3406 = call %object* @callmethod(%object* %string3388, i8* getelementptr([3 x i8]* @.str1805,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3406 
  store %object* %opresult3406, %object** %params_0 
  %opresult3408 = call %object* @callmethod(%object* %var_val_myc3387, i8* getelementptr([3 x i8]* @.str1806,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3408 
  store %object* %opresult3408, %object** %params_0 
  %opresult3410 = call %object* @callmethod(%object* %string3386, i8* getelementptr([3 x i8]* @.str1807,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3410 
  store %object* %opresult3410, %object** %params_0 
  %opresult3412 = call %object* @callmethod(%object* %var_val_len3385, i8* getelementptr([3 x i8]* @.str1808,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3412 
  store %object* %opresult3412, %object** %params_0 
  %opresult3414 = call %object* @callmethod(%object* %string3384, i8* getelementptr([3 x i8]* @.str1809,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3414 
  store %object* %opresult3414, %object** %params_0 
  %opresult3416 = call %object* @callmethod(%object* %var_val_selfobj3383, i8* getelementptr([3 x i8]* @.str1810,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3416 
  store %object* %opresult3416, %object** %params_0 
  %opresult3418 = call %object* @callmethod(%object* %string3382, i8* getelementptr([3 x i8]* @.str1811,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3418 
  store %object* %opresult3418, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3419 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1812,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3419 
; compilenode returning %call3419 
  br label %EndIf3265 
EndIf3265: 
  %if3265 = phi %object* [ %call3302, %TrueBranch3265], [%call3419, %EndFor3318] 
; compilenode returning %if3265 
  ret %object* %if3265 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3436 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3496 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply3499(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_tret = getelementptr %object*** %closure, i32 0 
  %var_tret = load %object*** %varc_tret 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_l = getelementptr %object** %args, i32 0 
  %var_val_l3500 = load %object** %var_l 
; compilenode returning %var_val_l3500 
  store %object* %var_val_l3500, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3501 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1855,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3501 
; compilenode returning %call3501 
  store %object* %call3501, %object** %var_tret 
; compilenode returning %call3501 
  ret %object* %call3501 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3515 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilewhile 
; have closure method: 2 
define %object* @meth_compilewhile3420(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_bblock = getelementptr %object*** %closure, i32 1 
  %var_bblock = load %object*** %varc_bblock 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_auto_count3421 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3421 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count3421, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count3422 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3422 
  %num3423 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3423 
  store %object* %num3423, %object** %params_0 
  %sum3425 = call %object* @callmethod(%object* %var_val_auto_count3422, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3425 
  store %object* %sum3425, %object** %var_auto_count 
; compilenode returning %sum3425 
  %str3426 = getelementptr [23 x i8]* @.str1814, i32 0, i32 0 
  %string3426 = call %object* @alloc_String(i8* %str3426) 
; compilenode returning %string3426 
  %var_val_myc3427 = load %object** %var_myc 
; compilenode returning %var_val_myc3427 
  store %object* %var_val_myc3427, %object** %params_0 
  %opresult3429 = call %object* @callmethod(%object* %string3426, i8* getelementptr([3 x i8]* @.str1815,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3429 
  store %object* %opresult3429, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3430 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1816,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3430 
; compilenode returning %call3430 
  %str3431 = getelementptr [11 x i8]* @.str1817, i32 0, i32 0 
  %string3431 = call %object* @alloc_String(i8* %str3431) 
; compilenode returning %string3431 
  %var_val_myc3432 = load %object** %var_myc 
; compilenode returning %var_val_myc3432 
  store %object* %var_val_myc3432, %object** %params_0 
  %opresult3434 = call %object* @callmethod(%object* %string3431, i8* getelementptr([3 x i8]* @.str1818,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3434 
  store %object* %opresult3434, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3435 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1819,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3435 
; compilenode returning %call3435 
  %var_val_o3436 = load %object** %var_o 
; compilenode returning %var_val_o3436 
  %call3437 = call %object* @callmethod(%object* %var_val_o3436, i8* getelementptr([6 x i8]* @.str1820,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3437 
; compilenode returning %call3437 
; compilenode returning %call3437 
  store %object* %call3437, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3438 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1821,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3438 
; compilenode returning %call3438 
  %var_cond = call %object** @alloc_var() 
  %var_cond_dec = getelementptr %object* %call3438, i32 0 
  store %object* %var_cond_dec, %object** %var_cond 
; compilenode returning  
  %str3439 = getelementptr [6 x i8]* @.str1822, i32 0, i32 0 
  %string3439 = call %object* @alloc_String(i8* %str3439) 
; compilenode returning %string3439 
  %var_val_myc3440 = load %object** %var_myc 
; compilenode returning %var_val_myc3440 
  store %object* %var_val_myc3440, %object** %params_0 
  %opresult3442 = call %object* @callmethod(%object* %string3439, i8* getelementptr([3 x i8]* @.str1823,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3442 
  %var_creg = call %object** @alloc_var() 
  %var_creg_dec = getelementptr %object* %opresult3442, i32 0 
  store %object* %var_creg_dec, %object** %var_creg 
; compilenode returning  
  %str3443 = getelementptr [3 x i8]* @.str1824, i32 0, i32 0 
  %string3443 = call %object* @alloc_String(i8* %str3443) 
; compilenode returning %string3443 
  %var_val_creg3444 = load %object** %var_creg 
; compilenode returning %var_val_creg3444 
  %str3445 = getelementptr [34 x i8]* @.str1825, i32 0, i32 0 
  %string3445 = call %object* @alloc_String(i8* %str3445) 
; compilenode returning %string3445 
  %var_val_cond3446 = load %object** %var_cond 
; compilenode returning %var_val_cond3446 
  %str3447 = getelementptr [2 x i8]* @.str1826, i32 0, i32 0 
  %string3447 = call %object* @alloc_String(i8* %str3447) 
; compilenode returning %string3447 
  store %object* %string3447, %object** %params_0 
  %opresult3449 = call %object* @callmethod(%object* %var_val_cond3446, i8* getelementptr([3 x i8]* @.str1827,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3449 
  store %object* %opresult3449, %object** %params_0 
  %opresult3451 = call %object* @callmethod(%object* %string3445, i8* getelementptr([3 x i8]* @.str1828,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3451 
  store %object* %opresult3451, %object** %params_0 
  %opresult3453 = call %object* @callmethod(%object* %var_val_creg3444, i8* getelementptr([3 x i8]* @.str1829,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3453 
  store %object* %opresult3453, %object** %params_0 
  %opresult3455 = call %object* @callmethod(%object* %string3443, i8* getelementptr([3 x i8]* @.str1830,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3455 
  store %object* %opresult3455, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3456 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1831,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3456 
; compilenode returning %call3456 
  %str3457 = getelementptr [3 x i8]* @.str1832, i32 0, i32 0 
  %string3457 = call %object* @alloc_String(i8* %str3457) 
; compilenode returning %string3457 
  %var_val_creg3458 = load %object** %var_creg 
; compilenode returning %var_val_creg3458 
  %str3459 = getelementptr [18 x i8]* @.str1833, i32 0, i32 0 
  %string3459 = call %object* @alloc_String(i8* %str3459) 
; compilenode returning %string3459 
  %var_val_creg3460 = load %object** %var_creg 
; compilenode returning %var_val_creg3460 
  %str3461 = getelementptr [6 x i8]* @.str1834, i32 0, i32 0 
  %string3461 = call %object* @alloc_String(i8* %str3461) 
; compilenode returning %string3461 
  store %object* %string3461, %object** %params_0 
  %opresult3463 = call %object* @callmethod(%object* %var_val_creg3460, i8* getelementptr([3 x i8]* @.str1835,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3463 
  store %object* %opresult3463, %object** %params_0 
  %opresult3465 = call %object* @callmethod(%object* %string3459, i8* getelementptr([3 x i8]* @.str1836,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3465 
  store %object* %opresult3465, %object** %params_0 
  %opresult3467 = call %object* @callmethod(%object* %var_val_creg3458, i8* getelementptr([3 x i8]* @.str1837,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3467 
  store %object* %opresult3467, %object** %params_0 
  %opresult3469 = call %object* @callmethod(%object* %string3457, i8* getelementptr([3 x i8]* @.str1838,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3469 
  store %object* %opresult3469, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3470 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1839,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3470 
; compilenode returning %call3470 
  %str3471 = getelementptr [7 x i8]* @.str1840, i32 0, i32 0 
  %string3471 = call %object* @alloc_String(i8* %str3471) 
; compilenode returning %string3471 
  %var_val_creg3472 = load %object** %var_creg 
; compilenode returning %var_val_creg3472 
  %str3473 = getelementptr [18 x i8]* @.str1841, i32 0, i32 0 
  %string3473 = call %object* @alloc_String(i8* %str3473) 
; compilenode returning %string3473 
  %var_val_myc3474 = load %object** %var_myc 
; compilenode returning %var_val_myc3474 
  %str3475 = getelementptr [19 x i8]* @.str1842, i32 0, i32 0 
  %string3475 = call %object* @alloc_String(i8* %str3475) 
; compilenode returning %string3475 
  %var_val_myc3476 = load %object** %var_myc 
; compilenode returning %var_val_myc3476 
  store %object* %var_val_myc3476, %object** %params_0 
  %opresult3478 = call %object* @callmethod(%object* %string3475, i8* getelementptr([3 x i8]* @.str1843,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3478 
  store %object* %opresult3478, %object** %params_0 
  %opresult3480 = call %object* @callmethod(%object* %var_val_myc3474, i8* getelementptr([3 x i8]* @.str1844,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3480 
  store %object* %opresult3480, %object** %params_0 
  %opresult3482 = call %object* @callmethod(%object* %string3473, i8* getelementptr([3 x i8]* @.str1845,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3482 
  store %object* %opresult3482, %object** %params_0 
  %opresult3484 = call %object* @callmethod(%object* %var_val_creg3472, i8* getelementptr([3 x i8]* @.str1846,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3484 
  store %object* %opresult3484, %object** %params_0 
  %opresult3486 = call %object* @callmethod(%object* %string3471, i8* getelementptr([3 x i8]* @.str1847,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3486 
  store %object* %opresult3486, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3487 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1848,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3487 
; compilenode returning %call3487 
  %str3488 = getelementptr [10 x i8]* @.str1849, i32 0, i32 0 
  %string3488 = call %object* @alloc_String(i8* %str3488) 
; compilenode returning %string3488 
  %var_val_myc3489 = load %object** %var_myc 
; compilenode returning %var_val_myc3489 
  store %object* %var_val_myc3489, %object** %params_0 
  %opresult3491 = call %object* @callmethod(%object* %string3488, i8* getelementptr([3 x i8]* @.str1850,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3491 
  store %object* %opresult3491, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3492 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1851,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3492 
; compilenode returning %call3492 
  %str3493 = getelementptr [5 x i8]* @.str1852, i32 0, i32 0 
  %string3493 = call %object* @alloc_String(i8* %str3493) 
; compilenode returning %string3493 
  %var_tret = call %object** @alloc_var() 
  %var_tret_dec = getelementptr %object* %string3493, i32 0 
  store %object* %var_tret_dec, %object** %var_tret 
; compilenode returning  
  %str3494 = getelementptr [6 x i8]* @.str1853, i32 0, i32 0 
  %string3494 = call %object* @alloc_String(i8* %str3494) 
; compilenode returning %string3494 
  %var_tblock = call %object** @alloc_var() 
  %var_tblock_dec = getelementptr %object* %string3494, i32 0 
  store %object* %var_tblock_dec, %object** %var_tblock 
; compilenode returning  
  %var_val_o3496 = load %object** %var_o 
; compilenode returning %var_val_o3496 
  %call3497 = call %object* @callmethod(%object* %var_val_o3496, i8* getelementptr([5 x i8]* @.str1854,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3497 
; compilenode returning %call3497 
; compilenode returning %call3497 
  %obj3498 = call %object* @alloc_obj() 
  %closure3499 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3499, %object** %var_tret) 
  %selfpp3502 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3502 
  call void @addtoclosure(%object*** %closure3499, %object** %selfpp3502) 
  call void @addclosuremethod(%object* %obj3498, i8* getelementptr([6 x i8]* @.str.methname3499, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3499), %object*** %closure3499) 
; compilenode returning %obj3498 
  store %object* %call3497, %object** %params_0 
  %iter3495 = call %object* @callmethod(%object* %call3497, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3495 
BeginFor3495: 
  %condobj3495 = call %object* @callmethod(%object* %iter3495, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3495_valp = call i1 @istrue(%object* %condobj3495) 
  %cond3495 = icmp eq i1 0, %cond3495_valp 
br i1 %cond3495, label %EndFor3495, label %ForBody3495 
ForBody3495: 
 %forval3495 = call %object* @callmethod(%object* %iter3495, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3495, %object** %params_0 
  call %object* @callmethod(%object* %obj3498, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3495 
EndFor3495: 
; compilenode returning %call3497 
  %var_val_bblock3503 = load %object** %var_bblock 
; compilenode returning %var_val_bblock3503 
  store %object* %var_val_bblock3503, %object** %var_tblock 
; compilenode returning %var_val_bblock3503 
  %str3504 = getelementptr [23 x i8]* @.str1857, i32 0, i32 0 
  %string3504 = call %object* @alloc_String(i8* %str3504) 
; compilenode returning %string3504 
  %var_val_myc3505 = load %object** %var_myc 
; compilenode returning %var_val_myc3505 
  store %object* %var_val_myc3505, %object** %params_0 
  %opresult3507 = call %object* @callmethod(%object* %string3504, i8* getelementptr([3 x i8]* @.str1858,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3507 
  store %object* %opresult3507, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3508 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1859,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3508 
; compilenode returning %call3508 
  %str3509 = getelementptr [9 x i8]* @.str1860, i32 0, i32 0 
  %string3509 = call %object* @alloc_String(i8* %str3509) 
; compilenode returning %string3509 
  %var_val_myc3510 = load %object** %var_myc 
; compilenode returning %var_val_myc3510 
  store %object* %var_val_myc3510, %object** %params_0 
  %opresult3512 = call %object* @callmethod(%object* %string3509, i8* getelementptr([3 x i8]* @.str1861,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3512 
  store %object* %opresult3512, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3513 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1862,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3513 
; compilenode returning %call3513 
; WARNING: non-local assigns not yet fully supported 
  %var_val_cond3514 = load %object** %var_cond 
; compilenode returning %var_val_cond3514 
  store %object* %var_val_cond3514, %object** %params_0 
  %var_val_o3515 = load %object** %var_o 
; compilenode returning %var_val_o3515 
  %call3516 = call %object* @callmethod(%object* %var_val_o3515, i8* getelementptr([11 x i8]* @.str1863,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3516 
; compilenode returning %call3516 
; compilenode returning %call3516 
  ret %object* %call3516 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3533 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o3569 
; got len 10 
; created con 
; pushed statement 
; compiled in to %call3570 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3619 
; got len 10 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply3622(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_tret = getelementptr %object*** %closure, i32 0 
  %var_tret = load %object*** %varc_tret 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_l = getelementptr %object** %args, i32 0 
  %var_val_l3623 = load %object** %var_l 
; compilenode returning %var_val_l3623 
  store %object* %var_val_l3623, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3624 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1920,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3624 
; compilenode returning %call3624 
  store %object* %call3624, %object** %var_tret 
; compilenode returning %call3624 
  ret %object* %call3624 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_o3633 
; got len 10 
; created con 
; pushed statement 
; compiled in to %call3634 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3645 
; got len 10 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply3648(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_fret = getelementptr %object*** %closure, i32 0 
  %var_fret = load %object*** %varc_fret 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_l = getelementptr %object** %args, i32 0 
  %var_val_l3649 = load %object** %var_l 
; compilenode returning %var_val_l3649 
  store %object* %var_val_l3649, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3650 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1932,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3650 
; compilenode returning %call3650 
  store %object* %call3650, %object** %var_fret 
; compilenode returning %call3650 
  ret %object* %call3650 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_o3664 
; got len 10 
; created con 
; pushed statement 
; compiled in to %call3665 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3738 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compileif 
; have closure method: 2 
define %object* @meth_compileif3517(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_bblock = getelementptr %object*** %closure, i32 1 
  %var_bblock = load %object*** %varc_bblock 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_auto_count3518 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3518 
  %var_myc = call %object** @alloc_var() 
  %var_myc_dec = getelementptr %object* %var_val_auto_count3518, i32 0 
  store %object* %var_myc_dec, %object** %var_myc 
; compilenode returning  
  %var_val_auto_count3519 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3519 
  %num3520 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3520 
  store %object* %num3520, %object** %params_0 
  %sum3522 = call %object* @callmethod(%object* %var_val_auto_count3519, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3522 
  store %object* %sum3522, %object** %var_auto_count 
; compilenode returning %sum3522 
  %str3523 = getelementptr [20 x i8]* @.str1865, i32 0, i32 0 
  %string3523 = call %object* @alloc_String(i8* %str3523) 
; compilenode returning %string3523 
  %var_val_myc3524 = load %object** %var_myc 
; compilenode returning %var_val_myc3524 
  store %object* %var_val_myc3524, %object** %params_0 
  %opresult3526 = call %object* @callmethod(%object* %string3523, i8* getelementptr([3 x i8]* @.str1866,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3526 
  store %object* %opresult3526, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3527 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1867,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3527 
; compilenode returning %call3527 
  %str3528 = getelementptr [8 x i8]* @.str1868, i32 0, i32 0 
  %string3528 = call %object* @alloc_String(i8* %str3528) 
; compilenode returning %string3528 
  %var_val_myc3529 = load %object** %var_myc 
; compilenode returning %var_val_myc3529 
  store %object* %var_val_myc3529, %object** %params_0 
  %opresult3531 = call %object* @callmethod(%object* %string3528, i8* getelementptr([3 x i8]* @.str1869,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3531 
  store %object* %opresult3531, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3532 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1870,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3532 
; compilenode returning %call3532 
  %var_val_o3533 = load %object** %var_o 
; compilenode returning %var_val_o3533 
  %call3534 = call %object* @callmethod(%object* %var_val_o3533, i8* getelementptr([6 x i8]* @.str1871,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3534 
; compilenode returning %call3534 
; compilenode returning %call3534 
  store %object* %call3534, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3535 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str1872,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3535 
; compilenode returning %call3535 
  %var_cond = call %object** @alloc_var() 
  %var_cond_dec = getelementptr %object* %call3535, i32 0 
  store %object* %var_cond_dec, %object** %var_cond 
; compilenode returning  
  %str3536 = getelementptr [6 x i8]* @.str1873, i32 0, i32 0 
  %string3536 = call %object* @alloc_String(i8* %str3536) 
; compilenode returning %string3536 
  %var_val_myc3537 = load %object** %var_myc 
; compilenode returning %var_val_myc3537 
  store %object* %var_val_myc3537, %object** %params_0 
  %opresult3539 = call %object* @callmethod(%object* %string3536, i8* getelementptr([3 x i8]* @.str1874,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3539 
  %var_creg = call %object** @alloc_var() 
  %var_creg_dec = getelementptr %object* %opresult3539, i32 0 
  store %object* %var_creg_dec, %object** %var_creg 
; compilenode returning  
  %str3540 = getelementptr [3 x i8]* @.str1875, i32 0, i32 0 
  %string3540 = call %object* @alloc_String(i8* %str3540) 
; compilenode returning %string3540 
  %var_val_creg3541 = load %object** %var_creg 
; compilenode returning %var_val_creg3541 
  %str3542 = getelementptr [34 x i8]* @.str1876, i32 0, i32 0 
  %string3542 = call %object* @alloc_String(i8* %str3542) 
; compilenode returning %string3542 
  %var_val_cond3543 = load %object** %var_cond 
; compilenode returning %var_val_cond3543 
  %str3544 = getelementptr [2 x i8]* @.str1877, i32 0, i32 0 
  %string3544 = call %object* @alloc_String(i8* %str3544) 
; compilenode returning %string3544 
  store %object* %string3544, %object** %params_0 
  %opresult3546 = call %object* @callmethod(%object* %var_val_cond3543, i8* getelementptr([3 x i8]* @.str1878,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3546 
  store %object* %opresult3546, %object** %params_0 
  %opresult3548 = call %object* @callmethod(%object* %string3542, i8* getelementptr([3 x i8]* @.str1879,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3548 
  store %object* %opresult3548, %object** %params_0 
  %opresult3550 = call %object* @callmethod(%object* %var_val_creg3541, i8* getelementptr([3 x i8]* @.str1880,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3550 
  store %object* %opresult3550, %object** %params_0 
  %opresult3552 = call %object* @callmethod(%object* %string3540, i8* getelementptr([3 x i8]* @.str1881,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3552 
  store %object* %opresult3552, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3553 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1882,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3553 
; compilenode returning %call3553 
  %str3554 = getelementptr [3 x i8]* @.str1883, i32 0, i32 0 
  %string3554 = call %object* @alloc_String(i8* %str3554) 
; compilenode returning %string3554 
  %var_val_creg3555 = load %object** %var_creg 
; compilenode returning %var_val_creg3555 
  %str3556 = getelementptr [18 x i8]* @.str1884, i32 0, i32 0 
  %string3556 = call %object* @alloc_String(i8* %str3556) 
; compilenode returning %string3556 
  %var_val_creg3557 = load %object** %var_creg 
; compilenode returning %var_val_creg3557 
  %str3558 = getelementptr [6 x i8]* @.str1885, i32 0, i32 0 
  %string3558 = call %object* @alloc_String(i8* %str3558) 
; compilenode returning %string3558 
  store %object* %string3558, %object** %params_0 
  %opresult3560 = call %object* @callmethod(%object* %var_val_creg3557, i8* getelementptr([3 x i8]* @.str1886,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3560 
  store %object* %opresult3560, %object** %params_0 
  %opresult3562 = call %object* @callmethod(%object* %string3556, i8* getelementptr([3 x i8]* @.str1887,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3562 
  store %object* %opresult3562, %object** %params_0 
  %opresult3564 = call %object* @callmethod(%object* %var_val_creg3555, i8* getelementptr([3 x i8]* @.str1888,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3564 
  store %object* %opresult3564, %object** %params_0 
  %opresult3566 = call %object* @callmethod(%object* %string3554, i8* getelementptr([3 x i8]* @.str1889,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3566 
  store %object* %opresult3566, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3567 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1890,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3567 
; compilenode returning %call3567 
  br label %BeginIf3568 
BeginIf3568: 
  %var_val_o3569 = load %object** %var_o 
; compilenode returning %var_val_o3569 
  %call3570 = call %object* @callmethod(%object* %var_val_o3569, i8* getelementptr([10 x i8]* @.str1891,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3570 
; compilenode returning %call3570 
; compilenode returning %call3570 
  %call3571 = call %object* @callmethod(%object* %call3570, i8* getelementptr([7 x i8]* @.str1892,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3571 
; compilenode returning %call3571 
; compilenode returning %call3571 
  %num3572 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3572 
  store %object* %num3572, %object** %params_0 
  %opresult3574 = call %object* @callmethod(%object* %call3571, i8* getelementptr([2 x i8]* @.str1893,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3574 
  %cond3568_valp = call i1 @istrue(%object* %opresult3574) 
  %cond3568 = icmp eq i1 0, %cond3568_valp 
br i1 %cond3568, label %FalseBranch3568, label %TrueBranch3568 
TrueBranch3568: 
  %str3575 = getelementptr [7 x i8]* @.str1894, i32 0, i32 0 
  %string3575 = call %object* @alloc_String(i8* %str3575) 
; compilenode returning %string3575 
  %var_val_creg3576 = load %object** %var_creg 
; compilenode returning %var_val_creg3576 
  %str3577 = getelementptr [21 x i8]* @.str1895, i32 0, i32 0 
  %string3577 = call %object* @alloc_String(i8* %str3577) 
; compilenode returning %string3577 
  %var_val_myc3578 = load %object** %var_myc 
; compilenode returning %var_val_myc3578 
  %str3579 = getelementptr [20 x i8]* @.str1896, i32 0, i32 0 
  %string3579 = call %object* @alloc_String(i8* %str3579) 
; compilenode returning %string3579 
  %var_val_myc3580 = load %object** %var_myc 
; compilenode returning %var_val_myc3580 
  store %object* %var_val_myc3580, %object** %params_0 
  %opresult3582 = call %object* @callmethod(%object* %string3579, i8* getelementptr([3 x i8]* @.str1897,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3582 
  store %object* %opresult3582, %object** %params_0 
  %opresult3584 = call %object* @callmethod(%object* %var_val_myc3578, i8* getelementptr([3 x i8]* @.str1898,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3584 
  store %object* %opresult3584, %object** %params_0 
  %opresult3586 = call %object* @callmethod(%object* %string3577, i8* getelementptr([3 x i8]* @.str1899,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3586 
  store %object* %opresult3586, %object** %params_0 
  %opresult3588 = call %object* @callmethod(%object* %var_val_creg3576, i8* getelementptr([3 x i8]* @.str1900,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3588 
  store %object* %opresult3588, %object** %params_0 
  %opresult3590 = call %object* @callmethod(%object* %string3575, i8* getelementptr([3 x i8]* @.str1901,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3590 
  store %object* %opresult3590, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3591 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1902,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3591 
; compilenode returning %call3591 
  br label %EndIf3568 
FalseBranch3568: 
  %str3592 = getelementptr [7 x i8]* @.str1903, i32 0, i32 0 
  %string3592 = call %object* @alloc_String(i8* %str3592) 
; compilenode returning %string3592 
  %var_val_creg3593 = load %object** %var_creg 
; compilenode returning %var_val_creg3593 
  %str3594 = getelementptr [15 x i8]* @.str1904, i32 0, i32 0 
  %string3594 = call %object* @alloc_String(i8* %str3594) 
; compilenode returning %string3594 
  %var_val_myc3595 = load %object** %var_myc 
; compilenode returning %var_val_myc3595 
  %str3596 = getelementptr [20 x i8]* @.str1905, i32 0, i32 0 
  %string3596 = call %object* @alloc_String(i8* %str3596) 
; compilenode returning %string3596 
  %var_val_myc3597 = load %object** %var_myc 
; compilenode returning %var_val_myc3597 
  store %object* %var_val_myc3597, %object** %params_0 
  %opresult3599 = call %object* @callmethod(%object* %string3596, i8* getelementptr([3 x i8]* @.str1906,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3599 
  store %object* %opresult3599, %object** %params_0 
  %opresult3601 = call %object* @callmethod(%object* %var_val_myc3595, i8* getelementptr([3 x i8]* @.str1907,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3601 
  store %object* %opresult3601, %object** %params_0 
  %opresult3603 = call %object* @callmethod(%object* %string3594, i8* getelementptr([3 x i8]* @.str1908,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3603 
  store %object* %opresult3603, %object** %params_0 
  %opresult3605 = call %object* @callmethod(%object* %var_val_creg3593, i8* getelementptr([3 x i8]* @.str1909,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3605 
  store %object* %opresult3605, %object** %params_0 
  %opresult3607 = call %object* @callmethod(%object* %string3592, i8* getelementptr([3 x i8]* @.str1910,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3607 
  store %object* %opresult3607, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3608 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1911,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3608 
; compilenode returning %call3608 
  br label %EndIf3568 
EndIf3568: 
  %if3568 = phi %object* [ %call3591, %TrueBranch3568], [%call3608, %FalseBranch3568] 
; compilenode returning %if3568 
  %str3609 = getelementptr [11 x i8]* @.str1912, i32 0, i32 0 
  %string3609 = call %object* @alloc_String(i8* %str3609) 
; compilenode returning %string3609 
  %var_val_myc3610 = load %object** %var_myc 
; compilenode returning %var_val_myc3610 
  store %object* %var_val_myc3610, %object** %params_0 
  %opresult3612 = call %object* @callmethod(%object* %string3609, i8* getelementptr([3 x i8]* @.str1913,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3612 
  store %object* %opresult3612, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3613 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1914,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3613 
; compilenode returning %call3613 
  %str3614 = getelementptr [5 x i8]* @.str1915, i32 0, i32 0 
  %string3614 = call %object* @alloc_String(i8* %str3614) 
; compilenode returning %string3614 
  %var_tret = call %object** @alloc_var() 
  %var_tret_dec = getelementptr %object* %string3614, i32 0 
  store %object* %var_tret_dec, %object** %var_tret 
; compilenode returning  
  %str3615 = getelementptr [5 x i8]* @.str1916, i32 0, i32 0 
  %string3615 = call %object* @alloc_String(i8* %str3615) 
; compilenode returning %string3615 
  %var_fret = call %object** @alloc_var() 
  %var_fret_dec = getelementptr %object* %string3615, i32 0 
  store %object* %var_fret_dec, %object** %var_fret 
; compilenode returning  
  %str3616 = getelementptr [6 x i8]* @.str1917, i32 0, i32 0 
  %string3616 = call %object* @alloc_String(i8* %str3616) 
; compilenode returning %string3616 
  %var_tblock = call %object** @alloc_var() 
  %var_tblock_dec = getelementptr %object* %string3616, i32 0 
  store %object* %var_tblock_dec, %object** %var_tblock 
; compilenode returning  
  %str3617 = getelementptr [6 x i8]* @.str1918, i32 0, i32 0 
  %string3617 = call %object* @alloc_String(i8* %str3617) 
; compilenode returning %string3617 
  %var_fblock = call %object** @alloc_var() 
  %var_fblock_dec = getelementptr %object* %string3617, i32 0 
  store %object* %var_fblock_dec, %object** %var_fblock 
; compilenode returning  
  %var_val_o3619 = load %object** %var_o 
; compilenode returning %var_val_o3619 
  %call3620 = call %object* @callmethod(%object* %var_val_o3619, i8* getelementptr([10 x i8]* @.str1919,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3620 
; compilenode returning %call3620 
; compilenode returning %call3620 
  %obj3621 = call %object* @alloc_obj() 
  %closure3622 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3622, %object** %var_tret) 
  %selfpp3625 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3625 
  call void @addtoclosure(%object*** %closure3622, %object** %selfpp3625) 
  call void @addclosuremethod(%object* %obj3621, i8* getelementptr([6 x i8]* @.str.methname3622, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3622), %object*** %closure3622) 
; compilenode returning %obj3621 
  store %object* %call3620, %object** %params_0 
  %iter3618 = call %object* @callmethod(%object* %call3620, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3618 
BeginFor3618: 
  %condobj3618 = call %object* @callmethod(%object* %iter3618, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3618_valp = call i1 @istrue(%object* %condobj3618) 
  %cond3618 = icmp eq i1 0, %cond3618_valp 
br i1 %cond3618, label %EndFor3618, label %ForBody3618 
ForBody3618: 
 %forval3618 = call %object* @callmethod(%object* %iter3618, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3618, %object** %params_0 
  call %object* @callmethod(%object* %obj3621, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3618 
EndFor3618: 
; compilenode returning %call3620 
  %var_val_bblock3626 = load %object** %var_bblock 
; compilenode returning %var_val_bblock3626 
  store %object* %var_val_bblock3626, %object** %var_tblock 
; compilenode returning %var_val_bblock3626 
  %str3627 = getelementptr [18 x i8]* @.str1922, i32 0, i32 0 
  %string3627 = call %object* @alloc_String(i8* %str3627) 
; compilenode returning %string3627 
  %var_val_myc3628 = load %object** %var_myc 
; compilenode returning %var_val_myc3628 
  store %object* %var_val_myc3628, %object** %params_0 
  %opresult3630 = call %object* @callmethod(%object* %string3627, i8* getelementptr([3 x i8]* @.str1923,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3630 
  store %object* %opresult3630, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3631 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1924,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3631 
; compilenode returning %call3631 
  br label %BeginIf3632 
BeginIf3632: 
  %var_val_o3633 = load %object** %var_o 
; compilenode returning %var_val_o3633 
  %call3634 = call %object* @callmethod(%object* %var_val_o3633, i8* getelementptr([10 x i8]* @.str1925,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3634 
; compilenode returning %call3634 
; compilenode returning %call3634 
  %call3635 = call %object* @callmethod(%object* %call3634, i8* getelementptr([7 x i8]* @.str1926,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3635 
; compilenode returning %call3635 
; compilenode returning %call3635 
  %num3636 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3636 
  store %object* %num3636, %object** %params_0 
  %opresult3638 = call %object* @callmethod(%object* %call3635, i8* getelementptr([2 x i8]* @.str1927,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3638 
  %cond3632_valp = call i1 @istrue(%object* %opresult3638) 
  %cond3632 = icmp eq i1 0, %cond3632_valp 
br i1 %cond3632, label %EndIf3632, label %TrueBranch3632 
TrueBranch3632: 
  %str3639 = getelementptr [12 x i8]* @.str1928, i32 0, i32 0 
  %string3639 = call %object* @alloc_String(i8* %str3639) 
; compilenode returning %string3639 
  %var_val_myc3640 = load %object** %var_myc 
; compilenode returning %var_val_myc3640 
  store %object* %var_val_myc3640, %object** %params_0 
  %opresult3642 = call %object* @callmethod(%object* %string3639, i8* getelementptr([3 x i8]* @.str1929,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3642 
  store %object* %opresult3642, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3643 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1930,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3643 
; compilenode returning %call3643 
  %var_val_o3645 = load %object** %var_o 
; compilenode returning %var_val_o3645 
  %call3646 = call %object* @callmethod(%object* %var_val_o3645, i8* getelementptr([10 x i8]* @.str1931,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3646 
; compilenode returning %call3646 
; compilenode returning %call3646 
  %obj3647 = call %object* @alloc_obj() 
  %closure3648 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3648, %object** %var_fret) 
  %selfpp3651 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp3651 
  call void @addtoclosure(%object*** %closure3648, %object** %selfpp3651) 
  call void @addclosuremethod(%object* %obj3647, i8* getelementptr([6 x i8]* @.str.methname3648, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply3648), %object*** %closure3648) 
; compilenode returning %obj3647 
  store %object* %call3646, %object** %params_0 
  %iter3644 = call %object* @callmethod(%object* %call3646, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3644 
BeginFor3644: 
  %condobj3644 = call %object* @callmethod(%object* %iter3644, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond3644_valp = call i1 @istrue(%object* %condobj3644) 
  %cond3644 = icmp eq i1 0, %cond3644_valp 
br i1 %cond3644, label %EndFor3644, label %ForBody3644 
ForBody3644: 
 %forval3644 = call %object* @callmethod(%object* %iter3644, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval3644, %object** %params_0 
  call %object* @callmethod(%object* %obj3647, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor3644 
EndFor3644: 
; compilenode returning %call3646 
  %str3652 = getelementptr [18 x i8]* @.str1934, i32 0, i32 0 
  %string3652 = call %object* @alloc_String(i8* %str3652) 
; compilenode returning %string3652 
  %var_val_myc3653 = load %object** %var_myc 
; compilenode returning %var_val_myc3653 
  store %object* %var_val_myc3653, %object** %params_0 
  %opresult3655 = call %object* @callmethod(%object* %string3652, i8* getelementptr([3 x i8]* @.str1935,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3655 
  store %object* %opresult3655, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3656 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1936,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3656 
; compilenode returning %call3656 
  %var_val_bblock3657 = load %object** %var_bblock 
; compilenode returning %var_val_bblock3657 
  store %object* %var_val_bblock3657, %object** %var_fblock 
; compilenode returning %var_val_bblock3657 
  br label %EndIf3632 
EndIf3632: 
  %if3632 = phi %object* [ %var_val_bblock3657, %EndFor3644], [%opresult3638, %BeginIf3632] 
; compilenode returning %if3632 
  %str3658 = getelementptr [6 x i8]* @.str1937, i32 0, i32 0 
  %string3658 = call %object* @alloc_String(i8* %str3658) 
; compilenode returning %string3658 
  %var_val_myc3659 = load %object** %var_myc 
; compilenode returning %var_val_myc3659 
  store %object* %var_val_myc3659, %object** %params_0 
  %opresult3661 = call %object* @callmethod(%object* %string3658, i8* getelementptr([3 x i8]* @.str1938,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3661 
  store %object* %opresult3661, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3662 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str1939,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3662 
; compilenode returning %call3662 
  br label %BeginIf3663 
BeginIf3663: 
  %var_val_o3664 = load %object** %var_o 
; compilenode returning %var_val_o3664 
  %call3665 = call %object* @callmethod(%object* %var_val_o3664, i8* getelementptr([10 x i8]* @.str1940,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3665 
; compilenode returning %call3665 
; compilenode returning %call3665 
  %call3666 = call %object* @callmethod(%object* %call3665, i8* getelementptr([7 x i8]* @.str1941,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3666 
; compilenode returning %call3666 
; compilenode returning %call3666 
  %num3667 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num3667 
  store %object* %num3667, %object** %params_0 
  %opresult3669 = call %object* @callmethod(%object* %call3666, i8* getelementptr([2 x i8]* @.str1942,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3669 
  %cond3663_valp = call i1 @istrue(%object* %opresult3669) 
  %cond3663 = icmp eq i1 0, %cond3663_valp 
br i1 %cond3663, label %FalseBranch3663, label %TrueBranch3663 
TrueBranch3663: 
  %str3670 = getelementptr [6 x i8]* @.str1943, i32 0, i32 0 
  %string3670 = call %object* @alloc_String(i8* %str3670) 
; compilenode returning %string3670 
  %var_val_myc3671 = load %object** %var_myc 
; compilenode returning %var_val_myc3671 
  %str3672 = getelementptr [19 x i8]* @.str1944, i32 0, i32 0 
  %string3672 = call %object* @alloc_String(i8* %str3672) 
; compilenode returning %string3672 
  %var_val_tret3673 = load %object** %var_tret 
; compilenode returning %var_val_tret3673 
  %str3674 = getelementptr [3 x i8]* @.str1945, i32 0, i32 0 
  %string3674 = call %object* @alloc_String(i8* %str3674) 
; compilenode returning %string3674 
  %var_val_tblock3675 = load %object** %var_tblock 
; compilenode returning %var_val_tblock3675 
  %str3676 = getelementptr [5 x i8]* @.str1946, i32 0, i32 0 
  %string3676 = call %object* @alloc_String(i8* %str3676) 
; compilenode returning %string3676 
  %var_val_fret3677 = load %object** %var_fret 
; compilenode returning %var_val_fret3677 
  %str3678 = getelementptr [3 x i8]* @.str1947, i32 0, i32 0 
  %string3678 = call %object* @alloc_String(i8* %str3678) 
; compilenode returning %string3678 
  %var_val_fblock3679 = load %object** %var_fblock 
; compilenode returning %var_val_fblock3679 
  %str3680 = getelementptr [2 x i8]* @.str1948, i32 0, i32 0 
  %string3680 = call %object* @alloc_String(i8* %str3680) 
; compilenode returning %string3680 
  store %object* %string3680, %object** %params_0 
  %opresult3682 = call %object* @callmethod(%object* %var_val_fblock3679, i8* getelementptr([3 x i8]* @.str1949,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3682 
  store %object* %opresult3682, %object** %params_0 
  %opresult3684 = call %object* @callmethod(%object* %string3678, i8* getelementptr([3 x i8]* @.str1950,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3684 
  store %object* %opresult3684, %object** %params_0 
  %opresult3686 = call %object* @callmethod(%object* %var_val_fret3677, i8* getelementptr([3 x i8]* @.str1951,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3686 
  store %object* %opresult3686, %object** %params_0 
  %opresult3688 = call %object* @callmethod(%object* %string3676, i8* getelementptr([3 x i8]* @.str1952,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3688 
  store %object* %opresult3688, %object** %params_0 
  %opresult3690 = call %object* @callmethod(%object* %var_val_tblock3675, i8* getelementptr([3 x i8]* @.str1953,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3690 
  store %object* %opresult3690, %object** %params_0 
  %opresult3692 = call %object* @callmethod(%object* %string3674, i8* getelementptr([3 x i8]* @.str1954,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3692 
  store %object* %opresult3692, %object** %params_0 
  %opresult3694 = call %object* @callmethod(%object* %var_val_tret3673, i8* getelementptr([3 x i8]* @.str1955,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3694 
  store %object* %opresult3694, %object** %params_0 
  %opresult3696 = call %object* @callmethod(%object* %string3672, i8* getelementptr([3 x i8]* @.str1956,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3696 
  store %object* %opresult3696, %object** %params_0 
  %opresult3698 = call %object* @callmethod(%object* %var_val_myc3671, i8* getelementptr([3 x i8]* @.str1957,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3698 
  store %object* %opresult3698, %object** %params_0 
  %opresult3700 = call %object* @callmethod(%object* %string3670, i8* getelementptr([3 x i8]* @.str1958,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3700 
  store %object* %opresult3700, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3701 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1959,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3701 
; compilenode returning %call3701 
  br label %EndIf3663 
FalseBranch3663: 
  %str3702 = getelementptr [6 x i8]* @.str1960, i32 0, i32 0 
  %string3702 = call %object* @alloc_String(i8* %str3702) 
; compilenode returning %string3702 
  %var_val_myc3703 = load %object** %var_myc 
; compilenode returning %var_val_myc3703 
  %str3704 = getelementptr [19 x i8]* @.str1961, i32 0, i32 0 
  %string3704 = call %object* @alloc_String(i8* %str3704) 
; compilenode returning %string3704 
  %var_val_tret3705 = load %object** %var_tret 
; compilenode returning %var_val_tret3705 
  %str3706 = getelementptr [3 x i8]* @.str1962, i32 0, i32 0 
  %string3706 = call %object* @alloc_String(i8* %str3706) 
; compilenode returning %string3706 
  %var_val_tblock3707 = load %object** %var_tblock 
; compilenode returning %var_val_tblock3707 
  %str3708 = getelementptr [5 x i8]* @.str1963, i32 0, i32 0 
  %string3708 = call %object* @alloc_String(i8* %str3708) 
; compilenode returning %string3708 
  %var_val_cond3709 = load %object** %var_cond 
; compilenode returning %var_val_cond3709 
  %str3710 = getelementptr [11 x i8]* @.str1964, i32 0, i32 0 
  %string3710 = call %object* @alloc_String(i8* %str3710) 
; compilenode returning %string3710 
  %var_val_myc3711 = load %object** %var_myc 
; compilenode returning %var_val_myc3711 
  %str3712 = getelementptr [2 x i8]* @.str1965, i32 0, i32 0 
  %string3712 = call %object* @alloc_String(i8* %str3712) 
; compilenode returning %string3712 
  store %object* %string3712, %object** %params_0 
  %opresult3714 = call %object* @callmethod(%object* %var_val_myc3711, i8* getelementptr([3 x i8]* @.str1966,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3714 
  store %object* %opresult3714, %object** %params_0 
  %opresult3716 = call %object* @callmethod(%object* %string3710, i8* getelementptr([3 x i8]* @.str1967,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3716 
  store %object* %opresult3716, %object** %params_0 
  %opresult3718 = call %object* @callmethod(%object* %var_val_cond3709, i8* getelementptr([3 x i8]* @.str1968,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3718 
  store %object* %opresult3718, %object** %params_0 
  %opresult3720 = call %object* @callmethod(%object* %string3708, i8* getelementptr([3 x i8]* @.str1969,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3720 
  store %object* %opresult3720, %object** %params_0 
  %opresult3722 = call %object* @callmethod(%object* %var_val_tblock3707, i8* getelementptr([3 x i8]* @.str1970,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3722 
  store %object* %opresult3722, %object** %params_0 
  %opresult3724 = call %object* @callmethod(%object* %string3706, i8* getelementptr([3 x i8]* @.str1971,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3724 
  store %object* %opresult3724, %object** %params_0 
  %opresult3726 = call %object* @callmethod(%object* %var_val_tret3705, i8* getelementptr([3 x i8]* @.str1972,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3726 
  store %object* %opresult3726, %object** %params_0 
  %opresult3728 = call %object* @callmethod(%object* %string3704, i8* getelementptr([3 x i8]* @.str1973,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3728 
  store %object* %opresult3728, %object** %params_0 
  %opresult3730 = call %object* @callmethod(%object* %var_val_myc3703, i8* getelementptr([3 x i8]* @.str1974,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3730 
  store %object* %opresult3730, %object** %params_0 
  %opresult3732 = call %object* @callmethod(%object* %string3702, i8* getelementptr([3 x i8]* @.str1975,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3732 
  store %object* %opresult3732, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3733 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1976,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3733 
; compilenode returning %call3733 
  br label %EndIf3663 
EndIf3663: 
  %if3663 = phi %object* [ %call3701, %TrueBranch3663], [%call3733, %FalseBranch3663] 
; compilenode returning %if3663 
; WARNING: non-local assigns not yet fully supported 
  %str3734 = getelementptr [4 x i8]* @.str1977, i32 0, i32 0 
  %string3734 = call %object* @alloc_String(i8* %str3734) 
; compilenode returning %string3734 
  %var_val_myc3735 = load %object** %var_myc 
; compilenode returning %var_val_myc3735 
  store %object* %var_val_myc3735, %object** %params_0 
  %opresult3737 = call %object* @callmethod(%object* %string3734, i8* getelementptr([3 x i8]* @.str1978,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3737 
  store %object* %opresult3737, %object** %params_0 
  %var_val_o3738 = load %object** %var_o 
; compilenode returning %var_val_o3738 
  %call3739 = call %object* @callmethod(%object* %var_val_o3738, i8* getelementptr([11 x i8]* @.str1979,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3739 
; compilenode returning %call3739 
; compilenode returning %call3739 
  ret %object* %call3739 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3741 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3749 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_usedvars3752 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3778 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compileidentifier 
; have closure method: 2 
define %object* @meth_compileidentifier3740(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_usedvars = getelementptr %object*** %closure, i32 0 
  %var_usedvars = load %object*** %varc_usedvars 
  %varc_auto_count = getelementptr %object*** %closure, i32 1 
  %var_auto_count = load %object*** %varc_auto_count 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_o3741 = load %object** %var_o 
; compilenode returning %var_val_o3741 
  %call3742 = call %object* @callmethod(%object* %var_val_o3741, i8* getelementptr([6 x i8]* @.str1981,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3742 
; compilenode returning %call3742 
; compilenode returning %call3742 
  %var_name = call %object** @alloc_var() 
  %var_name_dec = getelementptr %object* %call3742, i32 0 
  store %object* %var_name_dec, %object** %var_name 
; compilenode returning  
  br label %BeginIf3743 
BeginIf3743: 
  %var_val_name3744 = load %object** %var_name 
; compilenode returning %var_val_name3744 
  %str3745 = getelementptr [5 x i8]* @.str1982, i32 0, i32 0 
  %string3745 = call %object* @alloc_String(i8* %str3745) 
; compilenode returning %string3745 
  store %object* %string3745, %object** %params_0 
  %opresult3747 = call %object* @callmethod(%object* %var_val_name3744, i8* getelementptr([3 x i8]* @.str1983,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3747 
  %cond3743_valp = call i1 @istrue(%object* %opresult3747) 
  %cond3743 = icmp eq i1 0, %cond3743_valp 
br i1 %cond3743, label %FalseBranch3743, label %TrueBranch3743 
TrueBranch3743: 
; WARNING: non-local assigns not yet fully supported 
  %str3748 = getelementptr [6 x i8]* @.str1984, i32 0, i32 0 
  %string3748 = call %object* @alloc_String(i8* %str3748) 
; compilenode returning %string3748 
  store %object* %string3748, %object** %params_0 
  %var_val_o3749 = load %object** %var_o 
; compilenode returning %var_val_o3749 
  %call3750 = call %object* @callmethod(%object* %var_val_o3749, i8* getelementptr([11 x i8]* @.str1985,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3750 
; compilenode returning %call3750 
; compilenode returning %call3750 
  br label %EndIf3743 
FalseBranch3743: 
  %var_val_name3751 = load %object** %var_name 
; compilenode returning %var_val_name3751 
  store %object* %var_val_name3751, %object** %params_0 
  %var_val_usedvars3752 = load %object** %var_usedvars 
; compilenode returning %var_val_usedvars3752 
  %call3753 = call %object* @callmethod(%object* %var_val_usedvars3752, i8* getelementptr([5 x i8]* @.str1986,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3753 
; compilenode returning %call3753 
  %str3754 = getelementptr [12 x i8]* @.str1987, i32 0, i32 0 
  %string3754 = call %object* @alloc_String(i8* %str3754) 
; compilenode returning %string3754 
  %var_val_name3755 = load %object** %var_name 
; compilenode returning %var_val_name3755 
  %var_val_auto_count3756 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3756 
  %str3757 = getelementptr [19 x i8]* @.str1988, i32 0, i32 0 
  %string3757 = call %object* @alloc_String(i8* %str3757) 
; compilenode returning %string3757 
  %str3758 = getelementptr [6 x i8]* @.str1989, i32 0, i32 0 
  %string3758 = call %object* @alloc_String(i8* %str3758) 
; compilenode returning %string3758 
  %var_val_name3759 = load %object** %var_name 
; compilenode returning %var_val_name3759 
  store %object* %var_val_name3759, %object** %params_0 
  %opresult3761 = call %object* @callmethod(%object* %string3758, i8* getelementptr([3 x i8]* @.str1990,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3761 
  store %object* %opresult3761, %object** %params_0 
  %opresult3763 = call %object* @callmethod(%object* %string3757, i8* getelementptr([3 x i8]* @.str1991,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3763 
  store %object* %opresult3763, %object** %params_0 
  %opresult3765 = call %object* @callmethod(%object* %var_val_auto_count3756, i8* getelementptr([3 x i8]* @.str1992,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3765 
  store %object* %opresult3765, %object** %params_0 
  %opresult3767 = call %object* @callmethod(%object* %var_val_name3755, i8* getelementptr([3 x i8]* @.str1993,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3767 
  store %object* %opresult3767, %object** %params_0 
  %opresult3769 = call %object* @callmethod(%object* %string3754, i8* getelementptr([3 x i8]* @.str1994,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3769 
  store %object* %opresult3769, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3770 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str1995,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3770 
; compilenode returning %call3770 
; WARNING: non-local assigns not yet fully supported 
  %str3771 = getelementptr [10 x i8]* @.str1996, i32 0, i32 0 
  %string3771 = call %object* @alloc_String(i8* %str3771) 
; compilenode returning %string3771 
  %var_val_name3772 = load %object** %var_name 
; compilenode returning %var_val_name3772 
  %var_val_auto_count3773 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3773 
  store %object* %var_val_auto_count3773, %object** %params_0 
  %opresult3775 = call %object* @callmethod(%object* %var_val_name3772, i8* getelementptr([3 x i8]* @.str1997,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3775 
  store %object* %opresult3775, %object** %params_0 
  %opresult3777 = call %object* @callmethod(%object* %string3771, i8* getelementptr([3 x i8]* @.str1998,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3777 
  store %object* %opresult3777, %object** %params_0 
  %var_val_o3778 = load %object** %var_o 
; compilenode returning %var_val_o3778 
  %call3779 = call %object* @callmethod(%object* %var_val_o3778, i8* getelementptr([11 x i8]* @.str1999,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3779 
; compilenode returning %call3779 
; compilenode returning %call3779 
  %var_val_auto_count3780 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3780 
  %num3781 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3781 
  store %object* %num3781, %object** %params_0 
  %sum3783 = call %object* @callmethod(%object* %var_val_auto_count3780, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3783 
  store %object* %sum3783, %object** %var_auto_count 
; compilenode returning %sum3783 
  br label %EndIf3743 
EndIf3743: 
  %if3743 = phi %object* [ %call3750, %TrueBranch3743], [%sum3783, %FalseBranch3743] 
; compilenode returning %if3743 
  ret %object* %if3743 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3785 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3791 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3796 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3800 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_usedvars3803 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3817 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3820 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3827 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3832 
; got len 8 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3836 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3842 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3845 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3851 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_dest3856 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3858 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3864 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilebind 
; have closure method: 1 
define %object* @meth_compilebind3784(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_usedvars = getelementptr %object*** %closure, i32 0 
  %var_usedvars = load %object*** %varc_usedvars 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_o3785 = load %object** %var_o 
; compilenode returning %var_val_o3785 
  %call3786 = call %object* @callmethod(%object* %var_val_o3785, i8* getelementptr([5 x i8]* @.str2001,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3786 
; compilenode returning %call3786 
; compilenode returning %call3786 
  %var_dest = call %object** @alloc_var() 
  %var_dest_dec = getelementptr %object* %call3786, i32 0 
  store %object* %var_dest_dec, %object** %var_dest 
; compilenode returning  
  %str3787 = getelementptr [1 x i8]* @.str2002, i32 0, i32 0 
  %string3787 = call %object* @alloc_String(i8* %str3787) 
; compilenode returning %string3787 
  %var_val = call %object** @alloc_var() 
  %var_val_dec = getelementptr %object* %string3787, i32 0 
  store %object* %var_val_dec, %object** %var_val 
; compilenode returning  
  %str3788 = getelementptr [1 x i8]* @.str2003, i32 0, i32 0 
  %string3788 = call %object* @alloc_String(i8* %str3788) 
; compilenode returning %string3788 
  %var_c = call %object** @alloc_var() 
  %var_c_dec = getelementptr %object* %string3788, i32 0 
  store %object* %var_c_dec, %object** %var_c 
; compilenode returning  
  %str3789 = getelementptr [1 x i8]* @.str2004, i32 0, i32 0 
  %string3789 = call %object* @alloc_String(i8* %str3789) 
; compilenode returning %string3789 
  %var_r = call %object** @alloc_var() 
  %var_r_dec = getelementptr %object* %string3789, i32 0 
  store %object* %var_r_dec, %object** %var_r 
; compilenode returning  
  br label %BeginIf3790 
BeginIf3790: 
  %var_val_dest3791 = load %object** %var_dest 
; compilenode returning %var_val_dest3791 
  %call3792 = call %object* @callmethod(%object* %var_val_dest3791, i8* getelementptr([5 x i8]* @.str2005,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3792 
; compilenode returning %call3792 
; compilenode returning %call3792 
  %str3793 = getelementptr [11 x i8]* @.str2006, i32 0, i32 0 
  %string3793 = call %object* @alloc_String(i8* %str3793) 
; compilenode returning %string3793 
  store %object* %string3793, %object** %params_0 
  %opresult3795 = call %object* @callmethod(%object* %call3792, i8* getelementptr([3 x i8]* @.str2007,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3795 
  %cond3790_valp = call i1 @istrue(%object* %opresult3795) 
  %cond3790 = icmp eq i1 0, %cond3790_valp 
br i1 %cond3790, label %FalseBranch3790, label %TrueBranch3790 
TrueBranch3790: 
  %var_val_o3796 = load %object** %var_o 
; compilenode returning %var_val_o3796 
  %call3797 = call %object* @callmethod(%object* %var_val_o3796, i8* getelementptr([6 x i8]* @.str2008,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3797 
; compilenode returning %call3797 
; compilenode returning %call3797 
  store %object* %call3797, %object** %var_val 
; compilenode returning %call3797 
  %var_val_val3798 = load %object** %var_val 
; compilenode returning %var_val_val3798 
  store %object* %var_val_val3798, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3799 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2009,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3799 
; compilenode returning %call3799 
  store %object* %call3799, %object** %var_val 
; compilenode returning %call3799 
  %var_val_dest3800 = load %object** %var_dest 
; compilenode returning %var_val_dest3800 
  %call3801 = call %object* @callmethod(%object* %var_val_dest3800, i8* getelementptr([6 x i8]* @.str2010,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3801 
; compilenode returning %call3801 
; compilenode returning %call3801 
  %var_nm = call %object** @alloc_var() 
  %var_nm_dec = getelementptr %object* %call3801, i32 0 
  store %object* %var_nm_dec, %object** %var_nm 
; compilenode returning  
  %var_val_nm3802 = load %object** %var_nm 
; compilenode returning %var_val_nm3802 
  store %object* %var_val_nm3802, %object** %params_0 
  %var_val_usedvars3803 = load %object** %var_usedvars 
; compilenode returning %var_val_usedvars3803 
  %call3804 = call %object* @callmethod(%object* %var_val_usedvars3803, i8* getelementptr([5 x i8]* @.str2011,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3804 
; compilenode returning %call3804 
  %str3805 = getelementptr [18 x i8]* @.str2012, i32 0, i32 0 
  %string3805 = call %object* @alloc_String(i8* %str3805) 
; compilenode returning %string3805 
  %var_val_val3806 = load %object** %var_val 
; compilenode returning %var_val_val3806 
  %str3807 = getelementptr [18 x i8]* @.str2013, i32 0, i32 0 
  %string3807 = call %object* @alloc_String(i8* %str3807) 
; compilenode returning %string3807 
  %var_val_nm3808 = load %object** %var_nm 
; compilenode returning %var_val_nm3808 
  store %object* %var_val_nm3808, %object** %params_0 
  %opresult3810 = call %object* @callmethod(%object* %string3807, i8* getelementptr([3 x i8]* @.str2014,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3810 
  store %object* %opresult3810, %object** %params_0 
  %opresult3812 = call %object* @callmethod(%object* %var_val_val3806, i8* getelementptr([3 x i8]* @.str2015,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3812 
  store %object* %opresult3812, %object** %params_0 
  %opresult3814 = call %object* @callmethod(%object* %string3805, i8* getelementptr([3 x i8]* @.str2016,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3814 
  store %object* %opresult3814, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3815 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2017,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3815 
; compilenode returning %call3815 
; WARNING: non-local assigns not yet fully supported 
  %var_val_val3816 = load %object** %var_val 
; compilenode returning %var_val_val3816 
  store %object* %var_val_val3816, %object** %params_0 
  %var_val_o3817 = load %object** %var_o 
; compilenode returning %var_val_o3817 
  %call3818 = call %object* @callmethod(%object* %var_val_o3817, i8* getelementptr([11 x i8]* @.str2018,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3818 
; compilenode returning %call3818 
; compilenode returning %call3818 
  br label %EndIf3790 
FalseBranch3790: 
  br label %BeginIf3819 
BeginIf3819: 
  %var_val_dest3820 = load %object** %var_dest 
; compilenode returning %var_val_dest3820 
  %call3821 = call %object* @callmethod(%object* %var_val_dest3820, i8* getelementptr([5 x i8]* @.str2019,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3821 
; compilenode returning %call3821 
; compilenode returning %call3821 
  %str3822 = getelementptr [7 x i8]* @.str2020, i32 0, i32 0 
  %string3822 = call %object* @alloc_String(i8* %str3822) 
; compilenode returning %string3822 
  store %object* %string3822, %object** %params_0 
  %opresult3824 = call %object* @callmethod(%object* %call3821, i8* getelementptr([3 x i8]* @.str2021,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3824 
  %cond3819_valp = call i1 @istrue(%object* %opresult3824) 
  %cond3819 = icmp eq i1 0, %cond3819_valp 
br i1 %cond3819, label %EndIf3819, label %TrueBranch3819 
TrueBranch3819: 
  %str3825 = getelementptr [53 x i8]* @.str2022, i32 0, i32 0 
  %string3825 = call %object* @alloc_String(i8* %str3825) 
; compilenode returning %string3825 
  store %object* %string3825, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3826 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2023,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3826 
; compilenode returning %call3826 
; WARNING: non-local assigns not yet fully supported 
  %var_val_dest3827 = load %object** %var_dest 
; compilenode returning %var_val_dest3827 
  %call3828 = call %object* @callmethod(%object* %var_val_dest3827, i8* getelementptr([6 x i8]* @.str2024,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3828 
; compilenode returning %call3828 
; compilenode returning %call3828 
  %str3829 = getelementptr [3 x i8]* @.str2025, i32 0, i32 0 
  %string3829 = call %object* @alloc_String(i8* %str3829) 
; compilenode returning %string3829 
  store %object* %string3829, %object** %params_0 
  %opresult3831 = call %object* @callmethod(%object* %call3828, i8* getelementptr([3 x i8]* @.str2026,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3831 
  store %object* %opresult3831, %object** %params_0 
  %var_val_dest3832 = load %object** %var_dest 
; compilenode returning %var_val_dest3832 
  %call3833 = call %object* @callmethod(%object* %var_val_dest3832, i8* getelementptr([8 x i8]* @.str2027,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3833 
; compilenode returning %call3833 
; compilenode returning %call3833 
  %var_val_dest3834 = load %object** %var_dest 
; compilenode returning %var_val_dest3834 
  %array3835 = call %object* @alloc_Array() 
  %var_val_o3836 = load %object** %var_o 
; compilenode returning %var_val_o3836 
  %call3837 = call %object* @callmethod(%object* %var_val_o3836, i8* getelementptr([6 x i8]* @.str2028,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3837 
; compilenode returning %call3837 
; compilenode returning %call3837 
  store %object* %call3837, %object** %params_0 
  call %object* @callmethod(%object* %array3835, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array3835 
  store %object* %var_val_dest3834, %object** %params_0 
  store %object* %array3835, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call3838 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str2029,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call3838 
; compilenode returning %call3838 
  store %object* %call3838, %object** %var_c 
; compilenode returning %call3838 
  %var_val_c3839 = load %object** %var_c 
; compilenode returning %var_val_c3839 
  store %object* %var_val_c3839, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3840 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2030,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3840 
; compilenode returning %call3840 
  store %object* %call3840, %object** %var_r 
; compilenode returning %call3840 
; WARNING: non-local assigns not yet fully supported 
  %var_val_r3841 = load %object** %var_r 
; compilenode returning %var_val_r3841 
  store %object* %var_val_r3841, %object** %params_0 
  %var_val_o3842 = load %object** %var_o 
; compilenode returning %var_val_o3842 
  %call3843 = call %object* @callmethod(%object* %var_val_o3842, i8* getelementptr([11 x i8]* @.str2031,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3843 
; compilenode returning %call3843 
; compilenode returning %call3843 
  br label %EndIf3819 
EndIf3819: 
  %if3819 = phi %object* [ %call3843, %TrueBranch3819], [%opresult3824, %BeginIf3819] 
; compilenode returning %if3819 
  br label %BeginIf3844 
BeginIf3844: 
  %var_val_dest3845 = load %object** %var_dest 
; compilenode returning %var_val_dest3845 
  %call3846 = call %object* @callmethod(%object* %var_val_dest3845, i8* getelementptr([5 x i8]* @.str2032,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3846 
; compilenode returning %call3846 
; compilenode returning %call3846 
  %str3847 = getelementptr [6 x i8]* @.str2033, i32 0, i32 0 
  %string3847 = call %object* @alloc_String(i8* %str3847) 
; compilenode returning %string3847 
  store %object* %string3847, %object** %params_0 
  %opresult3849 = call %object* @callmethod(%object* %call3846, i8* getelementptr([3 x i8]* @.str2034,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3849 
  %cond3844_valp = call i1 @istrue(%object* %opresult3849) 
  %cond3844 = icmp eq i1 0, %cond3844_valp 
br i1 %cond3844, label %EndIf3844, label %TrueBranch3844 
TrueBranch3844: 
  %str3850 = getelementptr [5 x i8]* @.str2035, i32 0, i32 0 
  %string3850 = call %object* @alloc_String(i8* %str3850) 
; compilenode returning %string3850 
  %var_val_dest3851 = load %object** %var_dest 
; compilenode returning %var_val_dest3851 
  %call3852 = call %object* @callmethod(%object* %var_val_dest3851, i8* getelementptr([6 x i8]* @.str2036,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3852 
; compilenode returning %call3852 
; compilenode returning %call3852 
  store %object* %string3850, %object** %params_0 
  store %object* %call3852, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call3853 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str2037,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call3853 
; compilenode returning %call3853 
  %var_imem = call %object** @alloc_var() 
  %var_imem_dec = getelementptr %object* %call3853, i32 0 
  store %object* %var_imem_dec, %object** %var_imem 
; compilenode returning  
  %var_val_imem3854 = load %object** %var_imem 
; compilenode returning %var_val_imem3854 
  %array3855 = call %object* @alloc_Array() 
  %var_val_dest3856 = load %object** %var_dest 
; compilenode returning %var_val_dest3856 
  %call3857 = call %object* @callmethod(%object* %var_val_dest3856, i8* getelementptr([6 x i8]* @.str2038,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3857 
; compilenode returning %call3857 
; compilenode returning %call3857 
  store %object* %call3857, %object** %params_0 
  call %object* @callmethod(%object* %array3855, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %var_val_o3858 = load %object** %var_o 
; compilenode returning %var_val_o3858 
  %call3859 = call %object* @callmethod(%object* %var_val_o3858, i8* getelementptr([6 x i8]* @.str2039,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3859 
; compilenode returning %call3859 
; compilenode returning %call3859 
  store %object* %call3859, %object** %params_0 
  call %object* @callmethod(%object* %array3855, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array3855 
  store %object* %var_val_imem3854, %object** %params_0 
  store %object* %array3855, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call3860 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str2040,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call3860 
; compilenode returning %call3860 
  store %object* %call3860, %object** %var_c 
; compilenode returning %call3860 
  %var_val_c3861 = load %object** %var_c 
; compilenode returning %var_val_c3861 
  store %object* %var_val_c3861, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3862 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2041,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3862 
; compilenode returning %call3862 
  store %object* %call3862, %object** %var_r 
; compilenode returning %call3862 
; WARNING: non-local assigns not yet fully supported 
  %var_val_r3863 = load %object** %var_r 
; compilenode returning %var_val_r3863 
  store %object* %var_val_r3863, %object** %params_0 
  %var_val_o3864 = load %object** %var_o 
; compilenode returning %var_val_o3864 
  %call3865 = call %object* @callmethod(%object* %var_val_o3864, i8* getelementptr([11 x i8]* @.str2042,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3865 
; compilenode returning %call3865 
; compilenode returning %call3865 
  br label %EndIf3844 
EndIf3844: 
  %if3844 = phi %object* [ %call3865, %TrueBranch3844], [%opresult3849, %BeginIf3844] 
; compilenode returning %if3844 
  br label %EndIf3790 
EndIf3790: 
  %if3790 = phi %object* [ %call3818, %TrueBranch3790], [%if3844, %EndIf3844] 
; compilenode returning %if3790 
  ret %object* %if3790 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_o3867 
; got len 5 
; created con 
; pushed statement 
; compiled in to %call3868 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_declaredvars3871 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3873 
; got len 6 
; created con 
; pushed statement 
define %object* @reader_type_3881(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_type_3881(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 0 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_value_3883(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_value_3883(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 1 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
define %object* @reader_register_3885(%object* %self, i32 %nparams, %object** %args) { 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  %tmp2 = load %object** %arrayidx 
  ret %object* %tmp2 
} 
define %object* @writer_register_3885(%object* %self, i32 %nparams, %object** %args) { 
  %params = getelementptr %object** %args, i32 0 
  %par0 = load %object** %params 
  %dt = getelementptr %object* %self, i32 0, i32 2 
  %tmp1 = load %object*** %dt 
  %arrayidx = getelementptr %object** %tmp1, i32 2 
  store %object* %par0, %object** %arrayidx 
  ret %object* %par0 
} 
;;;; METHOD DEFINITION: compilevardec 
; have closure method: 1 
define %object* @meth_compilevardec3866(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_declaredvars = getelementptr %object*** %closure, i32 0 
  %var_declaredvars = load %object*** %varc_declaredvars 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_o3867 = load %object** %var_o 
; compilenode returning %var_val_o3867 
  %call3868 = call %object* @callmethod(%object* %var_val_o3867, i8* getelementptr([5 x i8]* @.str2044,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3868 
; compilenode returning %call3868 
; compilenode returning %call3868 
  %call3869 = call %object* @callmethod(%object* %call3868, i8* getelementptr([6 x i8]* @.str2045,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3869 
; compilenode returning %call3869 
; compilenode returning %call3869 
  %var_nm = call %object** @alloc_var() 
  %var_nm_dec = getelementptr %object* %call3869, i32 0 
  store %object* %var_nm_dec, %object** %var_nm 
; compilenode returning  
  %var_val_nm3870 = load %object** %var_nm 
; compilenode returning %var_val_nm3870 
  store %object* %var_val_nm3870, %object** %params_0 
  %var_val_declaredvars3871 = load %object** %var_declaredvars 
; compilenode returning %var_val_declaredvars3871 
  %call3872 = call %object* @callmethod(%object* %var_val_declaredvars3871, i8* getelementptr([5 x i8]* @.str2046,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3872 
; compilenode returning %call3872 
  %var_val_o3873 = load %object** %var_o 
; compilenode returning %var_val_o3873 
  %call3874 = call %object* @callmethod(%object* %var_val_o3873, i8* getelementptr([6 x i8]* @.str2047,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3874 
; compilenode returning %call3874 
; compilenode returning %call3874 
  %var_val = call %object** @alloc_var() 
  %var_val_dec = getelementptr %object* %call3874, i32 0 
  store %object* %var_val_dec, %object** %var_val 
; compilenode returning  
  br label %BeginIf3875 
BeginIf3875: 
  %var_val_val3876 = load %object** %var_val 
; compilenode returning %var_val_val3876 
  %cond3875_valp = call i1 @istrue(%object* %var_val_val3876) 
  %cond3875 = icmp eq i1 0, %cond3875_valp 
br i1 %cond3875, label %FalseBranch3875, label %TrueBranch3875 
TrueBranch3875: 
  %var_val_val3877 = load %object** %var_val 
; compilenode returning %var_val_val3877 
  store %object* %var_val_val3877, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3878 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2048,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3878 
; compilenode returning %call3878 
  store %object* %call3878, %object** %var_val 
; compilenode returning %call3878 
  br label %EndIf3875 
FalseBranch3875: 
  %obj3879 = call %object* @alloc_obj() 
  %str3880 = getelementptr [11 x i8]* @.str2049, i32 0, i32 0 
  %string3880 = call %object* @alloc_String(i8* %str3880) 
; compilenode returning %string3880 
; OBJECT VAR DEC type 
  call void @adddatum(%object* %obj3879, %object* %string3880, i32 0) 
  call void @addmethod(%object* %obj3879, i8* getelementptr([5 x i8]* @.str.methname3881, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_type_3881)) 
  call void @addmethod(%object* %obj3879, i8* getelementptr([7 x i8]* @.str.methnamew3881, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_type_3881)) 
  %str3882 = getelementptr [6 x i8]* @.str2052, i32 0, i32 0 
  %string3882 = call %object* @alloc_String(i8* %str3882) 
; compilenode returning %string3882 
; OBJECT VAR DEC value 
  call void @adddatum(%object* %obj3879, %object* %string3882, i32 1) 
  call void @addmethod(%object* %obj3879, i8* getelementptr([6 x i8]* @.str.methname3883, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_value_3883)) 
  call void @addmethod(%object* %obj3879, i8* getelementptr([8 x i8]* @.str.methnamew3883, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_value_3883)) 
  %str3884 = getelementptr [1 x i8]* @.str2055, i32 0, i32 0 
  %string3884 = call %object* @alloc_String(i8* %str3884) 
; compilenode returning %string3884 
; OBJECT VAR DEC register 
  call void @adddatum(%object* %obj3879, %object* %string3884, i32 2) 
  call void @addmethod(%object* %obj3879, i8* getelementptr([9 x i8]* @.str.methname3885, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_register_3885)) 
  call void @addmethod(%object* %obj3879, i8* getelementptr([11 x i8]* @.str.methnamew3885, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_register_3885)) 
; compilenode returning %obj3879 
  store %object* %obj3879, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3886 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2058,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3886 
; compilenode returning %call3886 
  store %object* %call3886, %object** %var_val 
; compilenode returning %call3886 
  br label %EndIf3875 
EndIf3875: 
  %if3875 = phi %object* [ %call3878, %TrueBranch3875], [%call3886, %FalseBranch3875] 
; compilenode returning %if3875 
  %str3887 = getelementptr [8 x i8]* @.str2059, i32 0, i32 0 
  %string3887 = call %object* @alloc_String(i8* %str3887) 
; compilenode returning %string3887 
  %var_val_nm3888 = load %object** %var_nm 
; compilenode returning %var_val_nm3888 
  %str3889 = getelementptr [31 x i8]* @.str2060, i32 0, i32 0 
  %string3889 = call %object* @alloc_String(i8* %str3889) 
; compilenode returning %string3889 
  store %object* %string3889, %object** %params_0 
  %opresult3891 = call %object* @callmethod(%object* %var_val_nm3888, i8* getelementptr([3 x i8]* @.str2061,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3891 
  store %object* %opresult3891, %object** %params_0 
  %opresult3893 = call %object* @callmethod(%object* %string3887, i8* getelementptr([3 x i8]* @.str2062,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3893 
  store %object* %opresult3893, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3894 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2063,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3894 
; compilenode returning %call3894 
  %str3895 = getelementptr [8 x i8]* @.str2064, i32 0, i32 0 
  %string3895 = call %object* @alloc_String(i8* %str3895) 
; compilenode returning %string3895 
  %var_val_nm3896 = load %object** %var_nm 
; compilenode returning %var_val_nm3896 
  %str3897 = getelementptr [31 x i8]* @.str2065, i32 0, i32 0 
  %string3897 = call %object* @alloc_String(i8* %str3897) 
; compilenode returning %string3897 
  %var_val_val3898 = load %object** %var_val 
; compilenode returning %var_val_val3898 
  %str3899 = getelementptr [8 x i8]* @.str2066, i32 0, i32 0 
  %string3899 = call %object* @alloc_String(i8* %str3899) 
; compilenode returning %string3899 
  store %object* %string3899, %object** %params_0 
  %opresult3901 = call %object* @callmethod(%object* %var_val_val3898, i8* getelementptr([3 x i8]* @.str2067,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3901 
  store %object* %opresult3901, %object** %params_0 
  %opresult3903 = call %object* @callmethod(%object* %string3897, i8* getelementptr([3 x i8]* @.str2068,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3903 
  store %object* %opresult3903, %object** %params_0 
  %opresult3905 = call %object* @callmethod(%object* %var_val_nm3896, i8* getelementptr([3 x i8]* @.str2069,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3905 
  store %object* %opresult3905, %object** %params_0 
  %opresult3907 = call %object* @callmethod(%object* %string3895, i8* getelementptr([3 x i8]* @.str2070,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3907 
  store %object* %opresult3907, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3908 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2071,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3908 
; compilenode returning %call3908 
  %str3909 = getelementptr [23 x i8]* @.str2072, i32 0, i32 0 
  %string3909 = call %object* @alloc_String(i8* %str3909) 
; compilenode returning %string3909 
  %var_val_nm3910 = load %object** %var_nm 
; compilenode returning %var_val_nm3910 
  %str3911 = getelementptr [22 x i8]* @.str2073, i32 0, i32 0 
  %string3911 = call %object* @alloc_String(i8* %str3911) 
; compilenode returning %string3911 
  %var_val_nm3912 = load %object** %var_nm 
; compilenode returning %var_val_nm3912 
  store %object* %var_val_nm3912, %object** %params_0 
  %opresult3914 = call %object* @callmethod(%object* %string3911, i8* getelementptr([3 x i8]* @.str2074,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3914 
  store %object* %opresult3914, %object** %params_0 
  %opresult3916 = call %object* @callmethod(%object* %var_val_nm3910, i8* getelementptr([3 x i8]* @.str2075,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3916 
  store %object* %opresult3916, %object** %params_0 
  %opresult3918 = call %object* @callmethod(%object* %string3909, i8* getelementptr([3 x i8]* @.str2076,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3918 
  store %object* %opresult3918, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3919 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2077,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3919 
; compilenode returning %call3919 
  ret %object* %call3919 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3921 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3924 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3956 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compileindex 
; have closure method: 1 
define %object* @meth_compileindex3920(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_o3921 = load %object** %var_o 
; compilenode returning %var_val_o3921 
  %call3922 = call %object* @callmethod(%object* %var_val_o3921, i8* getelementptr([6 x i8]* @.str2079,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3922 
; compilenode returning %call3922 
; compilenode returning %call3922 
  store %object* %call3922, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3923 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2080,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3923 
; compilenode returning %call3923 
  %var_of = call %object** @alloc_var() 
  %var_of_dec = getelementptr %object* %call3923, i32 0 
  store %object* %var_of_dec, %object** %var_of 
; compilenode returning  
  %var_val_o3924 = load %object** %var_o 
; compilenode returning %var_val_o3924 
  %call3925 = call %object* @callmethod(%object* %var_val_o3924, i8* getelementptr([6 x i8]* @.str2081,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3925 
; compilenode returning %call3925 
; compilenode returning %call3925 
  store %object* %call3925, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3926 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2082,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3926 
; compilenode returning %call3926 
  %var_index = call %object** @alloc_var() 
  %var_index_dec = getelementptr %object* %call3926, i32 0 
  store %object* %var_index_dec, %object** %var_index 
; compilenode returning  
  %str3927 = getelementptr [18 x i8]* @.str2083, i32 0, i32 0 
  %string3927 = call %object* @alloc_String(i8* %str3927) 
; compilenode returning %string3927 
  %var_val_index3928 = load %object** %var_index 
; compilenode returning %var_val_index3928 
  %str3929 = getelementptr [22 x i8]* @.str2084, i32 0, i32 0 
  %string3929 = call %object* @alloc_String(i8* %str3929) 
; compilenode returning %string3929 
  store %object* %string3929, %object** %params_0 
  %opresult3931 = call %object* @callmethod(%object* %var_val_index3928, i8* getelementptr([3 x i8]* @.str2085,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3931 
  store %object* %opresult3931, %object** %params_0 
  %opresult3933 = call %object* @callmethod(%object* %string3927, i8* getelementptr([3 x i8]* @.str2086,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3933 
  store %object* %opresult3933, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3934 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2087,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3934 
; compilenode returning %call3934 
  %str3935 = getelementptr [10 x i8]* @.str2088, i32 0, i32 0 
  %string3935 = call %object* @alloc_String(i8* %str3935) 
; compilenode returning %string3935 
  %var_val_auto_count3936 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3936 
  %str3937 = getelementptr [39 x i8]* @.str2089, i32 0, i32 0 
  %string3937 = call %object* @alloc_String(i8* %str3937) 
; compilenode returning %string3937 
  %var_val_of3938 = load %object** %var_of 
; compilenode returning %var_val_of3938 
  %str3939 = getelementptr [43 x i8]* @.str2090, i32 0, i32 0 
  %string3939 = call %object* @alloc_String(i8* %str3939) 
; compilenode returning %string3939 
  %str3940 = getelementptr [41 x i8]* @.str2091, i32 0, i32 0 
  %string3940 = call %object* @alloc_String(i8* %str3940) 
; compilenode returning %string3940 
  store %object* %string3940, %object** %params_0 
  %opresult3942 = call %object* @callmethod(%object* %string3939, i8* getelementptr([3 x i8]* @.str2092,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3942 
  store %object* %opresult3942, %object** %params_0 
  %opresult3944 = call %object* @callmethod(%object* %var_val_of3938, i8* getelementptr([3 x i8]* @.str2093,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3944 
  store %object* %opresult3944, %object** %params_0 
  %opresult3946 = call %object* @callmethod(%object* %string3937, i8* getelementptr([3 x i8]* @.str2094,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3946 
  store %object* %opresult3946, %object** %params_0 
  %opresult3948 = call %object* @callmethod(%object* %var_val_auto_count3936, i8* getelementptr([3 x i8]* @.str2095,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3948 
  store %object* %opresult3948, %object** %params_0 
  %opresult3950 = call %object* @callmethod(%object* %string3935, i8* getelementptr([3 x i8]* @.str2096,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3950 
  store %object* %opresult3950, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3951 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2097,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3951 
; compilenode returning %call3951 
; WARNING: non-local assigns not yet fully supported 
  %str3952 = getelementptr [8 x i8]* @.str2098, i32 0, i32 0 
  %string3952 = call %object* @alloc_String(i8* %str3952) 
; compilenode returning %string3952 
  %var_val_auto_count3953 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3953 
  store %object* %var_val_auto_count3953, %object** %params_0 
  %opresult3955 = call %object* @callmethod(%object* %string3952, i8* getelementptr([3 x i8]* @.str2099,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3955 
  store %object* %opresult3955, %object** %params_0 
  %var_val_o3956 = load %object** %var_o 
; compilenode returning %var_val_o3956 
  %call3957 = call %object* @callmethod(%object* %var_val_o3956, i8* getelementptr([11 x i8]* @.str2100,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3957 
; compilenode returning %call3957 
; compilenode returning %call3957 
  %var_val_auto_count3958 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3958 
  %num3959 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3959 
  store %object* %num3959, %object** %params_0 
  %sum3961 = call %object* @callmethod(%object* %var_val_auto_count3958, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3961 
  store %object* %sum3961, %object** %var_auto_count 
; compilenode returning %sum3961 
  ret %object* %sum3961 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o3963 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3966 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3974 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3979 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3984 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3989 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o3994 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4010 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4018 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4026 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4034 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4079 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4085 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4092 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4098 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4131 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4154 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4160 
; got len 11 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compileop 
; have closure method: 2 
define %object* @meth_compileop3962(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_constants = getelementptr %object*** %closure, i32 1 
  %var_constants = load %object*** %varc_constants 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_o3963 = load %object** %var_o 
; compilenode returning %var_val_o3963 
  %call3964 = call %object* @callmethod(%object* %var_val_o3963, i8* getelementptr([5 x i8]* @.str2102,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3964 
; compilenode returning %call3964 
; compilenode returning %call3964 
  store %object* %call3964, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3965 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2103,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3965 
; compilenode returning %call3965 
  %var_left = call %object** @alloc_var() 
  %var_left_dec = getelementptr %object* %call3965, i32 0 
  store %object* %var_left_dec, %object** %var_left 
; compilenode returning  
  %var_val_o3966 = load %object** %var_o 
; compilenode returning %var_val_o3966 
  %call3967 = call %object* @callmethod(%object* %var_val_o3966, i8* getelementptr([6 x i8]* @.str2104,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3967 
; compilenode returning %call3967 
; compilenode returning %call3967 
  store %object* %call3967, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call3968 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2105,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call3968 
; compilenode returning %call3968 
  %var_right = call %object** @alloc_var() 
  %var_right_dec = getelementptr %object* %call3968, i32 0 
  store %object* %var_right_dec, %object** %var_right 
; compilenode returning  
  %var_val_auto_count3969 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count3969 
  %num3970 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num3970 
  store %object* %num3970, %object** %params_0 
  %sum3972 = call %object* @callmethod(%object* %var_val_auto_count3969, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum3972 
  store %object* %sum3972, %object** %var_auto_count 
; compilenode returning %sum3972 
  br label %BeginIf3973 
BeginIf3973: 
  %var_val_o3974 = load %object** %var_o 
; compilenode returning %var_val_o3974 
  %call3975 = call %object* @callmethod(%object* %var_val_o3974, i8* getelementptr([6 x i8]* @.str2106,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3975 
; compilenode returning %call3975 
; compilenode returning %call3975 
  %str3976 = getelementptr [2 x i8]* @.str2107, i32 0, i32 0 
  %string3976 = call %object* @alloc_String(i8* %str3976) 
; compilenode returning %string3976 
  store %object* %string3976, %object** %params_0 
  %opresult3978 = call %object* @callmethod(%object* %call3975, i8* getelementptr([3 x i8]* @.str2108,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3978 
  %var_val_o3979 = load %object** %var_o 
; compilenode returning %var_val_o3979 
  %call3980 = call %object* @callmethod(%object* %var_val_o3979, i8* getelementptr([6 x i8]* @.str2109,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3980 
; compilenode returning %call3980 
; compilenode returning %call3980 
  %str3981 = getelementptr [2 x i8]* @.str2110, i32 0, i32 0 
  %string3981 = call %object* @alloc_String(i8* %str3981) 
; compilenode returning %string3981 
  store %object* %string3981, %object** %params_0 
  %opresult3983 = call %object* @callmethod(%object* %call3980, i8* getelementptr([3 x i8]* @.str2111,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3983 
  %var_val_o3984 = load %object** %var_o 
; compilenode returning %var_val_o3984 
  %call3985 = call %object* @callmethod(%object* %var_val_o3984, i8* getelementptr([6 x i8]* @.str2112,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3985 
; compilenode returning %call3985 
; compilenode returning %call3985 
  %str3986 = getelementptr [2 x i8]* @.str2113, i32 0, i32 0 
  %string3986 = call %object* @alloc_String(i8* %str3986) 
; compilenode returning %string3986 
  store %object* %string3986, %object** %params_0 
  %opresult3988 = call %object* @callmethod(%object* %call3985, i8* getelementptr([3 x i8]* @.str2114,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3988 
  %var_val_o3989 = load %object** %var_o 
; compilenode returning %var_val_o3989 
  %call3990 = call %object* @callmethod(%object* %var_val_o3989, i8* getelementptr([6 x i8]* @.str2115,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3990 
; compilenode returning %call3990 
; compilenode returning %call3990 
  %str3991 = getelementptr [2 x i8]* @.str2116, i32 0, i32 0 
  %string3991 = call %object* @alloc_String(i8* %str3991) 
; compilenode returning %string3991 
  store %object* %string3991, %object** %params_0 
  %opresult3993 = call %object* @callmethod(%object* %call3990, i8* getelementptr([3 x i8]* @.str2117,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3993 
  %var_val_o3994 = load %object** %var_o 
; compilenode returning %var_val_o3994 
  %call3995 = call %object* @callmethod(%object* %var_val_o3994, i8* getelementptr([6 x i8]* @.str2118,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call3995 
; compilenode returning %call3995 
; compilenode returning %call3995 
  %str3996 = getelementptr [2 x i8]* @.str2119, i32 0, i32 0 
  %string3996 = call %object* @alloc_String(i8* %str3996) 
; compilenode returning %string3996 
  store %object* %string3996, %object** %params_0 
  %opresult3998 = call %object* @callmethod(%object* %call3995, i8* getelementptr([3 x i8]* @.str2120,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult3998 
  store %object* %opresult3998, %object** %params_0 
  %opresult4000 = call %object* @callmethod(%object* %opresult3993, i8* getelementptr([2 x i8]* @.str2121,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4000 
  store %object* %opresult4000, %object** %params_0 
  %opresult4002 = call %object* @callmethod(%object* %opresult3988, i8* getelementptr([2 x i8]* @.str2122,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4002 
  store %object* %opresult4002, %object** %params_0 
  %opresult4004 = call %object* @callmethod(%object* %opresult3983, i8* getelementptr([2 x i8]* @.str2123,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4004 
  store %object* %opresult4004, %object** %params_0 
  %opresult4006 = call %object* @callmethod(%object* %opresult3978, i8* getelementptr([2 x i8]* @.str2124,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4006 
  %cond3973_valp = call i1 @istrue(%object* %opresult4006) 
  %cond3973 = icmp eq i1 0, %cond3973_valp 
br i1 %cond3973, label %FalseBranch3973, label %TrueBranch3973 
TrueBranch3973: 
  %str4007 = getelementptr [4 x i8]* @.str2125, i32 0, i32 0 
  %string4007 = call %object* @alloc_String(i8* %str4007) 
; compilenode returning %string4007 
  %var_rnm = call %object** @alloc_var() 
  %var_rnm_dec = getelementptr %object* %string4007, i32 0 
  store %object* %var_rnm_dec, %object** %var_rnm 
; compilenode returning  
  %str4008 = getelementptr [5 x i8]* @.str2126, i32 0, i32 0 
  %string4008 = call %object* @alloc_String(i8* %str4008) 
; compilenode returning %string4008 
  %var_opnm = call %object** @alloc_var() 
  %var_opnm_dec = getelementptr %object* %string4008, i32 0 
  store %object* %var_opnm_dec, %object** %var_opnm 
; compilenode returning  
  br label %BeginIf4009 
BeginIf4009: 
  %var_val_o4010 = load %object** %var_o 
; compilenode returning %var_val_o4010 
  %call4011 = call %object* @callmethod(%object* %var_val_o4010, i8* getelementptr([6 x i8]* @.str2127,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4011 
; compilenode returning %call4011 
; compilenode returning %call4011 
  %str4012 = getelementptr [2 x i8]* @.str2128, i32 0, i32 0 
  %string4012 = call %object* @alloc_String(i8* %str4012) 
; compilenode returning %string4012 
  store %object* %string4012, %object** %params_0 
  %opresult4014 = call %object* @callmethod(%object* %call4011, i8* getelementptr([3 x i8]* @.str2129,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4014 
  %cond4009_valp = call i1 @istrue(%object* %opresult4014) 
  %cond4009 = icmp eq i1 0, %cond4009_valp 
br i1 %cond4009, label %EndIf4009, label %TrueBranch4009 
TrueBranch4009: 
  %str4015 = getelementptr [5 x i8]* @.str2130, i32 0, i32 0 
  %string4015 = call %object* @alloc_String(i8* %str4015) 
; compilenode returning %string4015 
  store %object* %string4015, %object** %var_rnm 
; compilenode returning %string4015 
  %str4016 = getelementptr [9 x i8]* @.str2131, i32 0, i32 0 
  %string4016 = call %object* @alloc_String(i8* %str4016) 
; compilenode returning %string4016 
  store %object* %string4016, %object** %var_opnm 
; compilenode returning %string4016 
  br label %EndIf4009 
EndIf4009: 
  %if4009 = phi %object* [ %string4016, %TrueBranch4009], [%opresult4014, %BeginIf4009] 
; compilenode returning %if4009 
  br label %BeginIf4017 
BeginIf4017: 
  %var_val_o4018 = load %object** %var_o 
; compilenode returning %var_val_o4018 
  %call4019 = call %object* @callmethod(%object* %var_val_o4018, i8* getelementptr([6 x i8]* @.str2132,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4019 
; compilenode returning %call4019 
; compilenode returning %call4019 
  %str4020 = getelementptr [2 x i8]* @.str2133, i32 0, i32 0 
  %string4020 = call %object* @alloc_String(i8* %str4020) 
; compilenode returning %string4020 
  store %object* %string4020, %object** %params_0 
  %opresult4022 = call %object* @callmethod(%object* %call4019, i8* getelementptr([3 x i8]* @.str2134,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4022 
  %cond4017_valp = call i1 @istrue(%object* %opresult4022) 
  %cond4017 = icmp eq i1 0, %cond4017_valp 
br i1 %cond4017, label %EndIf4017, label %TrueBranch4017 
TrueBranch4017: 
  %str4023 = getelementptr [9 x i8]* @.str2135, i32 0, i32 0 
  %string4023 = call %object* @alloc_String(i8* %str4023) 
; compilenode returning %string4023 
  store %object* %string4023, %object** %var_rnm 
; compilenode returning %string4023 
  %str4024 = getelementptr [6 x i8]* @.str2136, i32 0, i32 0 
  %string4024 = call %object* @alloc_String(i8* %str4024) 
; compilenode returning %string4024 
  store %object* %string4024, %object** %var_opnm 
; compilenode returning %string4024 
  br label %EndIf4017 
EndIf4017: 
  %if4017 = phi %object* [ %string4024, %TrueBranch4017], [%opresult4022, %BeginIf4017] 
; compilenode returning %if4017 
  br label %BeginIf4025 
BeginIf4025: 
  %var_val_o4026 = load %object** %var_o 
; compilenode returning %var_val_o4026 
  %call4027 = call %object* @callmethod(%object* %var_val_o4026, i8* getelementptr([6 x i8]* @.str2137,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4027 
; compilenode returning %call4027 
; compilenode returning %call4027 
  %str4028 = getelementptr [2 x i8]* @.str2138, i32 0, i32 0 
  %string4028 = call %object* @alloc_String(i8* %str4028) 
; compilenode returning %string4028 
  store %object* %string4028, %object** %params_0 
  %opresult4030 = call %object* @callmethod(%object* %call4027, i8* getelementptr([3 x i8]* @.str2139,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4030 
  %cond4025_valp = call i1 @istrue(%object* %opresult4030) 
  %cond4025 = icmp eq i1 0, %cond4025_valp 
br i1 %cond4025, label %EndIf4025, label %TrueBranch4025 
TrueBranch4025: 
  %str4031 = getelementptr [5 x i8]* @.str2140, i32 0, i32 0 
  %string4031 = call %object* @alloc_String(i8* %str4031) 
; compilenode returning %string4031 
  store %object* %string4031, %object** %var_rnm 
; compilenode returning %string4031 
  %str4032 = getelementptr [6 x i8]* @.str2141, i32 0, i32 0 
  %string4032 = call %object* @alloc_String(i8* %str4032) 
; compilenode returning %string4032 
  store %object* %string4032, %object** %var_opnm 
; compilenode returning %string4032 
  br label %EndIf4025 
EndIf4025: 
  %if4025 = phi %object* [ %string4032, %TrueBranch4025], [%opresult4030, %BeginIf4025] 
; compilenode returning %if4025 
  br label %BeginIf4033 
BeginIf4033: 
  %var_val_o4034 = load %object** %var_o 
; compilenode returning %var_val_o4034 
  %call4035 = call %object* @callmethod(%object* %var_val_o4034, i8* getelementptr([6 x i8]* @.str2142,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4035 
; compilenode returning %call4035 
; compilenode returning %call4035 
  %str4036 = getelementptr [2 x i8]* @.str2143, i32 0, i32 0 
  %string4036 = call %object* @alloc_String(i8* %str4036) 
; compilenode returning %string4036 
  store %object* %string4036, %object** %params_0 
  %opresult4038 = call %object* @callmethod(%object* %call4035, i8* getelementptr([3 x i8]* @.str2144,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4038 
  %cond4033_valp = call i1 @istrue(%object* %opresult4038) 
  %cond4033 = icmp eq i1 0, %cond4033_valp 
br i1 %cond4033, label %EndIf4033, label %TrueBranch4033 
TrueBranch4033: 
  %str4039 = getelementptr [8 x i8]* @.str2145, i32 0, i32 0 
  %string4039 = call %object* @alloc_String(i8* %str4039) 
; compilenode returning %string4039 
  store %object* %string4039, %object** %var_rnm 
; compilenode returning %string4039 
  %str4040 = getelementptr [8 x i8]* @.str2146, i32 0, i32 0 
  %string4040 = call %object* @alloc_String(i8* %str4040) 
; compilenode returning %string4040 
  store %object* %string4040, %object** %var_opnm 
; compilenode returning %string4040 
  br label %EndIf4033 
EndIf4033: 
  %if4033 = phi %object* [ %string4040, %TrueBranch4033], [%opresult4038, %BeginIf4033] 
; compilenode returning %if4033 
  %str4041 = getelementptr [18 x i8]* @.str2147, i32 0, i32 0 
  %string4041 = call %object* @alloc_String(i8* %str4041) 
; compilenode returning %string4041 
  %var_val_right4042 = load %object** %var_right 
; compilenode returning %var_val_right4042 
  %str4043 = getelementptr [22 x i8]* @.str2148, i32 0, i32 0 
  %string4043 = call %object* @alloc_String(i8* %str4043) 
; compilenode returning %string4043 
  store %object* %string4043, %object** %params_0 
  %opresult4045 = call %object* @callmethod(%object* %var_val_right4042, i8* getelementptr([3 x i8]* @.str2149,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4045 
  store %object* %opresult4045, %object** %params_0 
  %opresult4047 = call %object* @callmethod(%object* %string4041, i8* getelementptr([3 x i8]* @.str2150,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4047 
  store %object* %opresult4047, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4048 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2151,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4048 
; compilenode returning %call4048 
  %str4049 = getelementptr [4 x i8]* @.str2152, i32 0, i32 0 
  %string4049 = call %object* @alloc_String(i8* %str4049) 
; compilenode returning %string4049 
  %var_val_rnm4050 = load %object** %var_rnm 
; compilenode returning %var_val_rnm4050 
  %var_val_auto_count4051 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4051 
  %str4052 = getelementptr [39 x i8]* @.str2153, i32 0, i32 0 
  %string4052 = call %object* @alloc_String(i8* %str4052) 
; compilenode returning %string4052 
  %var_val_left4053 = load %object** %var_left 
; compilenode returning %var_val_left4053 
  %str4054 = getelementptr [38 x i8]* @.str2154, i32 0, i32 0 
  %string4054 = call %object* @alloc_String(i8* %str4054) 
; compilenode returning %string4054 
  %var_val_opnm4055 = load %object** %var_opnm 
; compilenode returning %var_val_opnm4055 
  %str4056 = getelementptr [41 x i8]* @.str2155, i32 0, i32 0 
  %string4056 = call %object* @alloc_String(i8* %str4056) 
; compilenode returning %string4056 
  store %object* %string4056, %object** %params_0 
  %opresult4058 = call %object* @callmethod(%object* %var_val_opnm4055, i8* getelementptr([3 x i8]* @.str2156,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4058 
  store %object* %opresult4058, %object** %params_0 
  %opresult4060 = call %object* @callmethod(%object* %string4054, i8* getelementptr([3 x i8]* @.str2157,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4060 
  store %object* %opresult4060, %object** %params_0 
  %opresult4062 = call %object* @callmethod(%object* %var_val_left4053, i8* getelementptr([3 x i8]* @.str2158,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4062 
  store %object* %opresult4062, %object** %params_0 
  %opresult4064 = call %object* @callmethod(%object* %string4052, i8* getelementptr([3 x i8]* @.str2159,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4064 
  store %object* %opresult4064, %object** %params_0 
  %opresult4066 = call %object* @callmethod(%object* %var_val_auto_count4051, i8* getelementptr([3 x i8]* @.str2160,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4066 
  store %object* %opresult4066, %object** %params_0 
  %opresult4068 = call %object* @callmethod(%object* %var_val_rnm4050, i8* getelementptr([3 x i8]* @.str2161,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4068 
  store %object* %opresult4068, %object** %params_0 
  %opresult4070 = call %object* @callmethod(%object* %string4049, i8* getelementptr([3 x i8]* @.str2162,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4070 
  store %object* %opresult4070, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4071 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2163,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4071 
; compilenode returning %call4071 
; WARNING: non-local assigns not yet fully supported 
  %str4072 = getelementptr [2 x i8]* @.str2164, i32 0, i32 0 
  %string4072 = call %object* @alloc_String(i8* %str4072) 
; compilenode returning %string4072 
  %var_val_rnm4073 = load %object** %var_rnm 
; compilenode returning %var_val_rnm4073 
  %var_val_auto_count4074 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4074 
  store %object* %var_val_auto_count4074, %object** %params_0 
  %opresult4076 = call %object* @callmethod(%object* %var_val_rnm4073, i8* getelementptr([3 x i8]* @.str2165,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4076 
  store %object* %opresult4076, %object** %params_0 
  %opresult4078 = call %object* @callmethod(%object* %string4072, i8* getelementptr([3 x i8]* @.str2166,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4078 
  store %object* %opresult4078, %object** %params_0 
  %var_val_o4079 = load %object** %var_o 
; compilenode returning %var_val_o4079 
  %call4080 = call %object* @callmethod(%object* %var_val_o4079, i8* getelementptr([11 x i8]* @.str2167,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4080 
; compilenode returning %call4080 
; compilenode returning %call4080 
  %var_val_auto_count4081 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4081 
  %num4082 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4082 
  store %object* %num4082, %object** %params_0 
  %sum4084 = call %object* @callmethod(%object* %var_val_auto_count4081, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4084 
  store %object* %sum4084, %object** %var_auto_count 
; compilenode returning %sum4084 
  br label %EndIf3973 
FalseBranch3973: 
  %var_val_o4085 = load %object** %var_o 
; compilenode returning %var_val_o4085 
  %call4086 = call %object* @callmethod(%object* %var_val_o4085, i8* getelementptr([6 x i8]* @.str2168,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4086 
; compilenode returning %call4086 
; compilenode returning %call4086 
  %call4087 = call %object* @gracelib_length(%object* %call4086) 
; compilenode returning %call4087 
  %num4088 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4088 
  store %object* %num4088, %object** %params_0 
  %sum4090 = call %object* @callmethod(%object* %call4087, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4090 
  %var_len = call %object** @alloc_var() 
  %var_len_dec = getelementptr %object* %sum4090, i32 0 
  store %object* %var_len_dec, %object** %var_len 
; compilenode returning  
  %str4091 = getelementptr [6 x i8]* @.str2169, i32 0, i32 0 
  %string4091 = call %object* @alloc_String(i8* %str4091) 
; compilenode returning %string4091 
  %var_val_constants4092 = load %object** %var_constants 
; compilenode returning %var_val_constants4092 
  %call4093 = call %object* @callmethod(%object* %var_val_constants4092, i8* getelementptr([7 x i8]* @.str2170,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4093 
; compilenode returning %call4093 
; compilenode returning %call4093 
  %str4094 = getelementptr [25 x i8]* @.str2171, i32 0, i32 0 
  %string4094 = call %object* @alloc_String(i8* %str4094) 
; compilenode returning %string4094 
  %str4095 = getelementptr [11 x i8]* @.str2172, i32 0, i32 0 
  %string4095 = call %object* @alloc_String(i8* %str4095) 
; compilenode returning %string4095 
  %var_val_len4096 = load %object** %var_len 
; compilenode returning %var_val_len4096 
  %str4097 = getelementptr [10 x i8]* @.str2173, i32 0, i32 0 
  %string4097 = call %object* @alloc_String(i8* %str4097) 
; compilenode returning %string4097 
  %var_val_o4098 = load %object** %var_o 
; compilenode returning %var_val_o4098 
  %call4099 = call %object* @callmethod(%object* %var_val_o4098, i8* getelementptr([6 x i8]* @.str2174,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4099 
; compilenode returning %call4099 
; compilenode returning %call4099 
  %str4100 = getelementptr [5 x i8]* @.str2175, i32 0, i32 0 
  %string4100 = call %object* @alloc_String(i8* %str4100) 
; compilenode returning %string4100 
  store %object* %string4100, %object** %params_0 
  %opresult4102 = call %object* @callmethod(%object* %call4099, i8* getelementptr([3 x i8]* @.str2176,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4102 
  store %object* %opresult4102, %object** %params_0 
  %opresult4104 = call %object* @callmethod(%object* %string4097, i8* getelementptr([3 x i8]* @.str2177,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4104 
  store %object* %opresult4104, %object** %params_0 
  %opresult4106 = call %object* @callmethod(%object* %var_val_len4096, i8* getelementptr([3 x i8]* @.str2178,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4106 
  store %object* %opresult4106, %object** %params_0 
  %opresult4108 = call %object* @callmethod(%object* %string4095, i8* getelementptr([3 x i8]* @.str2179,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4108 
  store %object* %opresult4108, %object** %params_0 
  %opresult4110 = call %object* @callmethod(%object* %string4094, i8* getelementptr([3 x i8]* @.str2180,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4110 
  store %object* %opresult4110, %object** %params_0 
  %opresult4112 = call %object* @callmethod(%object* %call4093, i8* getelementptr([3 x i8]* @.str2181,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4112 
  store %object* %opresult4112, %object** %params_0 
  %opresult4114 = call %object* @callmethod(%object* %string4091, i8* getelementptr([3 x i8]* @.str2182,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4114 
  %var_con = call %object** @alloc_var() 
  %var_con_dec = getelementptr %object* %opresult4114, i32 0 
  store %object* %var_con_dec, %object** %var_con 
; compilenode returning  
  %str4115 = getelementptr [18 x i8]* @.str2183, i32 0, i32 0 
  %string4115 = call %object* @alloc_String(i8* %str4115) 
; compilenode returning %string4115 
  %var_val_right4116 = load %object** %var_right 
; compilenode returning %var_val_right4116 
  %str4117 = getelementptr [22 x i8]* @.str2184, i32 0, i32 0 
  %string4117 = call %object* @alloc_String(i8* %str4117) 
; compilenode returning %string4117 
  store %object* %string4117, %object** %params_0 
  %opresult4119 = call %object* @callmethod(%object* %var_val_right4116, i8* getelementptr([3 x i8]* @.str2185,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4119 
  store %object* %opresult4119, %object** %params_0 
  %opresult4121 = call %object* @callmethod(%object* %string4115, i8* getelementptr([3 x i8]* @.str2186,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4121 
  store %object* %opresult4121, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4122 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2187,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4122 
; compilenode returning %call4122 
  %str4123 = getelementptr [12 x i8]* @.str2188, i32 0, i32 0 
  %string4123 = call %object* @alloc_String(i8* %str4123) 
; compilenode returning %string4123 
  %var_val_auto_count4124 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4124 
  %str4125 = getelementptr [18 x i8]* @.str2189, i32 0, i32 0 
  %string4125 = call %object* @alloc_String(i8* %str4125) 
; compilenode returning %string4125 
  %str4126 = getelementptr [22 x i8]* @.str2190, i32 0, i32 0 
  %string4126 = call %object* @alloc_String(i8* %str4126) 
; compilenode returning %string4126 
  %var_val_left4127 = load %object** %var_left 
; compilenode returning %var_val_left4127 
  %str4128 = getelementptr [22 x i8]* @.str2191, i32 0, i32 0 
  %string4128 = call %object* @alloc_String(i8* %str4128) 
; compilenode returning %string4128 
  %var_val_len4129 = load %object** %var_len 
; compilenode returning %var_val_len4129 
  %str4130 = getelementptr [14 x i8]* @.str2192, i32 0, i32 0 
  %string4130 = call %object* @alloc_String(i8* %str4130) 
; compilenode returning %string4130 
  %var_val_constants4131 = load %object** %var_constants 
; compilenode returning %var_val_constants4131 
  %call4132 = call %object* @callmethod(%object* %var_val_constants4131, i8* getelementptr([7 x i8]* @.str2193,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4132 
; compilenode returning %call4132 
; compilenode returning %call4132 
  %str4133 = getelementptr [41 x i8]* @.str2194, i32 0, i32 0 
  %string4133 = call %object* @alloc_String(i8* %str4133) 
; compilenode returning %string4133 
  store %object* %string4133, %object** %params_0 
  %opresult4135 = call %object* @callmethod(%object* %call4132, i8* getelementptr([3 x i8]* @.str2195,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4135 
  store %object* %opresult4135, %object** %params_0 
  %opresult4137 = call %object* @callmethod(%object* %string4130, i8* getelementptr([3 x i8]* @.str2196,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4137 
  store %object* %opresult4137, %object** %params_0 
  %opresult4139 = call %object* @callmethod(%object* %var_val_len4129, i8* getelementptr([3 x i8]* @.str2197,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4139 
  store %object* %opresult4139, %object** %params_0 
  %opresult4141 = call %object* @callmethod(%object* %string4128, i8* getelementptr([3 x i8]* @.str2198,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4141 
  store %object* %opresult4141, %object** %params_0 
  %opresult4143 = call %object* @callmethod(%object* %var_val_left4127, i8* getelementptr([3 x i8]* @.str2199,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4143 
  store %object* %opresult4143, %object** %params_0 
  %opresult4145 = call %object* @callmethod(%object* %string4126, i8* getelementptr([3 x i8]* @.str2200,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4145 
  store %object* %opresult4145, %object** %params_0 
  %opresult4147 = call %object* @callmethod(%object* %string4125, i8* getelementptr([3 x i8]* @.str2201,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4147 
  store %object* %opresult4147, %object** %params_0 
  %opresult4149 = call %object* @callmethod(%object* %var_val_auto_count4124, i8* getelementptr([3 x i8]* @.str2202,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4149 
  store %object* %opresult4149, %object** %params_0 
  %opresult4151 = call %object* @callmethod(%object* %string4123, i8* getelementptr([3 x i8]* @.str2203,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4151 
  store %object* %opresult4151, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4152 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2204,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4152 
; compilenode returning %call4152 
  %var_val_con4153 = load %object** %var_con 
; compilenode returning %var_val_con4153 
  store %object* %var_val_con4153, %object** %params_0 
  %var_val_constants4154 = load %object** %var_constants 
; compilenode returning %var_val_constants4154 
  %call4155 = call %object* @callmethod(%object* %var_val_constants4154, i8* getelementptr([5 x i8]* @.str2205,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4155 
; compilenode returning %call4155 
; WARNING: non-local assigns not yet fully supported 
  %str4156 = getelementptr [10 x i8]* @.str2206, i32 0, i32 0 
  %string4156 = call %object* @alloc_String(i8* %str4156) 
; compilenode returning %string4156 
  %var_val_auto_count4157 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4157 
  store %object* %var_val_auto_count4157, %object** %params_0 
  %opresult4159 = call %object* @callmethod(%object* %string4156, i8* getelementptr([3 x i8]* @.str2207,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4159 
  store %object* %opresult4159, %object** %params_0 
  %var_val_o4160 = load %object** %var_o 
; compilenode returning %var_val_o4160 
  %call4161 = call %object* @callmethod(%object* %var_val_o4160, i8* getelementptr([11 x i8]* @.str2208,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4161 
; compilenode returning %call4161 
; compilenode returning %call4161 
  %var_val_auto_count4162 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4162 
  %num4163 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4163 
  store %object* %num4163, %object** %params_0 
  %sum4165 = call %object* @callmethod(%object* %var_val_auto_count4162, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4165 
  store %object* %sum4165, %object** %var_auto_count 
; compilenode returning %sum4165 
  br label %EndIf3973 
EndIf3973: 
  %if3973 = phi %object* [ %sum4084, %EndIf4033], [%sum4165, %FalseBranch3973] 
; compilenode returning %if3973 
  ret %object* %if3973 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o4172 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_args4179 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply4175(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_args = getelementptr %object*** %closure, i32 0 
  %var_args = load %object*** %varc_args 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_p = getelementptr %object** %args, i32 0 
  %var_val_p4176 = load %object** %var_p 
; compilenode returning %var_val_p4176 
  store %object* %var_val_p4176, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4177 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2213,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4177 
; compilenode returning %call4177 
  %var_r = call %object** @alloc_var() 
  %var_r_dec = getelementptr %object* %call4177, i32 0 
  store %object* %var_r_dec, %object** %var_r 
; compilenode returning  
  %var_val_r4178 = load %object** %var_r 
; compilenode returning %var_val_r4178 
  store %object* %var_val_r4178, %object** %params_0 
  %var_val_args4179 = load %object** %var_args 
; compilenode returning %var_val_args4179 
  %call4180 = call %object* @callmethod(%object* %var_val_args4179, i8* getelementptr([5 x i8]* @.str2214,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4180 
; compilenode returning %call4180 
  ret %object* %call4180 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_args4184 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply4192(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_args = getelementptr %object*** %closure, i32 0 
  %var_args = load %object*** %varc_args 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %str4193 = getelementptr [18 x i8]* @.str2218, i32 0, i32 0 
  %string4193 = call %object* @alloc_String(i8* %str4193) 
; compilenode returning %string4193 
  %var_val_args4194 = load %object** %var_args 
; compilenode returning %var_val_args4194 
  %var_val_i4195 = load %object** %var_i 
; compilenode returning %var_val_i4195 
  store %object* %var_val_i4195, %object** %params_0 
  %idxres4196 = call %object* @callmethod(%object* %var_val_args4194, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres4196 
  %str4197 = getelementptr [21 x i8]* @.str2219, i32 0, i32 0 
  %string4197 = call %object* @alloc_String(i8* %str4197) 
; compilenode returning %string4197 
  %var_val_i4198 = load %object** %var_i 
; compilenode returning %var_val_i4198 
  store %object* %var_val_i4198, %object** %params_0 
  %opresult4200 = call %object* @callmethod(%object* %string4197, i8* getelementptr([3 x i8]* @.str2220,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4200 
  store %object* %opresult4200, %object** %params_0 
  %opresult4202 = call %object* @callmethod(%object* %idxres4196, i8* getelementptr([3 x i8]* @.str2221,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4202 
  store %object* %opresult4202, %object** %params_0 
  %opresult4204 = call %object* @callmethod(%object* %string4193, i8* getelementptr([3 x i8]* @.str2222,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4204 
  store %object* %opresult4204, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4205 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2223,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4205 
; compilenode returning %call4205 
  ret %object* %call4205 
} 
;;;; ENDS 
; handling member 
; handling member 
; compiled in to %var_val_o4208 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4209 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4216 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4217 
; got len 3 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4225 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4226 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4238 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4244 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4245 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4272 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_args4275 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4304 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4309 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4310 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4317 
; got len 7 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4323 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4324 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4349 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_args4352 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4379 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4385 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4388 
; got len 9 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilecall 
; have closure method: 2 
define %object* @meth_compilecall4166(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_constants = getelementptr %object*** %closure, i32 0 
  %var_constants = load %object*** %varc_constants 
  %varc_auto_count = getelementptr %object*** %closure, i32 1 
  %var_auto_count = load %object*** %varc_auto_count 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %array4167 = call %object* @alloc_Array() 
; compilenode returning %array4167 
  %var_args = call %object** @alloc_var() 
  %var_args_dec = getelementptr %object* %array4167, i32 0 
  store %object* %var_args_dec, %object** %var_args 
; compilenode returning  
  %str4168 = getelementptr [1 x i8]* @.str2210, i32 0, i32 0 
  %string4168 = call %object* @alloc_String(i8* %str4168) 
; compilenode returning %string4168 
  %var_obj = call %object** @alloc_var() 
  %var_obj_dec = getelementptr %object* %string4168, i32 0 
  store %object* %var_obj_dec, %object** %var_obj 
; compilenode returning  
  %num4169 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4169 
  %var_len = call %object** @alloc_var() 
  %var_len_dec = getelementptr %object* %num4169, i32 0 
  store %object* %var_len_dec, %object** %var_len 
; compilenode returning  
  %str4170 = getelementptr [1 x i8]* @.str2211, i32 0, i32 0 
  %string4170 = call %object* @alloc_String(i8* %str4170) 
; compilenode returning %string4170 
  %var_con = call %object** @alloc_var() 
  %var_con_dec = getelementptr %object* %string4170, i32 0 
  store %object* %var_con_dec, %object** %var_con 
; compilenode returning  
  %var_val_o4172 = load %object** %var_o 
; compilenode returning %var_val_o4172 
  %call4173 = call %object* @callmethod(%object* %var_val_o4172, i8* getelementptr([5 x i8]* @.str2212,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4173 
; compilenode returning %call4173 
; compilenode returning %call4173 
  %obj4174 = call %object* @alloc_obj() 
  %closure4175 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure4175, %object** %var_args) 
  %selfpp4181 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4181 
  call void @addtoclosure(%object*** %closure4175, %object** %selfpp4181) 
  call void @addclosuremethod(%object* %obj4174, i8* getelementptr([6 x i8]* @.str.methname4175, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4175), %object*** %closure4175) 
; compilenode returning %obj4174 
  store %object* %call4173, %object** %params_0 
  %iter4171 = call %object* @callmethod(%object* %call4173, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4171 
BeginFor4171: 
  %condobj4171 = call %object* @callmethod(%object* %iter4171, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4171_valp = call i1 @istrue(%object* %condobj4171) 
  %cond4171 = icmp eq i1 0, %cond4171_valp 
br i1 %cond4171, label %EndFor4171, label %ForBody4171 
ForBody4171: 
 %forval4171 = call %object* @callmethod(%object* %iter4171, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4171, %object** %params_0 
  call %object* @callmethod(%object* %obj4174, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4171 
EndFor4171: 
; compilenode returning %call4173 
  %num4183 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4183 
  %var_val_args4184 = load %object** %var_args 
; compilenode returning %var_val_args4184 
  %call4185 = call %object* @callmethod(%object* %var_val_args4184, i8* getelementptr([7 x i8]* @.str2216,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4185 
; compilenode returning %call4185 
; compilenode returning %call4185 
  %num4186 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4186 
  store %object* %num4186, %object** %params_0 
  %diff4188 = call %object* @callmethod(%object* %call4185, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff4188 
  store %object* %diff4188, %object** %params_0 
  %opresult4190 = call %object* @callmethod(%object* %num4183, i8* getelementptr([3 x i8]* @.str2217,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4190 
  %obj4191 = call %object* @alloc_obj() 
  %closure4192 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure4192, %object** %var_args) 
  %selfpp4206 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4206 
  call void @addtoclosure(%object*** %closure4192, %object** %selfpp4206) 
  call void @addclosuremethod(%object* %obj4191, i8* getelementptr([6 x i8]* @.str.methname4192, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4192), %object*** %closure4192) 
; compilenode returning %obj4191 
  store %object* %opresult4190, %object** %params_0 
  %iter4182 = call %object* @callmethod(%object* %opresult4190, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4182 
BeginFor4182: 
  %condobj4182 = call %object* @callmethod(%object* %iter4182, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4182_valp = call i1 @istrue(%object* %condobj4182) 
  %cond4182 = icmp eq i1 0, %cond4182_valp 
br i1 %cond4182, label %EndFor4182, label %ForBody4182 
ForBody4182: 
 %forval4182 = call %object* @callmethod(%object* %iter4182, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4182, %object** %params_0 
  call %object* @callmethod(%object* %obj4191, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4182 
EndFor4182: 
; compilenode returning %opresult4190 
  br label %BeginIf4207 
BeginIf4207: 
  %var_val_o4208 = load %object** %var_o 
; compilenode returning %var_val_o4208 
  %call4209 = call %object* @callmethod(%object* %var_val_o4208, i8* getelementptr([6 x i8]* @.str2225,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4209 
; compilenode returning %call4209 
; compilenode returning %call4209 
  %call4210 = call %object* @callmethod(%object* %call4209, i8* getelementptr([5 x i8]* @.str2226,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4210 
; compilenode returning %call4210 
; compilenode returning %call4210 
  %str4211 = getelementptr [7 x i8]* @.str2227, i32 0, i32 0 
  %string4211 = call %object* @alloc_String(i8* %str4211) 
; compilenode returning %string4211 
  store %object* %string4211, %object** %params_0 
  %opresult4213 = call %object* @callmethod(%object* %call4210, i8* getelementptr([3 x i8]* @.str2228,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4213 
  %cond4207_valp = call i1 @istrue(%object* %opresult4213) 
  %cond4207 = icmp eq i1 0, %cond4207_valp 
br i1 %cond4207, label %FalseBranch4207, label %TrueBranch4207 
TrueBranch4207: 
  %str4214 = getelementptr [18 x i8]* @.str2229, i32 0, i32 0 
  %string4214 = call %object* @alloc_String(i8* %str4214) 
; compilenode returning %string4214 
  store %object* %string4214, %object** %params_0 
  %call4215 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call4215 
  %var_val_o4216 = load %object** %var_o 
; compilenode returning %var_val_o4216 
  %call4217 = call %object* @callmethod(%object* %var_val_o4216, i8* getelementptr([6 x i8]* @.str2230,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4217 
; compilenode returning %call4217 
; compilenode returning %call4217 
  %call4218 = call %object* @callmethod(%object* %call4217, i8* getelementptr([3 x i8]* @.str2231,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4218 
; compilenode returning %call4218 
; compilenode returning %call4218 
  store %object* %call4218, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4219 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2232,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4219 
; compilenode returning %call4219 
  store %object* %call4219, %object** %var_obj 
; compilenode returning %call4219 
  %str4220 = getelementptr [18 x i8]* @.str2233, i32 0, i32 0 
  %string4220 = call %object* @alloc_String(i8* %str4220) 
; compilenode returning %string4220 
  %var_val_obj4221 = load %object** %var_obj 
; compilenode returning %var_val_obj4221 
  store %object* %var_val_obj4221, %object** %params_0 
  %opresult4223 = call %object* @callmethod(%object* %string4220, i8* getelementptr([3 x i8]* @.str2234,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4223 
  store %object* %opresult4223, %object** %params_0 
  %call4224 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call4224 
  %var_val_o4225 = load %object** %var_o 
; compilenode returning %var_val_o4225 
  %call4226 = call %object* @callmethod(%object* %var_val_o4225, i8* getelementptr([6 x i8]* @.str2235,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4226 
; compilenode returning %call4226 
; compilenode returning %call4226 
  %call4227 = call %object* @callmethod(%object* %call4226, i8* getelementptr([6 x i8]* @.str2236,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4227 
; compilenode returning %call4227 
; compilenode returning %call4227 
  %call4228 = call %object* @gracelib_length(%object* %call4227) 
; compilenode returning %call4228 
  %num4229 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4229 
  store %object* %num4229, %object** %params_0 
  %sum4231 = call %object* @callmethod(%object* %call4228, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4231 
  store %object* %sum4231, %object** %var_len 
; compilenode returning %sum4231 
  %str4232 = getelementptr [11 x i8]* @.str2237, i32 0, i32 0 
  %string4232 = call %object* @alloc_String(i8* %str4232) 
; compilenode returning %string4232 
  %var_val_len4233 = load %object** %var_len 
; compilenode returning %var_val_len4233 
  store %object* %var_val_len4233, %object** %params_0 
  %opresult4235 = call %object* @callmethod(%object* %string4232, i8* getelementptr([3 x i8]* @.str2238,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4235 
  store %object* %opresult4235, %object** %params_0 
  %call4236 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call4236 
  %str4237 = getelementptr [6 x i8]* @.str2239, i32 0, i32 0 
  %string4237 = call %object* @alloc_String(i8* %str4237) 
; compilenode returning %string4237 
  %var_val_constants4238 = load %object** %var_constants 
; compilenode returning %var_val_constants4238 
  %call4239 = call %object* @callmethod(%object* %var_val_constants4238, i8* getelementptr([7 x i8]* @.str2240,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4239 
; compilenode returning %call4239 
; compilenode returning %call4239 
  %str4240 = getelementptr [25 x i8]* @.str2241, i32 0, i32 0 
  %string4240 = call %object* @alloc_String(i8* %str4240) 
; compilenode returning %string4240 
  %str4241 = getelementptr [11 x i8]* @.str2242, i32 0, i32 0 
  %string4241 = call %object* @alloc_String(i8* %str4241) 
; compilenode returning %string4241 
  %var_val_len4242 = load %object** %var_len 
; compilenode returning %var_val_len4242 
  %str4243 = getelementptr [10 x i8]* @.str2243, i32 0, i32 0 
  %string4243 = call %object* @alloc_String(i8* %str4243) 
; compilenode returning %string4243 
  %var_val_o4244 = load %object** %var_o 
; compilenode returning %var_val_o4244 
  %call4245 = call %object* @callmethod(%object* %var_val_o4244, i8* getelementptr([6 x i8]* @.str2244,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4245 
; compilenode returning %call4245 
; compilenode returning %call4245 
  %call4246 = call %object* @callmethod(%object* %call4245, i8* getelementptr([6 x i8]* @.str2245,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4246 
; compilenode returning %call4246 
; compilenode returning %call4246 
  %str4247 = getelementptr [5 x i8]* @.str2246, i32 0, i32 0 
  %string4247 = call %object* @alloc_String(i8* %str4247) 
; compilenode returning %string4247 
  store %object* %string4247, %object** %params_0 
  %opresult4249 = call %object* @callmethod(%object* %call4246, i8* getelementptr([3 x i8]* @.str2247,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4249 
  store %object* %opresult4249, %object** %params_0 
  %opresult4251 = call %object* @callmethod(%object* %string4243, i8* getelementptr([3 x i8]* @.str2248,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4251 
  store %object* %opresult4251, %object** %params_0 
  %opresult4253 = call %object* @callmethod(%object* %var_val_len4242, i8* getelementptr([3 x i8]* @.str2249,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4253 
  store %object* %opresult4253, %object** %params_0 
  %opresult4255 = call %object* @callmethod(%object* %string4241, i8* getelementptr([3 x i8]* @.str2250,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4255 
  store %object* %opresult4255, %object** %params_0 
  %opresult4257 = call %object* @callmethod(%object* %string4240, i8* getelementptr([3 x i8]* @.str2251,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4257 
  store %object* %opresult4257, %object** %params_0 
  %opresult4259 = call %object* @callmethod(%object* %call4239, i8* getelementptr([3 x i8]* @.str2252,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4259 
  store %object* %opresult4259, %object** %params_0 
  %opresult4261 = call %object* @callmethod(%object* %string4237, i8* getelementptr([3 x i8]* @.str2253,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4261 
  store %object* %opresult4261, %object** %var_con 
; compilenode returning %opresult4261 
  %str4262 = getelementptr [14 x i8]* @.str2254, i32 0, i32 0 
  %string4262 = call %object* @alloc_String(i8* %str4262) 
; compilenode returning %string4262 
  store %object* %string4262, %object** %params_0 
  %call4263 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call4263 
  %str4264 = getelementptr [8 x i8]* @.str2255, i32 0, i32 0 
  %string4264 = call %object* @alloc_String(i8* %str4264) 
; compilenode returning %string4264 
  %var_val_auto_count4265 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4265 
  %str4266 = getelementptr [18 x i8]* @.str2256, i32 0, i32 0 
  %string4266 = call %object* @alloc_String(i8* %str4266) 
; compilenode returning %string4266 
  %str4267 = getelementptr [22 x i8]* @.str2257, i32 0, i32 0 
  %string4267 = call %object* @alloc_String(i8* %str4267) 
; compilenode returning %string4267 
  %var_val_obj4268 = load %object** %var_obj 
; compilenode returning %var_val_obj4268 
  %str4269 = getelementptr [22 x i8]* @.str2258, i32 0, i32 0 
  %string4269 = call %object* @alloc_String(i8* %str4269) 
; compilenode returning %string4269 
  %var_val_len4270 = load %object** %var_len 
; compilenode returning %var_val_len4270 
  %str4271 = getelementptr [14 x i8]* @.str2259, i32 0, i32 0 
  %string4271 = call %object* @alloc_String(i8* %str4271) 
; compilenode returning %string4271 
  %var_val_constants4272 = load %object** %var_constants 
; compilenode returning %var_val_constants4272 
  %call4273 = call %object* @callmethod(%object* %var_val_constants4272, i8* getelementptr([7 x i8]* @.str2260,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4273 
; compilenode returning %call4273 
; compilenode returning %call4273 
  %str4274 = getelementptr [20 x i8]* @.str2261, i32 0, i32 0 
  %string4274 = call %object* @alloc_String(i8* %str4274) 
; compilenode returning %string4274 
  %var_val_args4275 = load %object** %var_args 
; compilenode returning %var_val_args4275 
  %call4276 = call %object* @callmethod(%object* %var_val_args4275, i8* getelementptr([7 x i8]* @.str2262,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4276 
; compilenode returning %call4276 
; compilenode returning %call4276 
  %str4277 = getelementptr [21 x i8]* @.str2263, i32 0, i32 0 
  %string4277 = call %object* @alloc_String(i8* %str4277) 
; compilenode returning %string4277 
  store %object* %string4277, %object** %params_0 
  %opresult4279 = call %object* @callmethod(%object* %call4276, i8* getelementptr([3 x i8]* @.str2264,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4279 
  store %object* %opresult4279, %object** %params_0 
  %opresult4281 = call %object* @callmethod(%object* %string4274, i8* getelementptr([3 x i8]* @.str2265,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4281 
  store %object* %opresult4281, %object** %params_0 
  %opresult4283 = call %object* @callmethod(%object* %call4273, i8* getelementptr([3 x i8]* @.str2266,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4283 
  store %object* %opresult4283, %object** %params_0 
  %opresult4285 = call %object* @callmethod(%object* %string4271, i8* getelementptr([3 x i8]* @.str2267,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4285 
  store %object* %opresult4285, %object** %params_0 
  %opresult4287 = call %object* @callmethod(%object* %var_val_len4270, i8* getelementptr([3 x i8]* @.str2268,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4287 
  store %object* %opresult4287, %object** %params_0 
  %opresult4289 = call %object* @callmethod(%object* %string4269, i8* getelementptr([3 x i8]* @.str2269,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4289 
  store %object* %opresult4289, %object** %params_0 
  %opresult4291 = call %object* @callmethod(%object* %var_val_obj4268, i8* getelementptr([3 x i8]* @.str2270,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4291 
  store %object* %opresult4291, %object** %params_0 
  %opresult4293 = call %object* @callmethod(%object* %string4267, i8* getelementptr([3 x i8]* @.str2271,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4293 
  store %object* %opresult4293, %object** %params_0 
  %opresult4295 = call %object* @callmethod(%object* %string4266, i8* getelementptr([3 x i8]* @.str2272,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4295 
  store %object* %opresult4295, %object** %params_0 
  %opresult4297 = call %object* @callmethod(%object* %var_val_auto_count4265, i8* getelementptr([3 x i8]* @.str2273,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4297 
  store %object* %opresult4297, %object** %params_0 
  %opresult4299 = call %object* @callmethod(%object* %string4264, i8* getelementptr([3 x i8]* @.str2274,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4299 
  store %object* %opresult4299, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4300 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2275,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4300 
; compilenode returning %call4300 
  %str4301 = getelementptr [19 x i8]* @.str2276, i32 0, i32 0 
  %string4301 = call %object* @alloc_String(i8* %str4301) 
; compilenode returning %string4301 
  store %object* %string4301, %object** %params_0 
  %call4302 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call4302 
  %var_val_con4303 = load %object** %var_con 
; compilenode returning %var_val_con4303 
  store %object* %var_val_con4303, %object** %params_0 
  %var_val_constants4304 = load %object** %var_constants 
; compilenode returning %var_val_constants4304 
  %call4305 = call %object* @callmethod(%object* %var_val_constants4304, i8* getelementptr([5 x i8]* @.str2277,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4305 
; compilenode returning %call4305 
  br label %EndIf4207 
FalseBranch4207: 
  %str4306 = getelementptr [52 x i8]* @.str2278, i32 0, i32 0 
  %string4306 = call %object* @alloc_String(i8* %str4306) 
; compilenode returning %string4306 
  store %object* %string4306, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4307 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2279,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4307 
; compilenode returning %call4307 
  %str4308 = getelementptr [6 x i8]* @.str2280, i32 0, i32 0 
  %string4308 = call %object* @alloc_String(i8* %str4308) 
; compilenode returning %string4308 
  store %object* %string4308, %object** %var_obj 
; compilenode returning %string4308 
  %var_val_o4309 = load %object** %var_o 
; compilenode returning %var_val_o4309 
  %call4310 = call %object* @callmethod(%object* %var_val_o4309, i8* getelementptr([6 x i8]* @.str2281,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4310 
; compilenode returning %call4310 
; compilenode returning %call4310 
  %call4311 = call %object* @callmethod(%object* %call4310, i8* getelementptr([6 x i8]* @.str2282,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4311 
; compilenode returning %call4311 
; compilenode returning %call4311 
  %call4312 = call %object* @gracelib_length(%object* %call4311) 
; compilenode returning %call4312 
  %num4313 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4313 
  store %object* %num4313, %object** %params_0 
  %sum4315 = call %object* @callmethod(%object* %call4312, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4315 
  store %object* %sum4315, %object** %var_len 
; compilenode returning %sum4315 
  %str4316 = getelementptr [6 x i8]* @.str2283, i32 0, i32 0 
  %string4316 = call %object* @alloc_String(i8* %str4316) 
; compilenode returning %string4316 
  %var_val_constants4317 = load %object** %var_constants 
; compilenode returning %var_val_constants4317 
  %call4318 = call %object* @callmethod(%object* %var_val_constants4317, i8* getelementptr([7 x i8]* @.str2284,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4318 
; compilenode returning %call4318 
; compilenode returning %call4318 
  %str4319 = getelementptr [25 x i8]* @.str2285, i32 0, i32 0 
  %string4319 = call %object* @alloc_String(i8* %str4319) 
; compilenode returning %string4319 
  %str4320 = getelementptr [11 x i8]* @.str2286, i32 0, i32 0 
  %string4320 = call %object* @alloc_String(i8* %str4320) 
; compilenode returning %string4320 
  %var_val_len4321 = load %object** %var_len 
; compilenode returning %var_val_len4321 
  %str4322 = getelementptr [10 x i8]* @.str2287, i32 0, i32 0 
  %string4322 = call %object* @alloc_String(i8* %str4322) 
; compilenode returning %string4322 
  %var_val_o4323 = load %object** %var_o 
; compilenode returning %var_val_o4323 
  %call4324 = call %object* @callmethod(%object* %var_val_o4323, i8* getelementptr([6 x i8]* @.str2288,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4324 
; compilenode returning %call4324 
; compilenode returning %call4324 
  %call4325 = call %object* @callmethod(%object* %call4324, i8* getelementptr([6 x i8]* @.str2289,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4325 
; compilenode returning %call4325 
; compilenode returning %call4325 
  %str4326 = getelementptr [5 x i8]* @.str2290, i32 0, i32 0 
  %string4326 = call %object* @alloc_String(i8* %str4326) 
; compilenode returning %string4326 
  store %object* %string4326, %object** %params_0 
  %opresult4328 = call %object* @callmethod(%object* %call4325, i8* getelementptr([3 x i8]* @.str2291,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4328 
  store %object* %opresult4328, %object** %params_0 
  %opresult4330 = call %object* @callmethod(%object* %string4322, i8* getelementptr([3 x i8]* @.str2292,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4330 
  store %object* %opresult4330, %object** %params_0 
  %opresult4332 = call %object* @callmethod(%object* %var_val_len4321, i8* getelementptr([3 x i8]* @.str2293,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4332 
  store %object* %opresult4332, %object** %params_0 
  %opresult4334 = call %object* @callmethod(%object* %string4320, i8* getelementptr([3 x i8]* @.str2294,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4334 
  store %object* %opresult4334, %object** %params_0 
  %opresult4336 = call %object* @callmethod(%object* %string4319, i8* getelementptr([3 x i8]* @.str2295,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4336 
  store %object* %opresult4336, %object** %params_0 
  %opresult4338 = call %object* @callmethod(%object* %call4318, i8* getelementptr([3 x i8]* @.str2296,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4338 
  store %object* %opresult4338, %object** %params_0 
  %opresult4340 = call %object* @callmethod(%object* %string4316, i8* getelementptr([3 x i8]* @.str2297,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4340 
  store %object* %opresult4340, %object** %var_con 
; compilenode returning %opresult4340 
  %str4341 = getelementptr [8 x i8]* @.str2298, i32 0, i32 0 
  %string4341 = call %object* @alloc_String(i8* %str4341) 
; compilenode returning %string4341 
  %var_val_auto_count4342 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4342 
  %str4343 = getelementptr [18 x i8]* @.str2299, i32 0, i32 0 
  %string4343 = call %object* @alloc_String(i8* %str4343) 
; compilenode returning %string4343 
  %str4344 = getelementptr [22 x i8]* @.str2300, i32 0, i32 0 
  %string4344 = call %object* @alloc_String(i8* %str4344) 
; compilenode returning %string4344 
  %var_val_obj4345 = load %object** %var_obj 
; compilenode returning %var_val_obj4345 
  %str4346 = getelementptr [22 x i8]* @.str2301, i32 0, i32 0 
  %string4346 = call %object* @alloc_String(i8* %str4346) 
; compilenode returning %string4346 
  %var_val_len4347 = load %object** %var_len 
; compilenode returning %var_val_len4347 
  %str4348 = getelementptr [14 x i8]* @.str2302, i32 0, i32 0 
  %string4348 = call %object* @alloc_String(i8* %str4348) 
; compilenode returning %string4348 
  %var_val_constants4349 = load %object** %var_constants 
; compilenode returning %var_val_constants4349 
  %call4350 = call %object* @callmethod(%object* %var_val_constants4349, i8* getelementptr([7 x i8]* @.str2303,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4350 
; compilenode returning %call4350 
; compilenode returning %call4350 
  %str4351 = getelementptr [20 x i8]* @.str2304, i32 0, i32 0 
  %string4351 = call %object* @alloc_String(i8* %str4351) 
; compilenode returning %string4351 
  %var_val_args4352 = load %object** %var_args 
; compilenode returning %var_val_args4352 
  %call4353 = call %object* @callmethod(%object* %var_val_args4352, i8* getelementptr([7 x i8]* @.str2305,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4353 
; compilenode returning %call4353 
; compilenode returning %call4353 
  %str4354 = getelementptr [21 x i8]* @.str2306, i32 0, i32 0 
  %string4354 = call %object* @alloc_String(i8* %str4354) 
; compilenode returning %string4354 
  store %object* %string4354, %object** %params_0 
  %opresult4356 = call %object* @callmethod(%object* %call4353, i8* getelementptr([3 x i8]* @.str2307,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4356 
  store %object* %opresult4356, %object** %params_0 
  %opresult4358 = call %object* @callmethod(%object* %string4351, i8* getelementptr([3 x i8]* @.str2308,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4358 
  store %object* %opresult4358, %object** %params_0 
  %opresult4360 = call %object* @callmethod(%object* %call4350, i8* getelementptr([3 x i8]* @.str2309,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4360 
  store %object* %opresult4360, %object** %params_0 
  %opresult4362 = call %object* @callmethod(%object* %string4348, i8* getelementptr([3 x i8]* @.str2310,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4362 
  store %object* %opresult4362, %object** %params_0 
  %opresult4364 = call %object* @callmethod(%object* %var_val_len4347, i8* getelementptr([3 x i8]* @.str2311,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4364 
  store %object* %opresult4364, %object** %params_0 
  %opresult4366 = call %object* @callmethod(%object* %string4346, i8* getelementptr([3 x i8]* @.str2312,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4366 
  store %object* %opresult4366, %object** %params_0 
  %opresult4368 = call %object* @callmethod(%object* %var_val_obj4345, i8* getelementptr([3 x i8]* @.str2313,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4368 
  store %object* %opresult4368, %object** %params_0 
  %opresult4370 = call %object* @callmethod(%object* %string4344, i8* getelementptr([3 x i8]* @.str2314,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4370 
  store %object* %opresult4370, %object** %params_0 
  %opresult4372 = call %object* @callmethod(%object* %string4343, i8* getelementptr([3 x i8]* @.str2315,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4372 
  store %object* %opresult4372, %object** %params_0 
  %opresult4374 = call %object* @callmethod(%object* %var_val_auto_count4342, i8* getelementptr([3 x i8]* @.str2316,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4374 
  store %object* %opresult4374, %object** %params_0 
  %opresult4376 = call %object* @callmethod(%object* %string4341, i8* getelementptr([3 x i8]* @.str2317,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4376 
  store %object* %opresult4376, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4377 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2318,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4377 
; compilenode returning %call4377 
  %var_val_con4378 = load %object** %var_con 
; compilenode returning %var_val_con4378 
  store %object* %var_val_con4378, %object** %params_0 
  %var_val_constants4379 = load %object** %var_constants 
; compilenode returning %var_val_constants4379 
  %call4380 = call %object* @callmethod(%object* %var_val_constants4379, i8* getelementptr([5 x i8]* @.str2319,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4380 
; compilenode returning %call4380 
  br label %EndIf4207 
EndIf4207: 
  %if4207 = phi %object* [ %call4305, %TrueBranch4207], [%call4380, %FalseBranch4207] 
; compilenode returning %if4207 
; WARNING: non-local assigns not yet fully supported 
  %str4381 = getelementptr [6 x i8]* @.str2320, i32 0, i32 0 
  %string4381 = call %object* @alloc_String(i8* %str4381) 
; compilenode returning %string4381 
  %var_val_auto_count4382 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4382 
  store %object* %var_val_auto_count4382, %object** %params_0 
  %opresult4384 = call %object* @callmethod(%object* %string4381, i8* getelementptr([3 x i8]* @.str2321,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4384 
  store %object* %opresult4384, %object** %params_0 
  %var_val_o4385 = load %object** %var_o 
; compilenode returning %var_val_o4385 
  %call4386 = call %object* @callmethod(%object* %var_val_o4385, i8* getelementptr([11 x i8]* @.str2322,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4386 
; compilenode returning %call4386 
; compilenode returning %call4386 
  %str4387 = getelementptr [38 x i8]* @.str2323, i32 0, i32 0 
  %string4387 = call %object* @alloc_String(i8* %str4387) 
; compilenode returning %string4387 
  %var_val_o4388 = load %object** %var_o 
; compilenode returning %var_val_o4388 
  %call4389 = call %object* @callmethod(%object* %var_val_o4388, i8* getelementptr([9 x i8]* @.str2324,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4389 
; compilenode returning %call4389 
; compilenode returning %call4389 
  store %object* %call4389, %object** %params_0 
  %opresult4391 = call %object* @callmethod(%object* %string4387, i8* getelementptr([3 x i8]* @.str2325,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4391 
  store %object* %opresult4391, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4392 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2326,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4392 
; compilenode returning %call4392 
  %var_val_auto_count4393 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4393 
  %num4394 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4394 
  store %object* %num4394, %object** %params_0 
  %sum4396 = call %object* @callmethod(%object* %var_val_auto_count4393, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4396 
  store %object* %sum4396, %object** %var_auto_count 
; compilenode returning %sum4396 
  ret %object* %sum4396 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_o4399 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4407 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4423 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4431 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4436 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4443 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4444 
; got len 8 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4446 
; got len 8 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4453 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4487 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4492 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_constants4508 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4514 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4521 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4529 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4534 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4539 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4550 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4577 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4584 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4592 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4600 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4609 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4617 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4625 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4633 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4641 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4649 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4657 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4665 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4671 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4672 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4679 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_args4686 
; got len 5 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply4682(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_args = getelementptr %object*** %closure, i32 0 
  %var_args = load %object*** %varc_args 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_prm = getelementptr %object** %args, i32 0 
  %var_val_prm4683 = load %object** %var_prm 
; compilenode returning %var_val_prm4683 
  store %object* %var_val_prm4683, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4684 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2469,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4684 
; compilenode returning %call4684 
  %var_r = call %object** @alloc_var() 
  %var_r_dec = getelementptr %object* %call4684, i32 0 
  store %object* %var_r_dec, %object** %var_r 
; compilenode returning  
  %var_val_r4685 = load %object** %var_r 
; compilenode returning %var_val_r4685 
  store %object* %var_val_r4685, %object** %params_0 
  %var_val_args4686 = load %object** %var_args 
; compilenode returning %var_val_args4686 
  %call4687 = call %object* @callmethod(%object* %var_val_args4686, i8* getelementptr([5 x i8]* @.str2470,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4687 
; compilenode returning %call4687 
  ret %object* %call4687 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_args4691 
; got len 7 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: apply 
; have closure method: 2 
define %object* @meth_apply4699(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_args = getelementptr %object*** %closure, i32 0 
  %var_args = load %object*** %varc_args 
  %varc_self = getelementptr %object*** %closure, i32 1 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %str4700 = getelementptr [18 x i8]* @.str2474, i32 0, i32 0 
  %string4700 = call %object* @alloc_String(i8* %str4700) 
; compilenode returning %string4700 
  %var_val_args4701 = load %object** %var_args 
; compilenode returning %var_val_args4701 
  %var_val_i4702 = load %object** %var_i 
; compilenode returning %var_val_i4702 
  store %object* %var_val_i4702, %object** %params_0 
  %idxres4703 = call %object* @callmethod(%object* %var_val_args4701, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres4703 
  %str4704 = getelementptr [21 x i8]* @.str2475, i32 0, i32 0 
  %string4704 = call %object* @alloc_String(i8* %str4704) 
; compilenode returning %string4704 
  %var_val_i4705 = load %object** %var_i 
; compilenode returning %var_val_i4705 
  store %object* %var_val_i4705, %object** %params_0 
  %opresult4707 = call %object* @callmethod(%object* %string4704, i8* getelementptr([3 x i8]* @.str2476,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4707 
  store %object* %opresult4707, %object** %params_0 
  %opresult4709 = call %object* @callmethod(%object* %idxres4703, i8* getelementptr([3 x i8]* @.str2477,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4709 
  store %object* %opresult4709, %object** %params_0 
  %opresult4711 = call %object* @callmethod(%object* %string4700, i8* getelementptr([3 x i8]* @.str2478,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4711 
  store %object* %opresult4711, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4712 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2479,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4712 
; compilenode returning %call4712 
  ret %object* %call4712 
} 
;;;; ENDS 
; handling member 
; compiled in to %var_val_args4717 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4733 
; got len 11 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4740 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4741 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4764 
; got len 11 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4771 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4772 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4777 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4778 
; got len 6 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4786 
; got len 5 
; created con 
; pushed statement 
; compiled in to %call4787 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4795 
; got len 7 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4799 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4825 
; got len 11 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4832 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4833 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4838 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4839 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4846 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4858 
; got len 11 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4861 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4862 
; got len 5 
; created con 
; pushed statement 
; handling member 
; handling member 
; compiled in to %var_val_o4867 
; got len 6 
; created con 
; pushed statement 
; compiled in to %call4868 
; got len 6 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4875 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4887 
; got len 11 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4892 
; got len 5 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4900 
; got len 9 
; created con 
; pushed statement 
; handling member 
; compiled in to %var_val_o4905 
; got len 9 
; created con 
; pushed statement 
;;;; METHOD DEFINITION: compilenode 
; have closure method: 3 
define %object* @meth_compilenode4397(%object* %self, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_auto_count = getelementptr %object*** %closure, i32 0 
  %var_auto_count = load %object*** %varc_auto_count 
  %varc_constants = getelementptr %object*** %closure, i32 1 
  %var_constants = load %object*** %varc_constants 
  %varc_tmp = getelementptr %object*** %closure, i32 2 
  %var_tmp = load %object*** %varc_tmp 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  br label %BeginIf4398 
BeginIf4398: 
  %var_val_o4399 = load %object** %var_o 
; compilenode returning %var_val_o4399 
  %call4400 = call %object* @callmethod(%object* %var_val_o4399, i8* getelementptr([5 x i8]* @.str2328,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4400 
; compilenode returning %call4400 
; compilenode returning %call4400 
  %str4401 = getelementptr [4 x i8]* @.str2329, i32 0, i32 0 
  %string4401 = call %object* @alloc_String(i8* %str4401) 
; compilenode returning %string4401 
  store %object* %string4401, %object** %params_0 
  %opresult4403 = call %object* @callmethod(%object* %call4400, i8* getelementptr([3 x i8]* @.str2330,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4403 
  %cond4398_valp = call i1 @istrue(%object* %opresult4403) 
  %cond4398 = icmp eq i1 0, %cond4398_valp 
br i1 %cond4398, label %EndIf4398, label %TrueBranch4398 
TrueBranch4398: 
  %str4404 = getelementptr [7 x i8]* @.str2331, i32 0, i32 0 
  %string4404 = call %object* @alloc_String(i8* %str4404) 
; compilenode returning %string4404 
  %var_val_auto_count4405 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4405 
  %str4406 = getelementptr [40 x i8]* @.str2332, i32 0, i32 0 
  %string4406 = call %object* @alloc_String(i8* %str4406) 
; compilenode returning %string4406 
  %var_val_o4407 = load %object** %var_o 
; compilenode returning %var_val_o4407 
  %call4408 = call %object* @callmethod(%object* %var_val_o4407, i8* getelementptr([6 x i8]* @.str2333,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4408 
; compilenode returning %call4408 
; compilenode returning %call4408 
  %str4409 = getelementptr [4 x i8]* @.str2334, i32 0, i32 0 
  %string4409 = call %object* @alloc_String(i8* %str4409) 
; compilenode returning %string4409 
  store %object* %string4409, %object** %params_0 
  %opresult4411 = call %object* @callmethod(%object* %call4408, i8* getelementptr([3 x i8]* @.str2335,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4411 
  store %object* %opresult4411, %object** %params_0 
  %opresult4413 = call %object* @callmethod(%object* %string4406, i8* getelementptr([3 x i8]* @.str2336,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4413 
  store %object* %opresult4413, %object** %params_0 
  %opresult4415 = call %object* @callmethod(%object* %var_val_auto_count4405, i8* getelementptr([3 x i8]* @.str2337,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4415 
  store %object* %opresult4415, %object** %params_0 
  %opresult4417 = call %object* @callmethod(%object* %string4404, i8* getelementptr([3 x i8]* @.str2338,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4417 
  store %object* %opresult4417, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4418 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2339,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4418 
; compilenode returning %call4418 
; WARNING: non-local assigns not yet fully supported 
  %str4419 = getelementptr [5 x i8]* @.str2340, i32 0, i32 0 
  %string4419 = call %object* @alloc_String(i8* %str4419) 
; compilenode returning %string4419 
  %var_val_auto_count4420 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4420 
  store %object* %var_val_auto_count4420, %object** %params_0 
  %opresult4422 = call %object* @callmethod(%object* %string4419, i8* getelementptr([3 x i8]* @.str2341,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4422 
  store %object* %opresult4422, %object** %params_0 
  %var_val_o4423 = load %object** %var_o 
; compilenode returning %var_val_o4423 
  %call4424 = call %object* @callmethod(%object* %var_val_o4423, i8* getelementptr([11 x i8]* @.str2342,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4424 
; compilenode returning %call4424 
; compilenode returning %call4424 
  %var_val_auto_count4425 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4425 
  %num4426 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4426 
  store %object* %num4426, %object** %params_0 
  %sum4428 = call %object* @callmethod(%object* %var_val_auto_count4425, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4428 
  store %object* %sum4428, %object** %var_auto_count 
; compilenode returning %sum4428 
  br label %EndIf4398 
EndIf4398: 
  %if4398 = phi %object* [ %sum4428, %TrueBranch4398], [%opresult4403, %BeginIf4398] 
; compilenode returning %if4398 
  %str4429 = getelementptr [1 x i8]* @.str2343, i32 0, i32 0 
  %string4429 = call %object* @alloc_String(i8* %str4429) 
; compilenode returning %string4429 
  %var_l = call %object** @alloc_var() 
  %var_l_dec = getelementptr %object* %string4429, i32 0 
  store %object* %var_l_dec, %object** %var_l 
; compilenode returning  
  br label %BeginIf4430 
BeginIf4430: 
  %var_val_o4431 = load %object** %var_o 
; compilenode returning %var_val_o4431 
  %call4432 = call %object* @callmethod(%object* %var_val_o4431, i8* getelementptr([5 x i8]* @.str2344,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4432 
; compilenode returning %call4432 
; compilenode returning %call4432 
  %str4433 = getelementptr [7 x i8]* @.str2345, i32 0, i32 0 
  %string4433 = call %object* @alloc_String(i8* %str4433) 
; compilenode returning %string4433 
  store %object* %string4433, %object** %params_0 
  %opresult4435 = call %object* @callmethod(%object* %call4432, i8* getelementptr([3 x i8]* @.str2346,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4435 
  %cond4430_valp = call i1 @istrue(%object* %opresult4435) 
  %cond4430 = icmp eq i1 0, %cond4430_valp 
br i1 %cond4430, label %EndIf4430, label %TrueBranch4430 
TrueBranch4430: 
  %var_val_o4436 = load %object** %var_o 
; compilenode returning %var_val_o4436 
  %call4437 = call %object* @callmethod(%object* %var_val_o4436, i8* getelementptr([6 x i8]* @.str2347,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4437 
; compilenode returning %call4437 
; compilenode returning %call4437 
  %call4438 = call %object* @gracelib_length(%object* %call4437) 
; compilenode returning %call4438 
  store %object* %call4438, %object** %var_l 
; compilenode returning %call4438 
  %var_val_l4439 = load %object** %var_l 
; compilenode returning %var_val_l4439 
  %num4440 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4440 
  store %object* %num4440, %object** %params_0 
  %sum4442 = call %object* @callmethod(%object* %var_val_l4439, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4442 
  store %object* %sum4442, %object** %var_l 
; compilenode returning %sum4442 
; WARNING: non-local assigns not yet fully supported 
  %var_val_o4443 = load %object** %var_o 
; compilenode returning %var_val_o4443 
  %call4444 = call %object* @callmethod(%object* %var_val_o4443, i8* getelementptr([6 x i8]* @.str2348,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4444 
; compilenode returning %call4444 
; compilenode returning %call4444 
  %call4445 = call %object* @callmethod(%object* %call4444, i8* getelementptr([8 x i8]* @.str2349,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4445 
; compilenode returning %call4445 
; compilenode returning %call4445 
  store %object* %call4445, %object** %params_0 
  %var_val_o4446 = load %object** %var_o 
; compilenode returning %var_val_o4446 
  %call4447 = call %object* @callmethod(%object* %var_val_o4446, i8* getelementptr([8 x i8]* @.str2350,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4447 
; compilenode returning %call4447 
; compilenode returning %call4447 
  %str4448 = getelementptr [7 x i8]* @.str2351, i32 0, i32 0 
  %string4448 = call %object* @alloc_String(i8* %str4448) 
; compilenode returning %string4448 
  %var_val_auto_count4449 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4449 
  %str4450 = getelementptr [19 x i8]* @.str2352, i32 0, i32 0 
  %string4450 = call %object* @alloc_String(i8* %str4450) 
; compilenode returning %string4450 
  %var_val_l4451 = load %object** %var_l 
; compilenode returning %var_val_l4451 
  %str4452 = getelementptr [14 x i8]* @.str2353, i32 0, i32 0 
  %string4452 = call %object* @alloc_String(i8* %str4452) 
; compilenode returning %string4452 
  %var_val_constants4453 = load %object** %var_constants 
; compilenode returning %var_val_constants4453 
  %call4454 = call %object* @callmethod(%object* %var_val_constants4453, i8* getelementptr([7 x i8]* @.str2354,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4454 
; compilenode returning %call4454 
; compilenode returning %call4454 
  %str4455 = getelementptr [15 x i8]* @.str2355, i32 0, i32 0 
  %string4455 = call %object* @alloc_String(i8* %str4455) 
; compilenode returning %string4455 
  store %object* %string4455, %object** %params_0 
  %opresult4457 = call %object* @callmethod(%object* %call4454, i8* getelementptr([3 x i8]* @.str2356,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4457 
  store %object* %opresult4457, %object** %params_0 
  %opresult4459 = call %object* @callmethod(%object* %string4452, i8* getelementptr([3 x i8]* @.str2357,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4459 
  store %object* %opresult4459, %object** %params_0 
  %opresult4461 = call %object* @callmethod(%object* %var_val_l4451, i8* getelementptr([3 x i8]* @.str2358,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4461 
  store %object* %opresult4461, %object** %params_0 
  %opresult4463 = call %object* @callmethod(%object* %string4450, i8* getelementptr([3 x i8]* @.str2359,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4463 
  store %object* %opresult4463, %object** %params_0 
  %opresult4465 = call %object* @callmethod(%object* %var_val_auto_count4449, i8* getelementptr([3 x i8]* @.str2360,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4465 
  store %object* %opresult4465, %object** %params_0 
  %opresult4467 = call %object* @callmethod(%object* %string4448, i8* getelementptr([3 x i8]* @.str2361,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4467 
  store %object* %opresult4467, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4468 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2362,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4468 
; compilenode returning %call4468 
  %str4469 = getelementptr [10 x i8]* @.str2363, i32 0, i32 0 
  %string4469 = call %object* @alloc_String(i8* %str4469) 
; compilenode returning %string4469 
  %var_val_auto_count4470 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4470 
  %str4471 = getelementptr [36 x i8]* @.str2364, i32 0, i32 0 
  %string4471 = call %object* @alloc_String(i8* %str4471) 
; compilenode returning %string4471 
  %str4472 = getelementptr [5 x i8]* @.str2365, i32 0, i32 0 
  %string4472 = call %object* @alloc_String(i8* %str4472) 
; compilenode returning %string4472 
  %var_val_auto_count4473 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4473 
  %str4474 = getelementptr [2 x i8]* @.str2366, i32 0, i32 0 
  %string4474 = call %object* @alloc_String(i8* %str4474) 
; compilenode returning %string4474 
  store %object* %string4474, %object** %params_0 
  %opresult4476 = call %object* @callmethod(%object* %var_val_auto_count4473, i8* getelementptr([3 x i8]* @.str2367,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4476 
  store %object* %opresult4476, %object** %params_0 
  %opresult4478 = call %object* @callmethod(%object* %string4472, i8* getelementptr([3 x i8]* @.str2368,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4478 
  store %object* %opresult4478, %object** %params_0 
  %opresult4480 = call %object* @callmethod(%object* %string4471, i8* getelementptr([3 x i8]* @.str2369,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4480 
  store %object* %opresult4480, %object** %params_0 
  %opresult4482 = call %object* @callmethod(%object* %var_val_auto_count4470, i8* getelementptr([3 x i8]* @.str2370,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4482 
  store %object* %opresult4482, %object** %params_0 
  %opresult4484 = call %object* @callmethod(%object* %string4469, i8* getelementptr([3 x i8]* @.str2371,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4484 
  store %object* %opresult4484, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4485 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2372,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4485 
; compilenode returning %call4485 
  %str4486 = getelementptr [6 x i8]* @.str2373, i32 0, i32 0 
  %string4486 = call %object* @alloc_String(i8* %str4486) 
; compilenode returning %string4486 
  %var_val_constants4487 = load %object** %var_constants 
; compilenode returning %var_val_constants4487 
  %call4488 = call %object* @callmethod(%object* %var_val_constants4487, i8* getelementptr([7 x i8]* @.str2374,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4488 
; compilenode returning %call4488 
; compilenode returning %call4488 
  %str4489 = getelementptr [35 x i8]* @.str2375, i32 0, i32 0 
  %string4489 = call %object* @alloc_String(i8* %str4489) 
; compilenode returning %string4489 
  %var_val_l4490 = load %object** %var_l 
; compilenode returning %var_val_l4490 
  %str4491 = getelementptr [10 x i8]* @.str2376, i32 0, i32 0 
  %string4491 = call %object* @alloc_String(i8* %str4491) 
; compilenode returning %string4491 
  %var_val_o4492 = load %object** %var_o 
; compilenode returning %var_val_o4492 
  %call4493 = call %object* @callmethod(%object* %var_val_o4492, i8* getelementptr([6 x i8]* @.str2377,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4493 
; compilenode returning %call4493 
; compilenode returning %call4493 
  %str4494 = getelementptr [5 x i8]* @.str2378, i32 0, i32 0 
  %string4494 = call %object* @alloc_String(i8* %str4494) 
; compilenode returning %string4494 
  store %object* %string4494, %object** %params_0 
  %opresult4496 = call %object* @callmethod(%object* %call4493, i8* getelementptr([3 x i8]* @.str2379,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4496 
  store %object* %opresult4496, %object** %params_0 
  %opresult4498 = call %object* @callmethod(%object* %string4491, i8* getelementptr([3 x i8]* @.str2380,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4498 
  store %object* %opresult4498, %object** %params_0 
  %opresult4500 = call %object* @callmethod(%object* %var_val_l4490, i8* getelementptr([3 x i8]* @.str2381,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4500 
  store %object* %opresult4500, %object** %params_0 
  %opresult4502 = call %object* @callmethod(%object* %string4489, i8* getelementptr([3 x i8]* @.str2382,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4502 
  store %object* %opresult4502, %object** %params_0 
  %opresult4504 = call %object* @callmethod(%object* %call4488, i8* getelementptr([3 x i8]* @.str2383,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4504 
  store %object* %opresult4504, %object** %params_0 
  %opresult4506 = call %object* @callmethod(%object* %string4486, i8* getelementptr([3 x i8]* @.str2384,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4506 
  %var_con = call %object** @alloc_var() 
  %var_con_dec = getelementptr %object* %opresult4506, i32 0 
  store %object* %var_con_dec, %object** %var_con 
; compilenode returning  
  %var_val_con4507 = load %object** %var_con 
; compilenode returning %var_val_con4507 
  store %object* %var_val_con4507, %object** %params_0 
  %var_val_constants4508 = load %object** %var_constants 
; compilenode returning %var_val_constants4508 
  %call4509 = call %object* @callmethod(%object* %var_val_constants4508, i8* getelementptr([5 x i8]* @.str2385,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4509 
; compilenode returning %call4509 
; WARNING: non-local assigns not yet fully supported 
  %str4510 = getelementptr [8 x i8]* @.str2386, i32 0, i32 0 
  %string4510 = call %object* @alloc_String(i8* %str4510) 
; compilenode returning %string4510 
  %var_val_auto_count4511 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4511 
  store %object* %var_val_auto_count4511, %object** %params_0 
  %opresult4513 = call %object* @callmethod(%object* %string4510, i8* getelementptr([3 x i8]* @.str2387,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4513 
  store %object* %opresult4513, %object** %params_0 
  %var_val_o4514 = load %object** %var_o 
; compilenode returning %var_val_o4514 
  %call4515 = call %object* @callmethod(%object* %var_val_o4514, i8* getelementptr([11 x i8]* @.str2388,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4515 
; compilenode returning %call4515 
; compilenode returning %call4515 
  %var_val_auto_count4516 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4516 
  %num4517 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4517 
  store %object* %num4517, %object** %params_0 
  %sum4519 = call %object* @callmethod(%object* %var_val_auto_count4516, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4519 
  store %object* %sum4519, %object** %var_auto_count 
; compilenode returning %sum4519 
  br label %EndIf4430 
EndIf4430: 
  %if4430 = phi %object* [ %sum4519, %TrueBranch4430], [%opresult4435, %BeginIf4430] 
; compilenode returning %if4430 
  br label %BeginIf4520 
BeginIf4520: 
  %var_val_o4521 = load %object** %var_o 
; compilenode returning %var_val_o4521 
  %call4522 = call %object* @callmethod(%object* %var_val_o4521, i8* getelementptr([5 x i8]* @.str2389,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4522 
; compilenode returning %call4522 
; compilenode returning %call4522 
  %str4523 = getelementptr [6 x i8]* @.str2390, i32 0, i32 0 
  %string4523 = call %object* @alloc_String(i8* %str4523) 
; compilenode returning %string4523 
  store %object* %string4523, %object** %params_0 
  %opresult4525 = call %object* @callmethod(%object* %call4522, i8* getelementptr([3 x i8]* @.str2391,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4525 
  %cond4520_valp = call i1 @istrue(%object* %opresult4525) 
  %cond4520 = icmp eq i1 0, %cond4520_valp 
br i1 %cond4520, label %EndIf4520, label %TrueBranch4520 
TrueBranch4520: 
  %var_val_o4526 = load %object** %var_o 
; compilenode returning %var_val_o4526 
  store %object* %var_val_o4526, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4527 = call %object* @callmethod(%object* %self, i8* getelementptr([13 x i8]* @.str2392,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4527 
; compilenode returning %call4527 
  br label %EndIf4520 
EndIf4520: 
  %if4520 = phi %object* [ %call4527, %TrueBranch4520], [%opresult4525, %BeginIf4520] 
; compilenode returning %if4520 
  br label %BeginIf4528 
BeginIf4528: 
  %var_val_o4529 = load %object** %var_o 
; compilenode returning %var_val_o4529 
  %call4530 = call %object* @callmethod(%object* %var_val_o4529, i8* getelementptr([5 x i8]* @.str2393,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4530 
; compilenode returning %call4530 
; compilenode returning %call4530 
  %str4531 = getelementptr [11 x i8]* @.str2394, i32 0, i32 0 
  %string4531 = call %object* @alloc_String(i8* %str4531) 
; compilenode returning %string4531 
  store %object* %string4531, %object** %params_0 
  %opresult4533 = call %object* @callmethod(%object* %call4530, i8* getelementptr([3 x i8]* @.str2395,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4533 
  %var_val_o4534 = load %object** %var_o 
; compilenode returning %var_val_o4534 
  %call4535 = call %object* @callmethod(%object* %var_val_o4534, i8* getelementptr([6 x i8]* @.str2396,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4535 
; compilenode returning %call4535 
; compilenode returning %call4535 
  %str4536 = getelementptr [5 x i8]* @.str2397, i32 0, i32 0 
  %string4536 = call %object* @alloc_String(i8* %str4536) 
; compilenode returning %string4536 
  store %object* %string4536, %object** %params_0 
  %opresult4538 = call %object* @callmethod(%object* %call4535, i8* getelementptr([3 x i8]* @.str2398,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4538 
  %var_val_o4539 = load %object** %var_o 
; compilenode returning %var_val_o4539 
  %call4540 = call %object* @callmethod(%object* %var_val_o4539, i8* getelementptr([6 x i8]* @.str2399,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4540 
; compilenode returning %call4540 
; compilenode returning %call4540 
  %str4541 = getelementptr [6 x i8]* @.str2400, i32 0, i32 0 
  %string4541 = call %object* @alloc_String(i8* %str4541) 
; compilenode returning %string4541 
  store %object* %string4541, %object** %params_0 
  %opresult4543 = call %object* @callmethod(%object* %call4540, i8* getelementptr([3 x i8]* @.str2401,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4543 
  store %object* %opresult4543, %object** %params_0 
  %opresult4545 = call %object* @callmethod(%object* %opresult4538, i8* getelementptr([2 x i8]* @.str2402,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4545 
  store %object* %opresult4545, %object** %params_0 
  %opresult4547 = call %object* @callmethod(%object* %opresult4533, i8* getelementptr([2 x i8]* @.str2403,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4547 
  %cond4528_valp = call i1 @istrue(%object* %opresult4547) 
  %cond4528 = icmp eq i1 0, %cond4528_valp 
br i1 %cond4528, label %FalseBranch4528, label %TrueBranch4528 
TrueBranch4528: 
  %num4548 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4548 
  %var_val = call %object** @alloc_var() 
  %var_val_dec = getelementptr %object* %num4548, i32 0 
  store %object* %var_val_dec, %object** %var_val 
; compilenode returning  
  br label %BeginIf4549 
BeginIf4549: 
  %var_val_o4550 = load %object** %var_o 
; compilenode returning %var_val_o4550 
  %call4551 = call %object* @callmethod(%object* %var_val_o4550, i8* getelementptr([6 x i8]* @.str2404,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4551 
; compilenode returning %call4551 
; compilenode returning %call4551 
  %str4552 = getelementptr [5 x i8]* @.str2405, i32 0, i32 0 
  %string4552 = call %object* @alloc_String(i8* %str4552) 
; compilenode returning %string4552 
  store %object* %string4552, %object** %params_0 
  %opresult4554 = call %object* @callmethod(%object* %call4551, i8* getelementptr([3 x i8]* @.str2406,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4554 
  %cond4549_valp = call i1 @istrue(%object* %opresult4554) 
  %cond4549 = icmp eq i1 0, %cond4549_valp 
br i1 %cond4549, label %EndIf4549, label %TrueBranch4549 
TrueBranch4549: 
  %num4555 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4555 
  store %object* %num4555, %object** %var_val 
; compilenode returning %num4555 
  br label %EndIf4549 
EndIf4549: 
  %if4549 = phi %object* [ %num4555, %TrueBranch4549], [%opresult4554, %BeginIf4549] 
; compilenode returning %if4549 
  %str4556 = getelementptr [8 x i8]* @.str2407, i32 0, i32 0 
  %string4556 = call %object* @alloc_String(i8* %str4556) 
; compilenode returning %string4556 
  %var_val_auto_count4557 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4557 
  %str4558 = getelementptr [18 x i8]* @.str2408, i32 0, i32 0 
  %string4558 = call %object* @alloc_String(i8* %str4558) 
; compilenode returning %string4558 
  %str4559 = getelementptr [20 x i8]* @.str2409, i32 0, i32 0 
  %string4559 = call %object* @alloc_String(i8* %str4559) 
; compilenode returning %string4559 
  %var_val_val4560 = load %object** %var_val 
; compilenode returning %var_val_val4560 
  %str4561 = getelementptr [2 x i8]* @.str2410, i32 0, i32 0 
  %string4561 = call %object* @alloc_String(i8* %str4561) 
; compilenode returning %string4561 
  store %object* %string4561, %object** %params_0 
  %opresult4563 = call %object* @callmethod(%object* %var_val_val4560, i8* getelementptr([3 x i8]* @.str2411,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4563 
  store %object* %opresult4563, %object** %params_0 
  %opresult4565 = call %object* @callmethod(%object* %string4559, i8* getelementptr([3 x i8]* @.str2412,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4565 
  store %object* %opresult4565, %object** %params_0 
  %opresult4567 = call %object* @callmethod(%object* %string4558, i8* getelementptr([3 x i8]* @.str2413,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4567 
  store %object* %opresult4567, %object** %params_0 
  %opresult4569 = call %object* @callmethod(%object* %var_val_auto_count4557, i8* getelementptr([3 x i8]* @.str2414,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4569 
  store %object* %opresult4569, %object** %params_0 
  %opresult4571 = call %object* @callmethod(%object* %string4556, i8* getelementptr([3 x i8]* @.str2415,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4571 
  store %object* %opresult4571, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4572 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2416,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4572 
; compilenode returning %call4572 
; WARNING: non-local assigns not yet fully supported 
  %str4573 = getelementptr [6 x i8]* @.str2417, i32 0, i32 0 
  %string4573 = call %object* @alloc_String(i8* %str4573) 
; compilenode returning %string4573 
  %var_val_auto_count4574 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4574 
  store %object* %var_val_auto_count4574, %object** %params_0 
  %opresult4576 = call %object* @callmethod(%object* %string4573, i8* getelementptr([3 x i8]* @.str2418,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4576 
  store %object* %opresult4576, %object** %params_0 
  %var_val_o4577 = load %object** %var_o 
; compilenode returning %var_val_o4577 
  %call4578 = call %object* @callmethod(%object* %var_val_o4577, i8* getelementptr([11 x i8]* @.str2419,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4578 
; compilenode returning %call4578 
; compilenode returning %call4578 
  %var_val_auto_count4579 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4579 
  %num4580 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4580 
  store %object* %num4580, %object** %params_0 
  %sum4582 = call %object* @callmethod(%object* %var_val_auto_count4579, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4582 
  store %object* %sum4582, %object** %var_auto_count 
; compilenode returning %sum4582 
  br label %EndIf4528 
FalseBranch4528: 
  br label %BeginIf4583 
BeginIf4583: 
  %var_val_o4584 = load %object** %var_o 
; compilenode returning %var_val_o4584 
  %call4585 = call %object* @callmethod(%object* %var_val_o4584, i8* getelementptr([5 x i8]* @.str2420,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4585 
; compilenode returning %call4585 
; compilenode returning %call4585 
  %str4586 = getelementptr [11 x i8]* @.str2421, i32 0, i32 0 
  %string4586 = call %object* @alloc_String(i8* %str4586) 
; compilenode returning %string4586 
  store %object* %string4586, %object** %params_0 
  %opresult4588 = call %object* @callmethod(%object* %call4585, i8* getelementptr([3 x i8]* @.str2422,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4588 
  %cond4583_valp = call i1 @istrue(%object* %opresult4588) 
  %cond4583 = icmp eq i1 0, %cond4583_valp 
br i1 %cond4583, label %EndIf4583, label %TrueBranch4583 
TrueBranch4583: 
  %var_val_o4589 = load %object** %var_o 
; compilenode returning %var_val_o4589 
  store %object* %var_val_o4589, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4590 = call %object* @callmethod(%object* %self, i8* getelementptr([18 x i8]* @.str2423,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4590 
; compilenode returning %call4590 
  br label %EndIf4583 
EndIf4583: 
  %if4583 = phi %object* [ %call4590, %TrueBranch4583], [%opresult4588, %BeginIf4583] 
; compilenode returning %if4583 
  br label %EndIf4528 
EndIf4528: 
  %if4528 = phi %object* [ %sum4582, %EndIf4549], [%if4583, %EndIf4583] 
; compilenode returning %if4528 
  br label %BeginIf4591 
BeginIf4591: 
  %var_val_o4592 = load %object** %var_o 
; compilenode returning %var_val_o4592 
  %call4593 = call %object* @callmethod(%object* %var_val_o4592, i8* getelementptr([5 x i8]* @.str2424,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4593 
; compilenode returning %call4593 
; compilenode returning %call4593 
  %str4594 = getelementptr [7 x i8]* @.str2425, i32 0, i32 0 
  %string4594 = call %object* @alloc_String(i8* %str4594) 
; compilenode returning %string4594 
  store %object* %string4594, %object** %params_0 
  %opresult4596 = call %object* @callmethod(%object* %call4593, i8* getelementptr([3 x i8]* @.str2426,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4596 
  %cond4591_valp = call i1 @istrue(%object* %opresult4596) 
  %cond4591 = icmp eq i1 0, %cond4591_valp 
br i1 %cond4591, label %EndIf4591, label %TrueBranch4591 
TrueBranch4591: 
  %var_val_o4597 = load %object** %var_o 
; compilenode returning %var_val_o4597 
  store %object* %var_val_o4597, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4598 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str2427,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4598 
; compilenode returning %call4598 
  br label %EndIf4591 
EndIf4591: 
  %if4591 = phi %object* [ %call4598, %TrueBranch4591], [%opresult4596, %BeginIf4591] 
; compilenode returning %if4591 
  br label %BeginIf4599 
BeginIf4599: 
  %var_val_o4600 = load %object** %var_o 
; compilenode returning %var_val_o4600 
  %call4601 = call %object* @callmethod(%object* %var_val_o4600, i8* getelementptr([5 x i8]* @.str2428,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4601 
; compilenode returning %call4601 
; compilenode returning %call4601 
  %str4602 = getelementptr [7 x i8]* @.str2429, i32 0, i32 0 
  %string4602 = call %object* @alloc_String(i8* %str4602) 
; compilenode returning %string4602 
  store %object* %string4602, %object** %params_0 
  %opresult4604 = call %object* @callmethod(%object* %call4601, i8* getelementptr([3 x i8]* @.str2430,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4604 
  %cond4599_valp = call i1 @istrue(%object* %opresult4604) 
  %cond4599 = icmp eq i1 0, %cond4599_valp 
br i1 %cond4599, label %EndIf4599, label %TrueBranch4599 
TrueBranch4599: 
  %var_val_o4605 = load %object** %var_o 
; compilenode returning %var_val_o4605 
  %str4606 = getelementptr [6 x i8]* @.str2431, i32 0, i32 0 
  %string4606 = call %object* @alloc_String(i8* %str4606) 
; compilenode returning %string4606 
  store %object* %var_val_o4605, %object** %params_0 
  store %object* %string4606, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call4607 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str2432,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call4607 
; compilenode returning %call4607 
  br label %EndIf4599 
EndIf4599: 
  %if4599 = phi %object* [ %call4607, %TrueBranch4599], [%opresult4604, %BeginIf4599] 
; compilenode returning %if4599 
  br label %BeginIf4608 
BeginIf4608: 
  %var_val_o4609 = load %object** %var_o 
; compilenode returning %var_val_o4609 
  %call4610 = call %object* @callmethod(%object* %var_val_o4609, i8* getelementptr([5 x i8]* @.str2433,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4610 
; compilenode returning %call4610 
; compilenode returning %call4610 
  %str4611 = getelementptr [6 x i8]* @.str2434, i32 0, i32 0 
  %string4611 = call %object* @alloc_String(i8* %str4611) 
; compilenode returning %string4611 
  store %object* %string4611, %object** %params_0 
  %opresult4613 = call %object* @callmethod(%object* %call4610, i8* getelementptr([3 x i8]* @.str2435,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4613 
  %cond4608_valp = call i1 @istrue(%object* %opresult4613) 
  %cond4608 = icmp eq i1 0, %cond4608_valp 
br i1 %cond4608, label %EndIf4608, label %TrueBranch4608 
TrueBranch4608: 
  %var_val_o4614 = load %object** %var_o 
; compilenode returning %var_val_o4614 
  store %object* %var_val_o4614, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4615 = call %object* @callmethod(%object* %self, i8* getelementptr([13 x i8]* @.str2436,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4615 
; compilenode returning %call4615 
  br label %EndIf4608 
EndIf4608: 
  %if4608 = phi %object* [ %call4615, %TrueBranch4608], [%opresult4613, %BeginIf4608] 
; compilenode returning %if4608 
  br label %BeginIf4616 
BeginIf4616: 
  %var_val_o4617 = load %object** %var_o 
; compilenode returning %var_val_o4617 
  %call4618 = call %object* @callmethod(%object* %var_val_o4617, i8* getelementptr([5 x i8]* @.str2437,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4618 
; compilenode returning %call4618 
; compilenode returning %call4618 
  %str4619 = getelementptr [5 x i8]* @.str2438, i32 0, i32 0 
  %string4619 = call %object* @alloc_String(i8* %str4619) 
; compilenode returning %string4619 
  store %object* %string4619, %object** %params_0 
  %opresult4621 = call %object* @callmethod(%object* %call4618, i8* getelementptr([3 x i8]* @.str2439,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4621 
  %cond4616_valp = call i1 @istrue(%object* %opresult4621) 
  %cond4616 = icmp eq i1 0, %cond4616_valp 
br i1 %cond4616, label %EndIf4616, label %TrueBranch4616 
TrueBranch4616: 
  %var_val_o4622 = load %object** %var_o 
; compilenode returning %var_val_o4622 
  store %object* %var_val_o4622, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4623 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2440,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4623 
; compilenode returning %call4623 
  br label %EndIf4616 
EndIf4616: 
  %if4616 = phi %object* [ %call4623, %TrueBranch4616], [%opresult4621, %BeginIf4616] 
; compilenode returning %if4616 
  br label %BeginIf4624 
BeginIf4624: 
  %var_val_o4625 = load %object** %var_o 
; compilenode returning %var_val_o4625 
  %call4626 = call %object* @callmethod(%object* %var_val_o4625, i8* getelementptr([5 x i8]* @.str2441,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4626 
; compilenode returning %call4626 
; compilenode returning %call4626 
  %str4627 = getelementptr [6 x i8]* @.str2442, i32 0, i32 0 
  %string4627 = call %object* @alloc_String(i8* %str4627) 
; compilenode returning %string4627 
  store %object* %string4627, %object** %params_0 
  %opresult4629 = call %object* @callmethod(%object* %call4626, i8* getelementptr([3 x i8]* @.str2443,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4629 
  %cond4624_valp = call i1 @istrue(%object* %opresult4629) 
  %cond4624 = icmp eq i1 0, %cond4624_valp 
br i1 %cond4624, label %EndIf4624, label %TrueBranch4624 
TrueBranch4624: 
  %var_val_o4630 = load %object** %var_o 
; compilenode returning %var_val_o4630 
  store %object* %var_val_o4630, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4631 = call %object* @callmethod(%object* %self, i8* getelementptr([13 x i8]* @.str2444,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4631 
; compilenode returning %call4631 
  br label %EndIf4624 
EndIf4624: 
  %if4624 = phi %object* [ %call4631, %TrueBranch4624], [%opresult4629, %BeginIf4624] 
; compilenode returning %if4624 
  br label %BeginIf4632 
BeginIf4632: 
  %var_val_o4633 = load %object** %var_o 
; compilenode returning %var_val_o4633 
  %call4634 = call %object* @callmethod(%object* %var_val_o4633, i8* getelementptr([5 x i8]* @.str2445,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4634 
; compilenode returning %call4634 
; compilenode returning %call4634 
  %str4635 = getelementptr [3 x i8]* @.str2446, i32 0, i32 0 
  %string4635 = call %object* @alloc_String(i8* %str4635) 
; compilenode returning %string4635 
  store %object* %string4635, %object** %params_0 
  %opresult4637 = call %object* @callmethod(%object* %call4634, i8* getelementptr([3 x i8]* @.str2447,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4637 
  %cond4632_valp = call i1 @istrue(%object* %opresult4637) 
  %cond4632 = icmp eq i1 0, %cond4632_valp 
br i1 %cond4632, label %EndIf4632, label %TrueBranch4632 
TrueBranch4632: 
  %var_val_o4638 = load %object** %var_o 
; compilenode returning %var_val_o4638 
  store %object* %var_val_o4638, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4639 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str2448,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4639 
; compilenode returning %call4639 
  br label %EndIf4632 
EndIf4632: 
  %if4632 = phi %object* [ %call4639, %TrueBranch4632], [%opresult4637, %BeginIf4632] 
; compilenode returning %if4632 
  br label %BeginIf4640 
BeginIf4640: 
  %var_val_o4641 = load %object** %var_o 
; compilenode returning %var_val_o4641 
  %call4642 = call %object* @callmethod(%object* %var_val_o4641, i8* getelementptr([5 x i8]* @.str2449,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4642 
; compilenode returning %call4642 
; compilenode returning %call4642 
  %str4643 = getelementptr [7 x i8]* @.str2450, i32 0, i32 0 
  %string4643 = call %object* @alloc_String(i8* %str4643) 
; compilenode returning %string4643 
  store %object* %string4643, %object** %params_0 
  %opresult4645 = call %object* @callmethod(%object* %call4642, i8* getelementptr([3 x i8]* @.str2451,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4645 
  %cond4640_valp = call i1 @istrue(%object* %opresult4645) 
  %cond4640 = icmp eq i1 0, %cond4640_valp 
br i1 %cond4640, label %EndIf4640, label %TrueBranch4640 
TrueBranch4640: 
  %var_val_o4646 = load %object** %var_o 
; compilenode returning %var_val_o4646 
  store %object* %var_val_o4646, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4647 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str2452,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4647 
; compilenode returning %call4647 
  br label %EndIf4640 
EndIf4640: 
  %if4640 = phi %object* [ %call4647, %TrueBranch4640], [%opresult4645, %BeginIf4640] 
; compilenode returning %if4640 
  br label %BeginIf4648 
BeginIf4648: 
  %var_val_o4649 = load %object** %var_o 
; compilenode returning %var_val_o4649 
  %call4650 = call %object* @callmethod(%object* %var_val_o4649, i8* getelementptr([5 x i8]* @.str2453,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4650 
; compilenode returning %call4650 
; compilenode returning %call4650 
  %str4651 = getelementptr [7 x i8]* @.str2454, i32 0, i32 0 
  %string4651 = call %object* @alloc_String(i8* %str4651) 
; compilenode returning %string4651 
  store %object* %string4651, %object** %params_0 
  %opresult4653 = call %object* @callmethod(%object* %call4650, i8* getelementptr([3 x i8]* @.str2455,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4653 
  %cond4648_valp = call i1 @istrue(%object* %opresult4653) 
  %cond4648 = icmp eq i1 0, %cond4648_valp 
br i1 %cond4648, label %EndIf4648, label %TrueBranch4648 
TrueBranch4648: 
  %var_val_o4654 = load %object** %var_o 
; compilenode returning %var_val_o4654 
  store %object* %var_val_o4654, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4655 = call %object* @callmethod(%object* %self, i8* getelementptr([14 x i8]* @.str2456,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4655 
; compilenode returning %call4655 
  br label %EndIf4648 
EndIf4648: 
  %if4648 = phi %object* [ %call4655, %TrueBranch4648], [%opresult4653, %BeginIf4648] 
; compilenode returning %if4648 
  br label %BeginIf4656 
BeginIf4656: 
  %var_val_o4657 = load %object** %var_o 
; compilenode returning %var_val_o4657 
  %call4658 = call %object* @callmethod(%object* %var_val_o4657, i8* getelementptr([5 x i8]* @.str2457,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4658 
; compilenode returning %call4658 
; compilenode returning %call4658 
  %str4659 = getelementptr [4 x i8]* @.str2458, i32 0, i32 0 
  %string4659 = call %object* @alloc_String(i8* %str4659) 
; compilenode returning %string4659 
  store %object* %string4659, %object** %params_0 
  %opresult4661 = call %object* @callmethod(%object* %call4658, i8* getelementptr([3 x i8]* @.str2459,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4661 
  %cond4656_valp = call i1 @istrue(%object* %opresult4661) 
  %cond4656 = icmp eq i1 0, %cond4656_valp 
br i1 %cond4656, label %EndIf4656, label %TrueBranch4656 
TrueBranch4656: 
  %var_val_o4662 = load %object** %var_o 
; compilenode returning %var_val_o4662 
  store %object* %var_val_o4662, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4663 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str2460,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4663 
; compilenode returning %call4663 
  br label %EndIf4656 
EndIf4656: 
  %if4656 = phi %object* [ %call4663, %TrueBranch4656], [%opresult4661, %BeginIf4656] 
; compilenode returning %if4656 
  br label %BeginIf4664 
BeginIf4664: 
  %var_val_o4665 = load %object** %var_o 
; compilenode returning %var_val_o4665 
  %call4666 = call %object* @callmethod(%object* %var_val_o4665, i8* getelementptr([5 x i8]* @.str2461,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4666 
; compilenode returning %call4666 
; compilenode returning %call4666 
  %str4667 = getelementptr [5 x i8]* @.str2462, i32 0, i32 0 
  %string4667 = call %object* @alloc_String(i8* %str4667) 
; compilenode returning %string4667 
  store %object* %string4667, %object** %params_0 
  %opresult4669 = call %object* @callmethod(%object* %call4666, i8* getelementptr([3 x i8]* @.str2463,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4669 
  %cond4664_valp = call i1 @istrue(%object* %opresult4669) 
  %cond4664 = icmp eq i1 0, %cond4664_valp 
br i1 %cond4664, label %EndIf4664, label %TrueBranch4664 
TrueBranch4664: 
  br label %BeginIf4670 
BeginIf4670: 
  %var_val_o4671 = load %object** %var_o 
; compilenode returning %var_val_o4671 
  %call4672 = call %object* @callmethod(%object* %var_val_o4671, i8* getelementptr([6 x i8]* @.str2464,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4672 
; compilenode returning %call4672 
; compilenode returning %call4672 
  %call4673 = call %object* @callmethod(%object* %call4672, i8* getelementptr([6 x i8]* @.str2465,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4673 
; compilenode returning %call4673 
; compilenode returning %call4673 
  %str4674 = getelementptr [6 x i8]* @.str2466, i32 0, i32 0 
  %string4674 = call %object* @alloc_String(i8* %str4674) 
; compilenode returning %string4674 
  store %object* %string4674, %object** %params_0 
  %opresult4676 = call %object* @callmethod(%object* %call4673, i8* getelementptr([3 x i8]* @.str2467,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4676 
  %cond4670_valp = call i1 @istrue(%object* %opresult4676) 
  %cond4670 = icmp eq i1 0, %cond4670_valp 
br i1 %cond4670, label %FalseBranch4670, label %TrueBranch4670 
TrueBranch4670: 
  %array4677 = call %object* @alloc_Array() 
; compilenode returning %array4677 
  %var_args = call %object** @alloc_var() 
  %var_args_dec = getelementptr %object* %array4677, i32 0 
  store %object* %var_args_dec, %object** %var_args 
; compilenode returning  
  %var_val_o4679 = load %object** %var_o 
; compilenode returning %var_val_o4679 
  %call4680 = call %object* @callmethod(%object* %var_val_o4679, i8* getelementptr([5 x i8]* @.str2468,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4680 
; compilenode returning %call4680 
; compilenode returning %call4680 
  %obj4681 = call %object* @alloc_obj() 
  %closure4682 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure4682, %object** %var_args) 
  %selfpp4688 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4688 
  call void @addtoclosure(%object*** %closure4682, %object** %selfpp4688) 
  call void @addclosuremethod(%object* %obj4681, i8* getelementptr([6 x i8]* @.str.methname4682, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4682), %object*** %closure4682) 
; compilenode returning %obj4681 
  store %object* %call4680, %object** %params_0 
  %iter4678 = call %object* @callmethod(%object* %call4680, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4678 
BeginFor4678: 
  %condobj4678 = call %object* @callmethod(%object* %iter4678, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4678_valp = call i1 @istrue(%object* %condobj4678) 
  %cond4678 = icmp eq i1 0, %cond4678_valp 
br i1 %cond4678, label %EndFor4678, label %ForBody4678 
ForBody4678: 
 %forval4678 = call %object* @callmethod(%object* %iter4678, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4678, %object** %params_0 
  call %object* @callmethod(%object* %obj4681, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4678 
EndFor4678: 
; compilenode returning %call4680 
  %num4690 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4690 
  %var_val_args4691 = load %object** %var_args 
; compilenode returning %var_val_args4691 
  %call4692 = call %object* @callmethod(%object* %var_val_args4691, i8* getelementptr([7 x i8]* @.str2472,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4692 
; compilenode returning %call4692 
; compilenode returning %call4692 
  %num4693 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4693 
  store %object* %num4693, %object** %params_0 
  %diff4695 = call %object* @callmethod(%object* %call4692, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff4695 
  store %object* %diff4695, %object** %params_0 
  %opresult4697 = call %object* @callmethod(%object* %num4690, i8* getelementptr([3 x i8]* @.str2473,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4697 
  %obj4698 = call %object* @alloc_obj() 
  %closure4699 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure4699, %object** %var_args) 
  %selfpp4713 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4713 
  call void @addtoclosure(%object*** %closure4699, %object** %selfpp4713) 
  call void @addclosuremethod(%object* %obj4698, i8* getelementptr([6 x i8]* @.str.methname4699, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4699), %object*** %closure4699) 
; compilenode returning %obj4698 
  store %object* %opresult4697, %object** %params_0 
  %iter4689 = call %object* @callmethod(%object* %opresult4697, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4689 
BeginFor4689: 
  %condobj4689 = call %object* @callmethod(%object* %iter4689, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4689_valp = call i1 @istrue(%object* %condobj4689) 
  %cond4689 = icmp eq i1 0, %cond4689_valp 
br i1 %cond4689, label %EndFor4689, label %ForBody4689 
ForBody4689: 
 %forval4689 = call %object* @callmethod(%object* %iter4689, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4689, %object** %params_0 
  call %object* @callmethod(%object* %obj4698, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4689 
EndFor4689: 
; compilenode returning %opresult4697 
  %str4714 = getelementptr [8 x i8]* @.str2481, i32 0, i32 0 
  %string4714 = call %object* @alloc_String(i8* %str4714) 
; compilenode returning %string4714 
  %var_val_auto_count4715 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4715 
  %str4716 = getelementptr [53 x i8]* @.str2482, i32 0, i32 0 
  %string4716 = call %object* @alloc_String(i8* %str4716) 
; compilenode returning %string4716 
  %var_val_args4717 = load %object** %var_args 
; compilenode returning %var_val_args4717 
  %call4718 = call %object* @callmethod(%object* %var_val_args4717, i8* getelementptr([7 x i8]* @.str2483,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4718 
; compilenode returning %call4718 
; compilenode returning %call4718 
  %str4719 = getelementptr [21 x i8]* @.str2484, i32 0, i32 0 
  %string4719 = call %object* @alloc_String(i8* %str4719) 
; compilenode returning %string4719 
  store %object* %string4719, %object** %params_0 
  %opresult4721 = call %object* @callmethod(%object* %call4718, i8* getelementptr([3 x i8]* @.str2485,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4721 
  store %object* %opresult4721, %object** %params_0 
  %opresult4723 = call %object* @callmethod(%object* %string4716, i8* getelementptr([3 x i8]* @.str2486,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4723 
  store %object* %opresult4723, %object** %params_0 
  %opresult4725 = call %object* @callmethod(%object* %var_val_auto_count4715, i8* getelementptr([3 x i8]* @.str2487,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4725 
  store %object* %opresult4725, %object** %params_0 
  %opresult4727 = call %object* @callmethod(%object* %string4714, i8* getelementptr([3 x i8]* @.str2488,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4727 
  store %object* %opresult4727, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4728 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2489,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4728 
; compilenode returning %call4728 
; WARNING: non-local assigns not yet fully supported 
  %str4729 = getelementptr [6 x i8]* @.str2490, i32 0, i32 0 
  %string4729 = call %object* @alloc_String(i8* %str4729) 
; compilenode returning %string4729 
  %var_val_auto_count4730 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4730 
  store %object* %var_val_auto_count4730, %object** %params_0 
  %opresult4732 = call %object* @callmethod(%object* %string4729, i8* getelementptr([3 x i8]* @.str2491,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4732 
  store %object* %opresult4732, %object** %params_0 
  %var_val_o4733 = load %object** %var_o 
; compilenode returning %var_val_o4733 
  %call4734 = call %object* @callmethod(%object* %var_val_o4733, i8* getelementptr([11 x i8]* @.str2492,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4734 
; compilenode returning %call4734 
; compilenode returning %call4734 
  %var_val_auto_count4735 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4735 
  %num4736 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4736 
  store %object* %num4736, %object** %params_0 
  %sum4738 = call %object* @callmethod(%object* %var_val_auto_count4735, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4738 
  store %object* %sum4738, %object** %var_auto_count 
; compilenode returning %sum4738 
  br label %EndIf4670 
FalseBranch4670: 
  br label %BeginIf4739 
BeginIf4739: 
  %var_val_o4740 = load %object** %var_o 
; compilenode returning %var_val_o4740 
  %call4741 = call %object* @callmethod(%object* %var_val_o4740, i8* getelementptr([6 x i8]* @.str2493,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4741 
; compilenode returning %call4741 
; compilenode returning %call4741 
  %call4742 = call %object* @callmethod(%object* %call4741, i8* getelementptr([6 x i8]* @.str2494,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4742 
; compilenode returning %call4742 
; compilenode returning %call4742 
  %str4743 = getelementptr [8 x i8]* @.str2495, i32 0, i32 0 
  %string4743 = call %object* @alloc_String(i8* %str4743) 
; compilenode returning %string4743 
  store %object* %string4743, %object** %params_0 
  %opresult4745 = call %object* @callmethod(%object* %call4742, i8* getelementptr([3 x i8]* @.str2496,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4745 
  %cond4739_valp = call i1 @istrue(%object* %opresult4745) 
  %cond4739 = icmp eq i1 0, %cond4739_valp 
br i1 %cond4739, label %FalseBranch4739, label %TrueBranch4739 
TrueBranch4739: 
  %str4746 = getelementptr [8 x i8]* @.str2497, i32 0, i32 0 
  %string4746 = call %object* @alloc_String(i8* %str4746) 
; compilenode returning %string4746 
  %var_val_auto_count4747 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4747 
  %str4748 = getelementptr [18 x i8]* @.str2498, i32 0, i32 0 
  %string4748 = call %object* @alloc_String(i8* %str4748) 
; compilenode returning %string4748 
  %str4749 = getelementptr [41 x i8]* @.str2499, i32 0, i32 0 
  %string4749 = call %object* @alloc_String(i8* %str4749) 
; compilenode returning %string4749 
  %str4750 = getelementptr [16 x i8]* @.str2500, i32 0, i32 0 
  %string4750 = call %object* @alloc_String(i8* %str4750) 
; compilenode returning %string4750 
  store %object* %string4750, %object** %params_0 
  %opresult4752 = call %object* @callmethod(%object* %string4749, i8* getelementptr([3 x i8]* @.str2501,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4752 
  store %object* %opresult4752, %object** %params_0 
  %opresult4754 = call %object* @callmethod(%object* %string4748, i8* getelementptr([3 x i8]* @.str2502,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4754 
  store %object* %opresult4754, %object** %params_0 
  %opresult4756 = call %object* @callmethod(%object* %var_val_auto_count4747, i8* getelementptr([3 x i8]* @.str2503,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4756 
  store %object* %opresult4756, %object** %params_0 
  %opresult4758 = call %object* @callmethod(%object* %string4746, i8* getelementptr([3 x i8]* @.str2504,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4758 
  store %object* %opresult4758, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4759 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2505,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4759 
; compilenode returning %call4759 
; WARNING: non-local assigns not yet fully supported 
  %str4760 = getelementptr [6 x i8]* @.str2506, i32 0, i32 0 
  %string4760 = call %object* @alloc_String(i8* %str4760) 
; compilenode returning %string4760 
  %var_val_auto_count4761 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4761 
  store %object* %var_val_auto_count4761, %object** %params_0 
  %opresult4763 = call %object* @callmethod(%object* %string4760, i8* getelementptr([3 x i8]* @.str2507,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4763 
  store %object* %opresult4763, %object** %params_0 
  %var_val_o4764 = load %object** %var_o 
; compilenode returning %var_val_o4764 
  %call4765 = call %object* @callmethod(%object* %var_val_o4764, i8* getelementptr([11 x i8]* @.str2508,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4765 
; compilenode returning %call4765 
; compilenode returning %call4765 
  %var_val_auto_count4766 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4766 
  %num4767 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4767 
  store %object* %num4767, %object** %params_0 
  %sum4769 = call %object* @callmethod(%object* %var_val_auto_count4766, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4769 
  store %object* %sum4769, %object** %var_auto_count 
; compilenode returning %sum4769 
  br label %EndIf4739 
FalseBranch4739: 
  br label %BeginIf4770 
BeginIf4770: 
  %var_val_o4771 = load %object** %var_o 
; compilenode returning %var_val_o4771 
  %call4772 = call %object* @callmethod(%object* %var_val_o4771, i8* getelementptr([6 x i8]* @.str2509,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4772 
; compilenode returning %call4772 
; compilenode returning %call4772 
  %call4773 = call %object* @callmethod(%object* %call4772, i8* getelementptr([5 x i8]* @.str2510,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4773 
; compilenode returning %call4773 
; compilenode returning %call4773 
  %str4774 = getelementptr [11 x i8]* @.str2511, i32 0, i32 0 
  %string4774 = call %object* @alloc_String(i8* %str4774) 
; compilenode returning %string4774 
  store %object* %string4774, %object** %params_0 
  %opresult4776 = call %object* @callmethod(%object* %call4773, i8* getelementptr([3 x i8]* @.str2512,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4776 
  %var_val_o4777 = load %object** %var_o 
; compilenode returning %var_val_o4777 
  %call4778 = call %object* @callmethod(%object* %var_val_o4777, i8* getelementptr([6 x i8]* @.str2513,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4778 
; compilenode returning %call4778 
; compilenode returning %call4778 
  %call4779 = call %object* @callmethod(%object* %call4778, i8* getelementptr([6 x i8]* @.str2514,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4779 
; compilenode returning %call4779 
; compilenode returning %call4779 
  %str4780 = getelementptr [7 x i8]* @.str2515, i32 0, i32 0 
  %string4780 = call %object* @alloc_String(i8* %str4780) 
; compilenode returning %string4780 
  store %object* %string4780, %object** %params_0 
  %opresult4782 = call %object* @callmethod(%object* %call4779, i8* getelementptr([3 x i8]* @.str2516,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4782 
  store %object* %opresult4782, %object** %params_0 
  %opresult4784 = call %object* @callmethod(%object* %opresult4776, i8* getelementptr([2 x i8]* @.str2517,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4784 
  %cond4770_valp = call i1 @istrue(%object* %opresult4784) 
  %cond4770 = icmp eq i1 0, %cond4770_valp 
br i1 %cond4770, label %FalseBranch4770, label %TrueBranch4770 
TrueBranch4770: 
  br label %BeginIf4785 
BeginIf4785: 
  %var_val_o4786 = load %object** %var_o 
; compilenode returning %var_val_o4786 
  %call4787 = call %object* @callmethod(%object* %var_val_o4786, i8* getelementptr([5 x i8]* @.str2518,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4787 
; compilenode returning %call4787 
; compilenode returning %call4787 
  %call4788 = call %object* @callmethod(%object* %call4787, i8* getelementptr([7 x i8]* @.str2519,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4788 
; compilenode returning %call4788 
; compilenode returning %call4788 
  %num4789 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4789 
  store %object* %num4789, %object** %params_0 
  %opresult4791 = call %object* @callmethod(%object* %call4788, i8* getelementptr([3 x i8]* @.str2520,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4791 
  %cond4785_valp = call i1 @istrue(%object* %opresult4791) 
  %cond4785 = icmp eq i1 0, %cond4785_valp 
br i1 %cond4785, label %FalseBranch4785, label %TrueBranch4785 
TrueBranch4785: 
  %str4792 = getelementptr [13 x i8]* @.str2521, i32 0, i32 0 
  %string4792 = call %object* @alloc_String(i8* %str4792) 
; compilenode returning %string4792 
  store %object* %string4792, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4793 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2522,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4793 
; compilenode returning %call4793 
  %num4794 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4794 
  store %object* %num4794, %object** %params_0 
  %var_val_o4795 = load %object** %var_o 
; compilenode returning %var_val_o4795 
  %call4796 = call %object* @callmethod(%object* %var_val_o4795, i8* getelementptr([7 x i8]* @.str2523,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4796 
; compilenode returning %call4796 
  store %object* %call4796, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4797 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2524,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4797 
; compilenode returning %call4797 
  %str4798 = getelementptr [5 x i8]* @.str2525, i32 0, i32 0 
  %string4798 = call %object* @alloc_String(i8* %str4798) 
; compilenode returning %string4798 
  store %object* %string4798, %object** %var_tmp 
; compilenode returning %string4798 
  br label %EndIf4785 
FalseBranch4785: 
  %var_val_o4799 = load %object** %var_o 
; compilenode returning %var_val_o4799 
  %call4800 = call %object* @callmethod(%object* %var_val_o4799, i8* getelementptr([5 x i8]* @.str2526,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4800 
; compilenode returning %call4800 
; compilenode returning %call4800 
  %num4801 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4801 
  store %object* %num4801, %object** %params_0 
  %idxres4802 = call %object* @callmethod(%object* %call4800, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres4802 
  store %object* %idxres4802, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4803 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2527,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4803 
; compilenode returning %call4803 
  store %object* %call4803, %object** %var_tmp 
; compilenode returning %call4803 
  br label %EndIf4785 
EndIf4785: 
  %if4785 = phi %object* [ %string4798, %TrueBranch4785], [%call4803, %FalseBranch4785] 
; compilenode returning %if4785 
  %str4804 = getelementptr [8 x i8]* @.str2528, i32 0, i32 0 
  %string4804 = call %object* @alloc_String(i8* %str4804) 
; compilenode returning %string4804 
  %var_val_auto_count4805 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4805 
  %str4806 = getelementptr [18 x i8]* @.str2529, i32 0, i32 0 
  %string4806 = call %object* @alloc_String(i8* %str4806) 
; compilenode returning %string4806 
  %str4807 = getelementptr [27 x i8]* @.str2530, i32 0, i32 0 
  %string4807 = call %object* @alloc_String(i8* %str4807) 
; compilenode returning %string4807 
  %var_val_tmp4808 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4808 
  %str4809 = getelementptr [2 x i8]* @.str2531, i32 0, i32 0 
  %string4809 = call %object* @alloc_String(i8* %str4809) 
; compilenode returning %string4809 
  store %object* %string4809, %object** %params_0 
  %opresult4811 = call %object* @callmethod(%object* %var_val_tmp4808, i8* getelementptr([3 x i8]* @.str2532,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4811 
  store %object* %opresult4811, %object** %params_0 
  %opresult4813 = call %object* @callmethod(%object* %string4807, i8* getelementptr([3 x i8]* @.str2533,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4813 
  store %object* %opresult4813, %object** %params_0 
  %opresult4815 = call %object* @callmethod(%object* %string4806, i8* getelementptr([3 x i8]* @.str2534,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4815 
  store %object* %opresult4815, %object** %params_0 
  %opresult4817 = call %object* @callmethod(%object* %var_val_auto_count4805, i8* getelementptr([3 x i8]* @.str2535,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4817 
  store %object* %opresult4817, %object** %params_0 
  %opresult4819 = call %object* @callmethod(%object* %string4804, i8* getelementptr([3 x i8]* @.str2536,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4819 
  store %object* %opresult4819, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4820 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2537,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4820 
; compilenode returning %call4820 
; WARNING: non-local assigns not yet fully supported 
  %str4821 = getelementptr [6 x i8]* @.str2538, i32 0, i32 0 
  %string4821 = call %object* @alloc_String(i8* %str4821) 
; compilenode returning %string4821 
  %var_val_auto_count4822 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4822 
  store %object* %var_val_auto_count4822, %object** %params_0 
  %opresult4824 = call %object* @callmethod(%object* %string4821, i8* getelementptr([3 x i8]* @.str2539,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4824 
  store %object* %opresult4824, %object** %params_0 
  %var_val_o4825 = load %object** %var_o 
; compilenode returning %var_val_o4825 
  %call4826 = call %object* @callmethod(%object* %var_val_o4825, i8* getelementptr([11 x i8]* @.str2540,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4826 
; compilenode returning %call4826 
; compilenode returning %call4826 
  %var_val_auto_count4827 = load %object** %var_auto_count 
; compilenode returning %var_val_auto_count4827 
  %num4828 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num4828 
  store %object* %num4828, %object** %params_0 
  %sum4830 = call %object* @callmethod(%object* %var_val_auto_count4827, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum4830 
  store %object* %sum4830, %object** %var_auto_count 
; compilenode returning %sum4830 
  br label %EndIf4770 
FalseBranch4770: 
  br label %BeginIf4831 
BeginIf4831: 
  %var_val_o4832 = load %object** %var_o 
; compilenode returning %var_val_o4832 
  %call4833 = call %object* @callmethod(%object* %var_val_o4832, i8* getelementptr([6 x i8]* @.str2541,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4833 
; compilenode returning %call4833 
; compilenode returning %call4833 
  %call4834 = call %object* @callmethod(%object* %call4833, i8* getelementptr([5 x i8]* @.str2542,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4834 
; compilenode returning %call4834 
; compilenode returning %call4834 
  %str4835 = getelementptr [11 x i8]* @.str2543, i32 0, i32 0 
  %string4835 = call %object* @alloc_String(i8* %str4835) 
; compilenode returning %string4835 
  store %object* %string4835, %object** %params_0 
  %opresult4837 = call %object* @callmethod(%object* %call4834, i8* getelementptr([3 x i8]* @.str2544,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4837 
  %var_val_o4838 = load %object** %var_o 
; compilenode returning %var_val_o4838 
  %call4839 = call %object* @callmethod(%object* %var_val_o4838, i8* getelementptr([6 x i8]* @.str2545,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4839 
; compilenode returning %call4839 
; compilenode returning %call4839 
  %call4840 = call %object* @callmethod(%object* %call4839, i8* getelementptr([6 x i8]* @.str2546,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4840 
; compilenode returning %call4840 
; compilenode returning %call4840 
  %str4841 = getelementptr [13 x i8]* @.str2547, i32 0, i32 0 
  %string4841 = call %object* @alloc_String(i8* %str4841) 
; compilenode returning %string4841 
  store %object* %string4841, %object** %params_0 
  %opresult4843 = call %object* @callmethod(%object* %call4840, i8* getelementptr([3 x i8]* @.str2548,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4843 
  store %object* %opresult4843, %object** %params_0 
  %opresult4845 = call %object* @callmethod(%object* %opresult4837, i8* getelementptr([2 x i8]* @.str2549,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4845 
  %cond4831_valp = call i1 @istrue(%object* %opresult4845) 
  %cond4831 = icmp eq i1 0, %cond4831_valp 
br i1 %cond4831, label %FalseBranch4831, label %TrueBranch4831 
TrueBranch4831: 
  %var_val_o4846 = load %object** %var_o 
; compilenode returning %var_val_o4846 
  %call4847 = call %object* @callmethod(%object* %var_val_o4846, i8* getelementptr([5 x i8]* @.str2550,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4847 
; compilenode returning %call4847 
; compilenode returning %call4847 
  %num4848 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4848 
  store %object* %num4848, %object** %params_0 
  %idxres4849 = call %object* @callmethod(%object* %call4847, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres4849 
  store %object* %idxres4849, %object** %var_tmp 
; compilenode returning %idxres4849 
  %str4850 = getelementptr [8 x i8]* @.str2551, i32 0, i32 0 
  %string4850 = call %object* @alloc_String(i8* %str4850) 
; compilenode returning %string4850 
  %var_val_tmp4851 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4851 
  store %object* %string4850, %object** %params_0 
  store %object* %var_val_tmp4851, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call4852 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str2552,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call4852 
; compilenode returning %call4852 
  store %object* %call4852, %object** %var_tmp 
; compilenode returning %call4852 
  %var_val_tmp4853 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4853 
  %array4854 = call %object* @alloc_Array() 
; compilenode returning %array4854 
  store %object* %var_val_tmp4853, %object** %params_0 
  store %object* %array4854, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call4855 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str2553,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call4855 
; compilenode returning %call4855 
  store %object* %call4855, %object** %var_tmp 
; compilenode returning %call4855 
; WARNING: non-local assigns not yet fully supported 
  %var_val_tmp4856 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4856 
  store %object* %var_val_tmp4856, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4857 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2554,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4857 
; compilenode returning %call4857 
  store %object* %call4857, %object** %params_0 
  %var_val_o4858 = load %object** %var_o 
; compilenode returning %var_val_o4858 
  %call4859 = call %object* @callmethod(%object* %var_val_o4858, i8* getelementptr([11 x i8]* @.str2555,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4859 
; compilenode returning %call4859 
; compilenode returning %call4859 
  br label %EndIf4831 
FalseBranch4831: 
  br label %BeginIf4860 
BeginIf4860: 
  %var_val_o4861 = load %object** %var_o 
; compilenode returning %var_val_o4861 
  %call4862 = call %object* @callmethod(%object* %var_val_o4861, i8* getelementptr([6 x i8]* @.str2556,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4862 
; compilenode returning %call4862 
; compilenode returning %call4862 
  %call4863 = call %object* @callmethod(%object* %call4862, i8* getelementptr([5 x i8]* @.str2557,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4863 
; compilenode returning %call4863 
; compilenode returning %call4863 
  %str4864 = getelementptr [11 x i8]* @.str2558, i32 0, i32 0 
  %string4864 = call %object* @alloc_String(i8* %str4864) 
; compilenode returning %string4864 
  store %object* %string4864, %object** %params_0 
  %opresult4866 = call %object* @callmethod(%object* %call4863, i8* getelementptr([3 x i8]* @.str2559,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4866 
  %var_val_o4867 = load %object** %var_o 
; compilenode returning %var_val_o4867 
  %call4868 = call %object* @callmethod(%object* %var_val_o4867, i8* getelementptr([6 x i8]* @.str2560,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4868 
; compilenode returning %call4868 
; compilenode returning %call4868 
  %call4869 = call %object* @callmethod(%object* %call4868, i8* getelementptr([6 x i8]* @.str2561,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4869 
; compilenode returning %call4869 
; compilenode returning %call4869 
  %str4870 = getelementptr [4 x i8]* @.str2562, i32 0, i32 0 
  %string4870 = call %object* @alloc_String(i8* %str4870) 
; compilenode returning %string4870 
  store %object* %string4870, %object** %params_0 
  %opresult4872 = call %object* @callmethod(%object* %call4869, i8* getelementptr([3 x i8]* @.str2563,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4872 
  store %object* %opresult4872, %object** %params_0 
  %opresult4874 = call %object* @callmethod(%object* %opresult4866, i8* getelementptr([2 x i8]* @.str2564,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4874 
  %cond4860_valp = call i1 @istrue(%object* %opresult4874) 
  %cond4860 = icmp eq i1 0, %cond4860_valp 
br i1 %cond4860, label %FalseBranch4860, label %TrueBranch4860 
TrueBranch4860: 
  %var_val_o4875 = load %object** %var_o 
; compilenode returning %var_val_o4875 
  %call4876 = call %object* @callmethod(%object* %var_val_o4875, i8* getelementptr([5 x i8]* @.str2565,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4876 
; compilenode returning %call4876 
; compilenode returning %call4876 
  %num4877 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4877 
  store %object* %num4877, %object** %params_0 
  %idxres4878 = call %object* @callmethod(%object* %call4876, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres4878 
  store %object* %idxres4878, %object** %var_tmp 
; compilenode returning %idxres4878 
  %str4879 = getelementptr [4 x i8]* @.str2566, i32 0, i32 0 
  %string4879 = call %object* @alloc_String(i8* %str4879) 
; compilenode returning %string4879 
  %var_val_tmp4880 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4880 
  store %object* %string4879, %object** %params_0 
  store %object* %var_val_tmp4880, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call4881 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str2567,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call4881 
; compilenode returning %call4881 
  store %object* %call4881, %object** %var_tmp 
; compilenode returning %call4881 
  %var_val_tmp4882 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4882 
  %array4883 = call %object* @alloc_Array() 
; compilenode returning %array4883 
  store %object* %var_val_tmp4882, %object** %params_0 
  store %object* %array4883, %object** %params_1 
; WARNING: non-member calls not fully supported yet 
  %call4884 = call %object* @callmethod(%object* %self, i8* getelementptr([8 x i8]* @.str2568,i32 0,i32 0), i32 2, %object** %params) 
; compilecall giving return register %call4884 
; compilenode returning %call4884 
  store %object* %call4884, %object** %var_tmp 
; compilenode returning %call4884 
; WARNING: non-local assigns not yet fully supported 
  %var_val_tmp4885 = load %object** %var_tmp 
; compilenode returning %var_val_tmp4885 
  store %object* %var_val_tmp4885, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4886 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2569,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4886 
; compilenode returning %call4886 
  store %object* %call4886, %object** %params_0 
  %var_val_o4887 = load %object** %var_o 
; compilenode returning %var_val_o4887 
  %call4888 = call %object* @callmethod(%object* %var_val_o4887, i8* getelementptr([11 x i8]* @.str2570,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4888 
; compilenode returning %call4888 
; compilenode returning %call4888 
  br label %EndIf4860 
FalseBranch4860: 
  %var_val_o4889 = load %object** %var_o 
; compilenode returning %var_val_o4889 
  store %object* %var_val_o4889, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4890 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2571,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4890 
; compilenode returning %call4890 
  br label %EndIf4860 
EndIf4860: 
  %if4860 = phi %object* [ %call4888, %TrueBranch4860], [%call4890, %FalseBranch4860] 
; compilenode returning %if4860 
  br label %EndIf4831 
EndIf4831: 
  %if4831 = phi %object* [ %call4859, %TrueBranch4831], [%if4860, %EndIf4860] 
; compilenode returning %if4831 
  br label %EndIf4770 
EndIf4770: 
  %if4770 = phi %object* [ %sum4830, %EndIf4785], [%if4831, %EndIf4831] 
; compilenode returning %if4770 
  br label %EndIf4739 
EndIf4739: 
  %if4739 = phi %object* [ %sum4769, %TrueBranch4739], [%if4770, %EndIf4770] 
; compilenode returning %if4739 
  br label %EndIf4670 
EndIf4670: 
  %if4670 = phi %object* [ %sum4738, %EndFor4689], [%if4739, %EndIf4739] 
; compilenode returning %if4670 
  br label %EndIf4664 
EndIf4664: 
  %if4664 = phi %object* [ %if4670, %EndIf4670], [%opresult4669, %BeginIf4664] 
; compilenode returning %if4664 
  br label %BeginIf4891 
BeginIf4891: 
  %var_val_o4892 = load %object** %var_o 
; compilenode returning %var_val_o4892 
  %call4893 = call %object* @callmethod(%object* %var_val_o4892, i8* getelementptr([5 x i8]* @.str2572,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4893 
; compilenode returning %call4893 
; compilenode returning %call4893 
  %str4894 = getelementptr [3 x i8]* @.str2573, i32 0, i32 0 
  %string4894 = call %object* @alloc_String(i8* %str4894) 
; compilenode returning %string4894 
  store %object* %string4894, %object** %params_0 
  %opresult4896 = call %object* @callmethod(%object* %call4893, i8* getelementptr([3 x i8]* @.str2574,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4896 
  %cond4891_valp = call i1 @istrue(%object* %opresult4896) 
  %cond4891 = icmp eq i1 0, %cond4891_valp 
br i1 %cond4891, label %EndIf4891, label %TrueBranch4891 
TrueBranch4891: 
  %var_val_o4897 = load %object** %var_o 
; compilenode returning %var_val_o4897 
  store %object* %var_val_o4897, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4898 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str2575,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4898 
; compilenode returning %call4898 
  br label %EndIf4891 
EndIf4891: 
  %if4891 = phi %object* [ %call4898, %TrueBranch4891], [%opresult4896, %BeginIf4891] 
; compilenode returning %if4891 
  %str4899 = getelementptr [25 x i8]* @.str2576, i32 0, i32 0 
  %string4899 = call %object* @alloc_String(i8* %str4899) 
; compilenode returning %string4899 
  %var_val_o4900 = load %object** %var_o 
; compilenode returning %var_val_o4900 
  %call4901 = call %object* @callmethod(%object* %var_val_o4900, i8* getelementptr([9 x i8]* @.str2577,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4901 
; compilenode returning %call4901 
; compilenode returning %call4901 
  store %object* %call4901, %object** %params_0 
  %opresult4903 = call %object* @callmethod(%object* %string4899, i8* getelementptr([3 x i8]* @.str2578,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4903 
  store %object* %opresult4903, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4904 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2579,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4904 
; compilenode returning %call4904 
  %var_val_o4905 = load %object** %var_o 
; compilenode returning %var_val_o4905 
  %call4906 = call %object* @callmethod(%object* %var_val_o4905, i8* getelementptr([9 x i8]* @.str2580,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call4906 
; compilenode returning %call4906 
; compilenode returning %call4906 
  ret %object* %call4906 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply4955(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_i = getelementptr %object** %args, i32 0 
  %str4956 = getelementptr [11 x i8]* @.str2624, i32 0, i32 0 
  %string4956 = call %object* @alloc_String(i8* %str4956) 
; compilenode returning %string4956 
  %var_val_i4957 = load %object** %var_i 
; compilenode returning %var_val_i4957 
  %str4958 = getelementptr [41 x i8]* @.str2625, i32 0, i32 0 
  %string4958 = call %object* @alloc_String(i8* %str4958) 
; compilenode returning %string4958 
  %var_val_i4959 = load %object** %var_i 
; compilenode returning %var_val_i4959 
  store %object* %var_val_i4959, %object** %params_0 
  %opresult4961 = call %object* @callmethod(%object* %string4958, i8* getelementptr([3 x i8]* @.str2626,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4961 
  store %object* %opresult4961, %object** %params_0 
  %opresult4963 = call %object* @callmethod(%object* %var_val_i4957, i8* getelementptr([3 x i8]* @.str2627,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4963 
  store %object* %opresult4963, %object** %params_0 
  %opresult4965 = call %object* @callmethod(%object* %string4956, i8* getelementptr([3 x i8]* @.str2628,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4965 
  store %object* %opresult4965, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4966 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2629,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4966 
; compilenode returning %call4966 
  ret %object* %call4966 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply4973(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_o = getelementptr %object** %args, i32 0 
  %var_val_o4974 = load %object** %var_o 
; compilenode returning %var_val_o4974 
  store %object* %var_val_o4974, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4975 = call %object* @callmethod(%object* %self, i8* getelementptr([12 x i8]* @.str2633,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4975 
; compilenode returning %call4975 
  ret %object* %call4975 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply4996(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_c = getelementptr %object** %args, i32 0 
  %var_val_c4997 = load %object** %var_c 
; compilenode returning %var_val_c4997 
  store %object* %var_val_c4997, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4998 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2651,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4998 
; compilenode returning %call4998 
  ret %object* %call4998 
} 
;;;; ENDS 
;;;; METHOD DEFINITION: apply 
; have closure method: 1 
define %object* @meth_apply5043(%object* %realself, i32 %nparams, %object** %args, %object*** %closure) { 
entry: 
  %varc_self = getelementptr %object*** %closure, i32 0 
  %self2 = load %object*** %varc_self 
  %self = load %object** %self2 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %var_x = getelementptr %object** %args, i32 0 
  %var_val_x5044 = load %object** %var_x 
; compilenode returning %var_val_x5044 
  store %object* %var_val_x5044, %object** %params_0 
  %call5045 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call5045 
  ret %object* %call5045 
} 
;;;; ENDS 
@.str = private unnamed_addr constant [6 x i8] c"Hello\00" 
@.str._plus = private unnamed_addr constant [2 x i8] c"+\00" 
@.str._minus = private unnamed_addr constant [2 x i8] c"-\00" 
@.str._asterisk = private unnamed_addr constant [2 x i8] c"*\00" 
@.str._slash = private unnamed_addr constant [2 x i8] c"/\00" 
@.str._percent = private unnamed_addr constant [2 x i8] c"%\00" 
@.str._index = private unnamed_addr constant [3 x i8] c"[]\00" 
@.str._push = private unnamed_addr constant [5 x i8] c"push\00" 
@.str._iter = private unnamed_addr constant [5 x i8] c"iter\00" 
@.str._apply = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str._havemore = private unnamed_addr constant [9 x i8] c"havemore\00" 
@.str._next = private unnamed_addr constant [5 x i8] c"next\00" 
@.str.asString = private unnamed_addr constant [9 x i8] c"asString\00" 
define i32 @main() { 
entry: 
  %ptrsize_p = getelementptr %object** null, i32 1 
  %ptrsize = ptrtoint %object** %ptrsize_p to i32 
  %paramssize = mul i32 %ptrsize, 16 
  %paramsu = call i8* @malloc(i32 %paramssize) 
  %params = bitcast i8* %paramsu to %object** 
  %params_0 = getelementptr %object** %params, i32 0 
  %params_1 = getelementptr %object** %params, i32 1 
  %params_2 = getelementptr %object** %params, i32 2 
  %params_3 = getelementptr %object** %params, i32 3 
  %params_4 = getelementptr %object** %params, i32 4 
  %params_5 = getelementptr %object** %params, i32 5 
  %params_6 = getelementptr %object** %params, i32 6 
  %params_7 = getelementptr %object** %params, i32 7 
  %params_8 = getelementptr %object** %params, i32 8 
  %params_9 = getelementptr %object** %params, i32 9 
  %params_10 = getelementptr %object** %params, i32 10 
  %self = call %object* @alloc_obj() 
  %num0 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num0 
  %var_tmp = call %object** @alloc_var() 
  %var_tmp_dec = getelementptr %object* %num0, i32 0 
  store %object* %var_tmp_dec, %object** %var_tmp 
; compilenode returning  
  %num1 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num1 
  %var_linenum = call %object** @alloc_var() 
  %var_linenum_dec = getelementptr %object* %num1, i32 0 
  store %object* %var_linenum_dec, %object** %var_linenum 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname2, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_identifiertok2)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname8, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_stringtok8)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname14, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_lbracetok14)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname20, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_rbracetok20)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname26, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_lparentok26)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname32, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_rparentok32)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname38, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_lsquaretok38)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname44, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_rsquaretok44)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname50, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_commatok50)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([7 x i8]* @.str.methname56, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_dottok56)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([7 x i8]* @.str.methname62, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_numtok62)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname68, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_keywordtok68)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([6 x i8]* @.str.methname74, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_optok74)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname80, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_arrowtok80)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname86, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_bindtok86)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname92, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_modechange92)) 
; compilenode returning  
  %str299 = getelementptr [11 x i8]* @.str182, i32 0, i32 0 
  %string299 = call %object* @alloc_String(i8* %str299) 
; compilenode returning %string299 
  store %object* %string299, %object** %params_0 
  %call300 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call300 
  %call301 = call %object* @gracelib_readall(%object* null, i32 0, %object** null) 
; compilenode returning %call301 
  %var_input = call %object** @alloc_var() 
  %var_input_dec = getelementptr %object* %call301, i32 0 
  store %object* %var_input_dec, %object** %var_input 
; compilenode returning  
  %array302 = call %object* @alloc_Array() 
  %str303 = getelementptr [2 x i8]* @.str183, i32 0, i32 0 
  %string303 = call %object* @alloc_String(i8* %str303) 
; compilenode returning %string303 
  store %object* %string303, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str304 = getelementptr [2 x i8]* @.str184, i32 0, i32 0 
  %string304 = call %object* @alloc_String(i8* %str304) 
; compilenode returning %string304 
  store %object* %string304, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str305 = getelementptr [2 x i8]* @.str185, i32 0, i32 0 
  %string305 = call %object* @alloc_String(i8* %str305) 
; compilenode returning %string305 
  store %object* %string305, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str306 = getelementptr [2 x i8]* @.str186, i32 0, i32 0 
  %string306 = call %object* @alloc_String(i8* %str306) 
; compilenode returning %string306 
  store %object* %string306, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str307 = getelementptr [2 x i8]* @.str187, i32 0, i32 0 
  %string307 = call %object* @alloc_String(i8* %str307) 
; compilenode returning %string307 
  store %object* %string307, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str308 = getelementptr [2 x i8]* @.str188, i32 0, i32 0 
  %string308 = call %object* @alloc_String(i8* %str308) 
; compilenode returning %string308 
  store %object* %string308, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str309 = getelementptr [2 x i8]* @.str189, i32 0, i32 0 
  %string309 = call %object* @alloc_String(i8* %str309) 
; compilenode returning %string309 
  store %object* %string309, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str310 = getelementptr [2 x i8]* @.str190, i32 0, i32 0 
  %string310 = call %object* @alloc_String(i8* %str310) 
; compilenode returning %string310 
  store %object* %string310, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str311 = getelementptr [2 x i8]* @.str191, i32 0, i32 0 
  %string311 = call %object* @alloc_String(i8* %str311) 
; compilenode returning %string311 
  store %object* %string311, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str312 = getelementptr [2 x i8]* @.str192, i32 0, i32 0 
  %string312 = call %object* @alloc_String(i8* %str312) 
; compilenode returning %string312 
  store %object* %string312, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str313 = getelementptr [2 x i8]* @.str193, i32 0, i32 0 
  %string313 = call %object* @alloc_String(i8* %str313) 
; compilenode returning %string313 
  store %object* %string313, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str314 = getelementptr [2 x i8]* @.str194, i32 0, i32 0 
  %string314 = call %object* @alloc_String(i8* %str314) 
; compilenode returning %string314 
  store %object* %string314, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str315 = getelementptr [2 x i8]* @.str195, i32 0, i32 0 
  %string315 = call %object* @alloc_String(i8* %str315) 
; compilenode returning %string315 
  store %object* %string315, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str316 = getelementptr [2 x i8]* @.str196, i32 0, i32 0 
  %string316 = call %object* @alloc_String(i8* %str316) 
; compilenode returning %string316 
  store %object* %string316, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str317 = getelementptr [2 x i8]* @.str197, i32 0, i32 0 
  %string317 = call %object* @alloc_String(i8* %str317) 
; compilenode returning %string317 
  store %object* %string317, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str318 = getelementptr [2 x i8]* @.str198, i32 0, i32 0 
  %string318 = call %object* @alloc_String(i8* %str318) 
; compilenode returning %string318 
  store %object* %string318, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str319 = getelementptr [2 x i8]* @.str199, i32 0, i32 0 
  %string319 = call %object* @alloc_String(i8* %str319) 
; compilenode returning %string319 
  store %object* %string319, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str320 = getelementptr [2 x i8]* @.str200, i32 0, i32 0 
  %string320 = call %object* @alloc_String(i8* %str320) 
; compilenode returning %string320 
  store %object* %string320, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str321 = getelementptr [2 x i8]* @.str201, i32 0, i32 0 
  %string321 = call %object* @alloc_String(i8* %str321) 
; compilenode returning %string321 
  store %object* %string321, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str322 = getelementptr [2 x i8]* @.str202, i32 0, i32 0 
  %string322 = call %object* @alloc_String(i8* %str322) 
; compilenode returning %string322 
  store %object* %string322, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str323 = getelementptr [2 x i8]* @.str203, i32 0, i32 0 
  %string323 = call %object* @alloc_String(i8* %str323) 
; compilenode returning %string323 
  store %object* %string323, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str324 = getelementptr [2 x i8]* @.str204, i32 0, i32 0 
  %string324 = call %object* @alloc_String(i8* %str324) 
; compilenode returning %string324 
  store %object* %string324, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str325 = getelementptr [2 x i8]* @.str205, i32 0, i32 0 
  %string325 = call %object* @alloc_String(i8* %str325) 
; compilenode returning %string325 
  store %object* %string325, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str326 = getelementptr [2 x i8]* @.str206, i32 0, i32 0 
  %string326 = call %object* @alloc_String(i8* %str326) 
; compilenode returning %string326 
  store %object* %string326, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str327 = getelementptr [2 x i8]* @.str207, i32 0, i32 0 
  %string327 = call %object* @alloc_String(i8* %str327) 
; compilenode returning %string327 
  store %object* %string327, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str328 = getelementptr [2 x i8]* @.str208, i32 0, i32 0 
  %string328 = call %object* @alloc_String(i8* %str328) 
; compilenode returning %string328 
  store %object* %string328, %object** %params_0 
  call %object* @callmethod(%object* %array302, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array302 
  %var_ichars = call %object** @alloc_var() 
  %var_ichars_dec = getelementptr %object* %array302, i32 0 
  store %object* %var_ichars_dec, %object** %var_ichars 
; compilenode returning  
  %array329 = call %object* @alloc_Array() 
  %str330 = getelementptr [2 x i8]* @.str209, i32 0, i32 0 
  %string330 = call %object* @alloc_String(i8* %str330) 
; compilenode returning %string330 
  store %object* %string330, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str331 = getelementptr [2 x i8]* @.str210, i32 0, i32 0 
  %string331 = call %object* @alloc_String(i8* %str331) 
; compilenode returning %string331 
  store %object* %string331, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str332 = getelementptr [2 x i8]* @.str211, i32 0, i32 0 
  %string332 = call %object* @alloc_String(i8* %str332) 
; compilenode returning %string332 
  store %object* %string332, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str333 = getelementptr [2 x i8]* @.str212, i32 0, i32 0 
  %string333 = call %object* @alloc_String(i8* %str333) 
; compilenode returning %string333 
  store %object* %string333, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str334 = getelementptr [2 x i8]* @.str213, i32 0, i32 0 
  %string334 = call %object* @alloc_String(i8* %str334) 
; compilenode returning %string334 
  store %object* %string334, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str335 = getelementptr [2 x i8]* @.str214, i32 0, i32 0 
  %string335 = call %object* @alloc_String(i8* %str335) 
; compilenode returning %string335 
  store %object* %string335, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str336 = getelementptr [2 x i8]* @.str215, i32 0, i32 0 
  %string336 = call %object* @alloc_String(i8* %str336) 
; compilenode returning %string336 
  store %object* %string336, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str337 = getelementptr [2 x i8]* @.str216, i32 0, i32 0 
  %string337 = call %object* @alloc_String(i8* %str337) 
; compilenode returning %string337 
  store %object* %string337, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str338 = getelementptr [2 x i8]* @.str217, i32 0, i32 0 
  %string338 = call %object* @alloc_String(i8* %str338) 
; compilenode returning %string338 
  store %object* %string338, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str339 = getelementptr [2 x i8]* @.str218, i32 0, i32 0 
  %string339 = call %object* @alloc_String(i8* %str339) 
; compilenode returning %string339 
  store %object* %string339, %object** %params_0 
  call %object* @callmethod(%object* %array329, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array329 
  %var_mchars = call %object** @alloc_var() 
  %var_mchars_dec = getelementptr %object* %array329, i32 0 
  store %object* %var_mchars_dec, %object** %var_mchars 
; compilenode returning  
  %array340 = call %object* @alloc_Array() 
  %str341 = getelementptr [2 x i8]* @.str219, i32 0, i32 0 
  %string341 = call %object* @alloc_String(i8* %str341) 
; compilenode returning %string341 
  store %object* %string341, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str342 = getelementptr [2 x i8]* @.str220, i32 0, i32 0 
  %string342 = call %object* @alloc_String(i8* %str342) 
; compilenode returning %string342 
  store %object* %string342, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str343 = getelementptr [2 x i8]* @.str221, i32 0, i32 0 
  %string343 = call %object* @alloc_String(i8* %str343) 
; compilenode returning %string343 
  store %object* %string343, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str344 = getelementptr [2 x i8]* @.str222, i32 0, i32 0 
  %string344 = call %object* @alloc_String(i8* %str344) 
; compilenode returning %string344 
  store %object* %string344, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str345 = getelementptr [2 x i8]* @.str223, i32 0, i32 0 
  %string345 = call %object* @alloc_String(i8* %str345) 
; compilenode returning %string345 
  store %object* %string345, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str346 = getelementptr [2 x i8]* @.str224, i32 0, i32 0 
  %string346 = call %object* @alloc_String(i8* %str346) 
; compilenode returning %string346 
  store %object* %string346, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str347 = getelementptr [2 x i8]* @.str225, i32 0, i32 0 
  %string347 = call %object* @alloc_String(i8* %str347) 
; compilenode returning %string347 
  store %object* %string347, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str348 = getelementptr [2 x i8]* @.str226, i32 0, i32 0 
  %string348 = call %object* @alloc_String(i8* %str348) 
; compilenode returning %string348 
  store %object* %string348, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str349 = getelementptr [2 x i8]* @.str227, i32 0, i32 0 
  %string349 = call %object* @alloc_String(i8* %str349) 
; compilenode returning %string349 
  store %object* %string349, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str350 = getelementptr [2 x i8]* @.str228, i32 0, i32 0 
  %string350 = call %object* @alloc_String(i8* %str350) 
; compilenode returning %string350 
  store %object* %string350, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
  %str351 = getelementptr [2 x i8]* @.str229, i32 0, i32 0 
  %string351 = call %object* @alloc_String(i8* %str351) 
; compilenode returning %string351 
  store %object* %string351, %object** %params_0 
  call %object* @callmethod(%object* %array340, i8* getelementptr([5 x i8]* @.str._push,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %array340 
  %var_ochars = call %object** @alloc_var() 
  %var_ochars_dec = getelementptr %object* %array340, i32 0 
  store %object* %var_ochars_dec, %object** %var_ochars 
; compilenode returning  
  %num352 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num352 
  %var_false = call %object** @alloc_var() 
  %var_false_dec = getelementptr %object* %num352, i32 0 
  store %object* %var_false_dec, %object** %var_false 
; compilenode returning  
  %num353 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num353 
  %var_true = call %object** @alloc_var() 
  %var_true_dec = getelementptr %object* %num353, i32 0 
  store %object* %var_true_dec, %object** %var_true 
; compilenode returning  
  %array354 = call %object* @alloc_Array() 
; compilenode returning %array354 
  %var_tokens = call %object** @alloc_var() 
  %var_tokens_dec = getelementptr %object* %array354, i32 0 
  store %object* %var_tokens_dec, %object** %var_tokens 
; compilenode returning  
  %str355 = getelementptr [11 x i8]* @.str230, i32 0, i32 0 
  %string355 = call %object* @alloc_String(i8* %str355) 
; compilenode returning %string355 
  %var_val_input356 = load %object** %var_input 
; compilenode returning %var_val_input356 
  %call357 = call %object* @gracelib_length(%object* %var_val_input356) 
; compilenode returning %call357 
  %str358 = getelementptr [14 x i8]* @.str231, i32 0, i32 0 
  %string358 = call %object* @alloc_String(i8* %str358) 
; compilenode returning %string358 
  store %object* %string355, %object** %params_0 
  store %object* %call357, %object** %params_1 
  store %object* %string358, %object** %params_2 
  %call359 = call %object* @gracelib_print(%object* null, i32 3, %object** %params) 
; compilenode returning %call359 
  %str360 = getelementptr [2 x i8]* @.str232, i32 0, i32 0 
  %string360 = call %object* @alloc_String(i8* %str360) 
; compilenode returning %string360 
  %var_mode = call %object** @alloc_var() 
  %var_mode_dec = getelementptr %object* %string360, i32 0 
  store %object* %var_mode_dec, %object** %var_mode 
; compilenode returning  
  %var_val_mode361 = load %object** %var_mode 
; compilenode returning %var_val_mode361 
  %var_newmode = call %object** @alloc_var() 
  %var_newmode_dec = getelementptr %object* %var_val_mode361, i32 0 
  store %object* %var_newmode_dec, %object** %var_newmode 
; compilenode returning  
  %bool362 = call %object* @alloc_Boolean(i32 0) 
; compilenode returning %bool362 
  %var_instr = call %object** @alloc_var() 
  %var_instr_dec = getelementptr %object* %bool362, i32 0 
  store %object* %var_instr_dec, %object** %var_instr 
; compilenode returning  
  %str363 = getelementptr [1 x i8]* @.str233, i32 0, i32 0 
  %string363 = call %object* @alloc_String(i8* %str363) 
; compilenode returning %string363 
  %var_accum = call %object** @alloc_var() 
  %var_accum_dec = getelementptr %object* %string363, i32 0 
  store %object* %var_accum_dec, %object** %var_accum 
; compilenode returning  
  %num365 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num365 
  %var_val_input366 = load %object** %var_input 
; compilenode returning %var_val_input366 
  %call367 = call %object* @gracelib_length(%object* %var_val_input366) 
; compilenode returning %call367 
  %num368 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num368 
  store %object* %num368, %object** %params_0 
  %diff370 = call %object* @callmethod(%object* %call367, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff370 
  store %object* %diff370, %object** %params_0 
  %opresult372 = call %object* @callmethod(%object* %num365, i8* getelementptr([3 x i8]* @.str234,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult372 
  %obj373 = call %object* @alloc_obj() 
  %closure374 = call %object*** @createclosure(i32 11) 
  call void @addtoclosure(%object*** %closure374, %object** %var_input) 
  call void @addtoclosure(%object*** %closure374, %object** %var_linenum) 
  call void @addtoclosure(%object*** %closure374, %object** %var_tokens) 
  call void @addtoclosure(%object*** %closure374, %object** %var_instr) 
  call void @addtoclosure(%object*** %closure374, %object** %var_mode) 
  call void @addtoclosure(%object*** %closure374, %object** %var_newmode) 
  call void @addtoclosure(%object*** %closure374, %object** %var_ichars) 
  call void @addtoclosure(%object*** %closure374, %object** %var_mchars) 
  call void @addtoclosure(%object*** %closure374, %object** %var_ochars) 
  call void @addtoclosure(%object*** %closure374, %object** %var_accum) 
  %selfpp632 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp632 
  call void @addtoclosure(%object*** %closure374, %object** %selfpp632) 
  call void @addclosuremethod(%object* %obj373, i8* getelementptr([6 x i8]* @.str.methname374, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply374), %object*** %closure374) 
; compilenode returning %obj373 
  store %object* %opresult372, %object** %params_0 
  %iter364 = call %object* @callmethod(%object* %opresult372, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor364 
BeginFor364: 
  %condobj364 = call %object* @callmethod(%object* %iter364, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond364_valp = call i1 @istrue(%object* %condobj364) 
  %cond364 = icmp eq i1 0, %cond364_valp 
br i1 %cond364, label %EndFor364, label %ForBody364 
ForBody364: 
 %forval364 = call %object* @callmethod(%object* %iter364, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval364, %object** %params_0 
  call %object* @callmethod(%object* %obj373, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor364 
EndFor364: 
; compilenode returning %opresult372 
  %var_val_tokens633 = load %object** %var_tokens 
; compilenode returning %var_val_tokens633 
  %var_val_mode634 = load %object** %var_mode 
; compilenode returning %var_val_mode634 
  %var_val_accum635 = load %object** %var_accum 
; compilenode returning %var_val_accum635 
  store %object* %var_val_tokens633, %object** %params_0 
  store %object* %var_val_mode634, %object** %params_1 
  store %object* %var_val_accum635, %object** %params_2 
; WARNING: non-member calls not fully supported yet 
  %call636 = call %object* @callmethod(%object* %self, i8* getelementptr([11 x i8]* @.str342,i32 0,i32 0), i32 3, %object** %params) 
; compilecall giving return register %call636 
; compilenode returning %call636 
  %array637 = call %object* @alloc_Array() 
; compilenode returning %array637 
  %var_values = call %object** @alloc_var() 
  %var_values_dec = getelementptr %object* %array637, i32 0 
  store %object* %var_values_dec, %object** %var_values 
; compilenode returning  
  %obj638 = call %object* @alloc_obj() 
  %var_val_tokens639 = load %object** %var_tokens 
; compilenode returning %var_val_tokens639 
  %num640 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num640 
  store %object* %num640, %object** %params_0 
  %idxres641 = call %object* @callmethod(%object* %var_val_tokens639, i8* getelementptr([3 x i8]* @.str._index,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %idxres641 
; OBJECT VAR DEC sym 
  call void @adddatum(%object* %obj638, %object* %idxres641, i32 0) 
  call void @addmethod(%object* %obj638, i8* getelementptr([4 x i8]* @.str.methname642, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @reader_sym_642)) 
  call void @addmethod(%object* %obj638, i8* getelementptr([6 x i8]* @.str.methnamew642, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @writer_sym_642)) 
; compilenode returning %obj638 
  %var_sym = call %object** @alloc_var() 
  %var_sym_dec = getelementptr %object* %obj638, i32 0 
  store %object* %var_sym_dec, %object** %var_sym 
; compilenode returning  
  %closure643 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure643, %object** %var_tokens) 
  call void @addtoclosure(%object*** %closure643, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure643, %object** %var_linenum) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([5 x i8]* @.str.methname643, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_next643), %object*** %closure643) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([7 x i8]* @.str.methname696, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astfor696)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname774, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astwhile774)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([6 x i8]* @.str.methname843, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astif843)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname945, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astmethod945)) 
; compilenode returning  
  %closure1052 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure1052, %object** %var_linenum) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname1052, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_astcall1052), %object*** %closure1052) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname1136, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astobject1136)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname1180, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astarray1180)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname1224, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astmember1224)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname1267, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astidentifier1267)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname1283, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_aststring1283)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([7 x i8]* @.str.methname1299, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astnum1299)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([6 x i8]* @.str.methname1315, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astop1315)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname1381, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astindex1381)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname1439, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astbind1439)) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname1497, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_astvardec1497)) 
; compilenode returning  
  %closure1557 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure1557, %object** %var_sym) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([7 x i8]* @.str.methname1557, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_accept1557), %object*** %closure1557) 
; compilenode returning  
  %closure1564 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1564, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1564, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname1564, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_pushnum1564), %object*** %closure1564) 
; compilenode returning  
  %closure1573 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1573, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1573, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname1573, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_pushstring1573), %object*** %closure1573) 
; compilenode returning  
  %closure1582 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1582, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1582, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([15 x i8]* @.str.methname1582, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_pushidentifier1582), %object*** %closure1582) 
; compilenode returning  
  %closure1591 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1591, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1591, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([5 x i8]* @.str.methname1591, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_doif1591), %object*** %closure1591) 
; compilenode returning  
  %closure1671 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1671, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1671, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([6 x i8]* @.str.methname1671, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_dofor1671), %object*** %closure1671) 
; compilenode returning  
  %closure1731 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1731, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1731, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname1731, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_dowhile1731), %object*** %closure1731) 
; compilenode returning  
  %closure1790 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure1790, %object** %var_sym) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname1790, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_identifier1790), %object*** %closure1790) 
; compilenode returning  
  %closure1819 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure1819, %object** %var_sym) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname1819, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_expression1819), %object*** %closure1819) 
; compilenode returning  
  %closure1861 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure1861, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname1861, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_postfixsquare1861), %object*** %closure1861) 
; compilenode returning  
  %closure1881 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1881, %object** %var_values) 
  call void @addtoclosure(%object*** %closure1881, %object** %var_sym) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([15 x i8]* @.str.methname1881, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_expressionrest1881), %object*** %closure1881) 
; compilenode returning  
  %closure1902 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1902, %object** %var_values) 
  call void @addtoclosure(%object*** %closure1902, %object** %var_sym) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname1902, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_dotrest1902), %object*** %closure1902) 
; compilenode returning  
  %closure1929 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure1929, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname1929, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_callrest1929), %object*** %closure1929) 
; compilenode returning  
  %closure1991 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure1991, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure1991, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([7 x i8]* @.str.methname1991, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_vardec1991), %object*** %closure1991) 
; compilenode returning  
  %closure2021 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure2021, %object** %var_values) 
  call void @addtoclosure(%object*** %closure2021, %object** %var_sym) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([8 x i8]* @.str.methname2021, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_doarray2021), %object*** %closure2021) 
; compilenode returning  
  %closure2087 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure2087, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure2087, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([9 x i8]* @.str.methname2087, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_doobject2087), %object*** %closure2087) 
; compilenode returning  
  %closure2155 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure2155, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure2155, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname2155, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_methoddec2155), %object*** %closure2155) 
; compilenode returning  
  %closure2275 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure2275, %object** %var_sym) 
  call void @addtoclosure(%object*** %closure2275, %object** %var_values) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname2275, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_statement2275), %object*** %closure2275) 
; compilenode returning  
  %str2312 = getelementptr [20 x i8]* @.str1284, i32 0, i32 0 
  %string2312 = call %object* @alloc_String(i8* %str2312) 
; compilenode returning %string2312 
  store %object* %string2312, %object** %params_0 
  %call2313 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2313 
  %var_val_tokens2314 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2314 
  %var_otoks = call %object** @alloc_var() 
  %var_otoks_dec = getelementptr %object* %var_val_tokens2314, i32 0 
  store %object* %var_otoks_dec, %object** %var_otoks 
; compilenode returning  
  %array2315 = call %object* @alloc_Array() 
; compilenode returning %array2315 
  store %object* %array2315, %object** %var_tokens 
; compilenode returning %array2315 
  %num2317 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2317 
  %var_val_otoks2318 = load %object** %var_otoks 
; compilenode returning %var_val_otoks2318 
  %call2319 = call %object* @callmethod(%object* %var_val_otoks2318, i8* getelementptr([7 x i8]* @.str1285,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2319 
; compilenode returning %call2319 
; compilenode returning %call2319 
  %num2320 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2320 
  store %object* %num2320, %object** %params_0 
  %diff2322 = call %object* @callmethod(%object* %call2319, i8* getelementptr([2 x i8]* @.str._minus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %diff2322 
  store %object* %diff2322, %object** %params_0 
  %opresult2324 = call %object* @callmethod(%object* %num2317, i8* getelementptr([3 x i8]* @.str1286,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2324 
  %obj2325 = call %object* @alloc_obj() 
  %closure2326 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure2326, %object** %var_otoks) 
  call void @addtoclosure(%object*** %closure2326, %object** %var_tokens) 
  %selfpp2332 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2332 
  call void @addtoclosure(%object*** %closure2326, %object** %selfpp2332) 
  call void @addclosuremethod(%object* %obj2325, i8* getelementptr([6 x i8]* @.str.methname2326, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2326), %object*** %closure2326) 
; compilenode returning %obj2325 
  store %object* %opresult2324, %object** %params_0 
  %iter2316 = call %object* @callmethod(%object* %opresult2324, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2316 
BeginFor2316: 
  %condobj2316 = call %object* @callmethod(%object* %iter2316, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2316_valp = call i1 @istrue(%object* %condobj2316) 
  %cond2316 = icmp eq i1 0, %cond2316_valp 
br i1 %cond2316, label %EndFor2316, label %ForBody2316 
ForBody2316: 
 %forval2316 = call %object* @callmethod(%object* %iter2316, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2316, %object** %params_0 
  call %object* @callmethod(%object* %obj2325, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2316 
EndFor2316: 
; compilenode returning %opresult2324 
  %str2333 = getelementptr [8 x i8]* @.str1290, i32 0, i32 0 
  %string2333 = call %object* @alloc_String(i8* %str2333) 
; compilenode returning %string2333 
  %var_val_tokens2334 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2334 
  %call2335 = call %object* @callmethod(%object* %var_val_tokens2334, i8* getelementptr([7 x i8]* @.str1291,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2335 
; compilenode returning %call2335 
; compilenode returning %call2335 
  %str2336 = getelementptr [10 x i8]* @.str1292, i32 0, i32 0 
  %string2336 = call %object* @alloc_String(i8* %str2336) 
; compilenode returning %string2336 
  store %object* %string2333, %object** %params_0 
  store %object* %call2335, %object** %params_1 
  store %object* %string2336, %object** %params_2 
  %call2337 = call %object* @gracelib_print(%object* null, i32 3, %object** %params) 
; compilenode returning %call2337 
  %num2338 = call %object* @alloc_Float64(double 1.0) 
; compilenode returning %num2338 
  store %object* %num2338, %object** %var_linenum 
; compilenode returning %num2338 
; WARNING: non-member calls not fully supported yet 
  %call2339 = call %object* @callmethod(%object* %self, i8* getelementptr([5 x i8]* @.str1293,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2339 
; compilenode returning %call2339 
  %var_val_tokens2340 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2340 
  %call2341 = call %object* @callmethod(%object* %var_val_tokens2340, i8* getelementptr([7 x i8]* @.str1294,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2341 
; compilenode returning %call2341 
; compilenode returning %call2341 
  %num2342 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2342 
  store %object* %num2342, %object** %params_0 
  %sum2344 = call %object* @callmethod(%object* %call2341, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2344 
  %var_oldlength = call %object** @alloc_var() 
  %var_oldlength_dec = getelementptr %object* %sum2344, i32 0 
  store %object* %var_oldlength_dec, %object** %var_oldlength 
; compilenode returning  
  br label %BeginIf2345 
BeginIf2345: 
  %var_val_tokens2346 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2346 
  %call2347 = call %object* @callmethod(%object* %var_val_tokens2346, i8* getelementptr([7 x i8]* @.str1295,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2347 
; compilenode returning %call2347 
; compilenode returning %call2347 
  %num2348 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2348 
  store %object* %num2348, %object** %params_0 
  %opresult2350 = call %object* @callmethod(%object* %call2347, i8* getelementptr([3 x i8]* @.str1296,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2350 
  %cond2345_valp = call i1 @istrue(%object* %opresult2350) 
  %cond2345 = icmp eq i1 0, %cond2345_valp 
br i1 %cond2345, label %EndIf2345, label %TrueBranch2345 
TrueBranch2345: 
; WARNING: non-member calls not fully supported yet 
  %call2351 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1297,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2351 
; compilenode returning %call2351 
  br label %EndIf2345 
EndIf2345: 
  %if2345 = phi %object* [ %call2351, %TrueBranch2345], [%opresult2350, %BeginIf2345] 
; compilenode returning %if2345 
  br label %BeginWhile2352 
BeginWhile2352: 
  %var_val_tokens2353 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2353 
  %call2354 = call %object* @callmethod(%object* %var_val_tokens2353, i8* getelementptr([7 x i8]* @.str1298,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2354 
; compilenode returning %call2354 
; compilenode returning %call2354 
  %num2355 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2355 
  store %object* %num2355, %object** %params_0 
  %opresult2357 = call %object* @callmethod(%object* %call2354, i8* getelementptr([2 x i8]* @.str1299,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2357 
  %cond2352_valp = call i1 @istrue(%object* %opresult2357) 
  %cond2352 = icmp eq i1 0, %cond2352_valp 
br i1 %cond2352, label %EndWhile2352, label %WhileBody2352 
WhileBody2352: 
; WARNING: non-member calls not fully supported yet 
  %call2358 = call %object* @callmethod(%object* %self, i8* getelementptr([10 x i8]* @.str1300,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2358 
; compilenode returning %call2358 
  br label %BeginIf2359 
BeginIf2359: 
  %var_val_tokens2360 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2360 
  %call2361 = call %object* @callmethod(%object* %var_val_tokens2360, i8* getelementptr([7 x i8]* @.str1301,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2361 
; compilenode returning %call2361 
; compilenode returning %call2361 
  %var_val_oldlength2362 = load %object** %var_oldlength 
; compilenode returning %var_val_oldlength2362 
  store %object* %var_val_oldlength2362, %object** %params_0 
  %opresult2364 = call %object* @callmethod(%object* %call2361, i8* getelementptr([3 x i8]* @.str1302,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult2364 
  %cond2359_valp = call i1 @istrue(%object* %opresult2364) 
  %cond2359 = icmp eq i1 0, %cond2359_valp 
br i1 %cond2359, label %EndIf2359, label %TrueBranch2359 
TrueBranch2359: 
  %str2365 = getelementptr [25 x i8]* @.str1303, i32 0, i32 0 
  %string2365 = call %object* @alloc_String(i8* %str2365) 
; compilenode returning %string2365 
  %var_val_linenum2366 = load %object** %var_linenum 
; compilenode returning %var_val_linenum2366 
  %str2367 = getelementptr [16 x i8]* @.str1304, i32 0, i32 0 
  %string2367 = call %object* @alloc_String(i8* %str2367) 
; compilenode returning %string2367 
  %var_val_tokens2368 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2368 
  store %object* %string2365, %object** %params_0 
  store %object* %var_val_linenum2366, %object** %params_1 
  store %object* %string2367, %object** %params_2 
  store %object* %var_val_tokens2368, %object** %params_3 
  %call2369 = call %object* @gracelib_print(%object* null, i32 4, %object** %params) 
; compilenode returning %call2369 
  %str2370 = getelementptr [12 x i8]* @.str1305, i32 0, i32 0 
  %string2370 = call %object* @alloc_String(i8* %str2370) 
; compilenode returning %string2370 
  %var_val_linenum2371 = load %object** %var_linenum 
; compilenode returning %var_val_linenum2371 
  store %object* %string2370, %object** %params_0 
  store %object* %var_val_linenum2371, %object** %params_1 
  %call2372 = call %object* @gracelib_print(%object* null, i32 2, %object** %params) 
; compilenode returning %call2372 
  %str2373 = getelementptr [14 x i8]* @.str1306, i32 0, i32 0 
  %string2373 = call %object* @alloc_String(i8* %str2373) 
; compilenode returning %string2373 
  store %object* %string2373, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call2374 = call %object* @callmethod(%object* %self, i8* getelementptr([6 x i8]* @.str1307,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call2374 
; compilenode returning %call2374 
  br label %EndIf2359 
EndIf2359: 
  %if2359 = phi %object* [ %call2374, %TrueBranch2359], [%opresult2364, %BeginIf2359] 
; compilenode returning %if2359 
  %var_val_tokens2375 = load %object** %var_tokens 
; compilenode returning %var_val_tokens2375 
  %call2376 = call %object* @callmethod(%object* %var_val_tokens2375, i8* getelementptr([7 x i8]* @.str1308,i32 0,i32 0), i32 0, %object** %params) 
; compilecall giving return register %call2376 
; compilenode returning %call2376 
; compilenode returning %call2376 
  %num2377 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2377 
  store %object* %num2377, %object** %params_0 
  %sum2379 = call %object* @callmethod(%object* %call2376, i8* getelementptr([2 x i8]* @.str._plus,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %sum2379 
  store %object* %sum2379, %object** %var_oldlength 
; compilenode returning %sum2379 
  br label %BeginWhile2352 
EndWhile2352: 
; compilenode returning %opresult2357 
  %str2380 = getelementptr [1 x i8]* @.str1309, i32 0, i32 0 
  %string2380 = call %object* @alloc_String(i8* %str2380) 
; compilenode returning %string2380 
  store %object* %string2380, %object** %params_0 
  %call2381 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2381 
  %str2382 = getelementptr [1 x i8]* @.str1310, i32 0, i32 0 
  %string2382 = call %object* @alloc_String(i8* %str2382) 
; compilenode returning %string2382 
  store %object* %string2382, %object** %params_0 
  %call2383 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2383 
  %str2384 = getelementptr [7 x i8]* @.str1311, i32 0, i32 0 
  %string2384 = call %object* @alloc_String(i8* %str2384) 
; compilenode returning %string2384 
  store %object* %string2384, %object** %params_0 
  %call2385 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2385 
  %var_val_values2387 = load %object** %var_values 
; compilenode returning %var_val_values2387 
  %obj2388 = call %object* @alloc_obj() 
  %closure2389 = call %object*** @createclosure(i32 1) 
  %selfpp2394 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp2394 
  call void @addtoclosure(%object*** %closure2389, %object** %selfpp2394) 
  call void @addclosuremethod(%object* %obj2388, i8* getelementptr([6 x i8]* @.str.methname2389, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply2389), %object*** %closure2389) 
; compilenode returning %obj2388 
  store %object* %var_val_values2387, %object** %params_0 
  %iter2386 = call %object* @callmethod(%object* %var_val_values2387, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2386 
BeginFor2386: 
  %condobj2386 = call %object* @callmethod(%object* %iter2386, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond2386_valp = call i1 @istrue(%object* %condobj2386) 
  %cond2386 = icmp eq i1 0, %cond2386_valp 
br i1 %cond2386, label %EndFor2386, label %ForBody2386 
ForBody2386: 
 %forval2386 = call %object* @callmethod(%object* %iter2386, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval2386, %object** %params_0 
  call %object* @callmethod(%object* %obj2388, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor2386 
EndFor2386: 
; compilenode returning %var_val_values2387 
  %str2395 = getelementptr [34 x i8]* @.str1314, i32 0, i32 0 
  %string2395 = call %object* @alloc_String(i8* %str2395) 
; compilenode returning %string2395 
  store %object* %string2395, %object** %params_0 
  %call2396 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call2396 
  %num2397 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num2397 
  %var_auto_count = call %object** @alloc_var() 
  %var_auto_count_dec = getelementptr %object* %num2397, i32 0 
  store %object* %var_auto_count_dec, %object** %var_auto_count 
; compilenode returning  
  %array2398 = call %object* @alloc_Array() 
; compilenode returning %array2398 
  %var_constants = call %object** @alloc_var() 
  %var_constants_dec = getelementptr %object* %array2398, i32 0 
  store %object* %var_constants_dec, %object** %var_constants 
; compilenode returning  
  %array2399 = call %object* @alloc_Array() 
; compilenode returning %array2399 
  %var_output = call %object** @alloc_var() 
  %var_output_dec = getelementptr %object* %array2399, i32 0 
  store %object* %var_output_dec, %object** %var_output 
; compilenode returning  
  %array2400 = call %object* @alloc_Array() 
; compilenode returning %array2400 
  %var_usedvars = call %object** @alloc_var() 
  %var_usedvars_dec = getelementptr %object* %array2400, i32 0 
  store %object* %var_usedvars_dec, %object** %var_usedvars 
; compilenode returning  
  %array2401 = call %object* @alloc_Array() 
; compilenode returning %array2401 
  %var_declaredvars = call %object** @alloc_var() 
  %var_declaredvars_dec = getelementptr %object* %array2401, i32 0 
  store %object* %var_declaredvars_dec, %object** %var_declaredvars 
; compilenode returning  
  %str2402 = getelementptr [6 x i8]* @.str1315, i32 0, i32 0 
  %string2402 = call %object* @alloc_String(i8* %str2402) 
; compilenode returning %string2402 
  %var_bblock = call %object** @alloc_var() 
  %var_bblock_dec = getelementptr %object* %string2402, i32 0 
  store %object* %var_bblock_dec, %object** %var_bblock 
; compilenode returning  
  %closure2403 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure2403, %object** %var_output) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([4 x i8]* @.str.methname2403, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_out2403), %object*** %closure2403) 
; compilenode returning  
  %closure2407 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure2407, %object** %var_bblock) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname2407, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_beginblock2407), %object*** %closure2407) 
; compilenode returning  
  %closure2417 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure2417, %object** %var_auto_count) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([13 x i8]* @.str.methname2417, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilearray2417), %object*** %closure2417) 
; compilenode returning  
  call void @addmethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname2465, i32 0, i32 0), %object*(%object*, i32, %object**)* getelementptr(%object* (%object*, i32, %object**)* @meth_compilemember2465)) 
; compilenode returning  
  %closure2475 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure2475, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure2475, %object** %var_constants) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([17 x i8]* @.str.methname2475, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compileobjvardec2475), %object*** %closure2475) 
; compilenode returning  
  %closure2724 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure2724, %object** %var_auto_count) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname2724, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compileobject2724), %object*** %closure2724) 
; compilenode returning  
  %closure2775 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure2775, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure2775, %object** %var_bblock) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([11 x i8]* @.str.methname2775, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilefor2775), %object*** %closure2775) 
; compilenode returning  
  %closure2958 = call %object*** @createclosure(i32 6) 
  call void @addtoclosure(%object*** %closure2958, %object** %var_output) 
  call void @addtoclosure(%object*** %closure2958, %object** %var_bblock) 
  call void @addtoclosure(%object*** %closure2958, %object** %var_usedvars) 
  call void @addtoclosure(%object*** %closure2958, %object** %var_declaredvars) 
  call void @addtoclosure(%object*** %closure2958, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure2958, %object** %var_constants) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname2958, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilemethod2958), %object*** %closure2958) 
; compilenode returning  
  %closure3420 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3420, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure3420, %object** %var_bblock) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([13 x i8]* @.str.methname3420, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilewhile3420), %object*** %closure3420) 
; compilenode returning  
  %closure3517 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3517, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure3517, %object** %var_bblock) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname3517, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compileif3517), %object*** %closure3517) 
; compilenode returning  
  %closure3740 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3740, %object** %var_usedvars) 
  call void @addtoclosure(%object*** %closure3740, %object** %var_auto_count) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([18 x i8]* @.str.methname3740, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compileidentifier3740), %object*** %closure3740) 
; compilenode returning  
  %closure3784 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure3784, %object** %var_usedvars) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([12 x i8]* @.str.methname3784, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilebind3784), %object*** %closure3784) 
; compilenode returning  
  %closure3866 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure3866, %object** %var_declaredvars) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([14 x i8]* @.str.methname3866, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilevardec3866), %object*** %closure3866) 
; compilenode returning  
  %closure3920 = call %object*** @createclosure(i32 1) 
  call void @addtoclosure(%object*** %closure3920, %object** %var_auto_count) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([13 x i8]* @.str.methname3920, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compileindex3920), %object*** %closure3920) 
; compilenode returning  
  %closure3962 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure3962, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure3962, %object** %var_constants) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([10 x i8]* @.str.methname3962, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compileop3962), %object*** %closure3962) 
; compilenode returning  
  %closure4166 = call %object*** @createclosure(i32 2) 
  call void @addtoclosure(%object*** %closure4166, %object** %var_constants) 
  call void @addtoclosure(%object*** %closure4166, %object** %var_auto_count) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([12 x i8]* @.str.methname4166, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilecall4166), %object*** %closure4166) 
; compilenode returning  
  %closure4397 = call %object*** @createclosure(i32 3) 
  call void @addtoclosure(%object*** %closure4397, %object** %var_auto_count) 
  call void @addtoclosure(%object*** %closure4397, %object** %var_constants) 
  call void @addtoclosure(%object*** %closure4397, %object** %var_tmp) 
  call void @addclosuremethod(%object* %self, i8* getelementptr([12 x i8]* @.str.methname4397, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_compilenode4397), %object*** %closure4397) 
; compilenode returning  
  %str4907 = getelementptr [59 x i8]* @.str2582, i32 0, i32 0 
  %string4907 = call %object* @alloc_String(i8* %str4907) 
; compilenode returning %string4907 
  store %object* %string4907, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4908 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2583,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4908 
; compilenode returning %call4908 
  %str4909 = getelementptr [61 x i8]* @.str2584, i32 0, i32 0 
  %string4909 = call %object* @alloc_String(i8* %str4909) 
; compilenode returning %string4909 
  store %object* %string4909, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4910 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2585,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4910 
; compilenode returning %call4910 
  %str4911 = getelementptr [62 x i8]* @.str2586, i32 0, i32 0 
  %string4911 = call %object* @alloc_String(i8* %str4911) 
; compilenode returning %string4911 
  store %object* %string4911, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4912 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2587,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4912 
; compilenode returning %call4912 
  %str4913 = getelementptr [65 x i8]* @.str2588, i32 0, i32 0 
  %string4913 = call %object* @alloc_String(i8* %str4913) 
; compilenode returning %string4913 
  store %object* %string4913, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4914 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2589,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4914 
; compilenode returning %call4914 
  %str4915 = getelementptr [62 x i8]* @.str2590, i32 0, i32 0 
  %string4915 = call %object* @alloc_String(i8* %str4915) 
; compilenode returning %string4915 
  store %object* %string4915, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4916 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2591,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4916 
; compilenode returning %call4916 
  %str4917 = getelementptr [64 x i8]* @.str2592, i32 0, i32 0 
  %string4917 = call %object* @alloc_String(i8* %str4917) 
; compilenode returning %string4917 
  store %object* %string4917, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4918 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2593,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4918 
; compilenode returning %call4918 
  %str4919 = getelementptr [63 x i8]* @.str2594, i32 0, i32 0 
  %string4919 = call %object* @alloc_String(i8* %str4919) 
; compilenode returning %string4919 
  store %object* %string4919, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4920 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2595,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4920 
; compilenode returning %call4920 
  %str4921 = getelementptr [64 x i8]* @.str2596, i32 0, i32 0 
  %string4921 = call %object* @alloc_String(i8* %str4921) 
; compilenode returning %string4921 
  store %object* %string4921, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4922 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2597,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4922 
; compilenode returning %call4922 
  %str4923 = getelementptr [64 x i8]* @.str2598, i32 0, i32 0 
  %string4923 = call %object* @alloc_String(i8* %str4923) 
; compilenode returning %string4923 
  store %object* %string4923, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4924 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2599,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4924 
; compilenode returning %call4924 
  %str4925 = getelementptr [66 x i8]* @.str2600, i32 0, i32 0 
  %string4925 = call %object* @alloc_String(i8* %str4925) 
; compilenode returning %string4925 
  store %object* %string4925, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4926 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2601,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4926 
; compilenode returning %call4926 
  %str4927 = getelementptr [72 x i8]* @.str2602, i32 0, i32 0 
  %string4927 = call %object* @alloc_String(i8* %str4927) 
; compilenode returning %string4927 
  store %object* %string4927, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4928 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2603,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4928 
; compilenode returning %call4928 
  %str4929 = getelementptr [64 x i8]* @.str2604, i32 0, i32 0 
  %string4929 = call %object* @alloc_String(i8* %str4929) 
; compilenode returning %string4929 
  store %object* %string4929, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4930 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2605,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4930 
; compilenode returning %call4930 
  %str4931 = getelementptr [71 x i8]* @.str2606, i32 0, i32 0 
  %string4931 = call %object* @alloc_String(i8* %str4931) 
; compilenode returning %string4931 
  store %object* %string4931, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4932 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2607,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4932 
; compilenode returning %call4932 
  %str4933 = getelementptr [203 x i8]* @.str2608, i32 0, i32 0 
  %string4933 = call %object* @alloc_String(i8* %str4933) 
; compilenode returning %string4933 
  store %object* %string4933, %object** %params_0 
  %call4934 = call %object* @gracelib_print(%object* null, i32 1, %object** %params) 
; compilenode returning %call4934 
  %str4935 = getelementptr [21 x i8]* @.str2609, i32 0, i32 0 
  %string4935 = call %object* @alloc_String(i8* %str4935) 
; compilenode returning %string4935 
  store %object* %string4935, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4936 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2610,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4936 
; compilenode returning %call4936 
  %str4937 = getelementptr [7 x i8]* @.str2611, i32 0, i32 0 
  %string4937 = call %object* @alloc_String(i8* %str4937) 
; compilenode returning %string4937 
  store %object* %string4937, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4938 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2612,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4938 
; compilenode returning %call4938 
  %str4939 = getelementptr [51 x i8]* @.str2613, i32 0, i32 0 
  %string4939 = call %object* @alloc_String(i8* %str4939) 
; compilenode returning %string4939 
  store %object* %string4939, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4940 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2614,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4940 
; compilenode returning %call4940 
  %str4941 = getelementptr [50 x i8]* @.str2615, i32 0, i32 0 
  %string4941 = call %object* @alloc_String(i8* %str4941) 
; compilenode returning %string4941 
  store %object* %string4941, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4942 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2616,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4942 
; compilenode returning %call4942 
  %str4943 = getelementptr [37 x i8]* @.str2617, i32 0, i32 0 
  %string4943 = call %object* @alloc_String(i8* %str4943) 
; compilenode returning %string4943 
  store %object* %string4943, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4944 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2618,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4944 
; compilenode returning %call4944 
  %str4945 = getelementptr [47 x i8]* @.str2619, i32 0, i32 0 
  %string4945 = call %object* @alloc_String(i8* %str4945) 
; compilenode returning %string4945 
  store %object* %string4945, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4946 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2620,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4946 
; compilenode returning %call4946 
  %str4947 = getelementptr [46 x i8]* @.str2621, i32 0, i32 0 
  %string4947 = call %object* @alloc_String(i8* %str4947) 
; compilenode returning %string4947 
  store %object* %string4947, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4948 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2622,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4948 
; compilenode returning %call4948 
  %num4950 = call %object* @alloc_Float64(double 0.0) 
; compilenode returning %num4950 
  %num4951 = call %object* @alloc_Float64(double 10.0) 
; compilenode returning %num4951 
  store %object* %num4951, %object** %params_0 
  %opresult4953 = call %object* @callmethod(%object* %num4950, i8* getelementptr([3 x i8]* @.str2623,i32 0,i32 0), i32 1, %object** %params) 
; compilenode returning %opresult4953 
  %obj4954 = call %object* @alloc_obj() 
  %closure4955 = call %object*** @createclosure(i32 1) 
  %selfpp4967 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4967 
  call void @addtoclosure(%object*** %closure4955, %object** %selfpp4967) 
  call void @addclosuremethod(%object* %obj4954, i8* getelementptr([6 x i8]* @.str.methname4955, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4955), %object*** %closure4955) 
; compilenode returning %obj4954 
  store %object* %opresult4953, %object** %params_0 
  %iter4949 = call %object* @callmethod(%object* %opresult4953, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4949 
BeginFor4949: 
  %condobj4949 = call %object* @callmethod(%object* %iter4949, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4949_valp = call i1 @istrue(%object* %condobj4949) 
  %cond4949 = icmp eq i1 0, %cond4949_valp 
br i1 %cond4949, label %EndFor4949, label %ForBody4949 
ForBody4949: 
 %forval4949 = call %object* @callmethod(%object* %iter4949, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4949, %object** %params_0 
  call %object* @callmethod(%object* %obj4954, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4949 
EndFor4949: 
; compilenode returning %opresult4953 
  %str4968 = getelementptr [37 x i8]* @.str2631, i32 0, i32 0 
  %string4968 = call %object* @alloc_String(i8* %str4968) 
; compilenode returning %string4968 
  store %object* %string4968, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4969 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2632,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4969 
; compilenode returning %call4969 
  %var_val_values4971 = load %object** %var_values 
; compilenode returning %var_val_values4971 
  %obj4972 = call %object* @alloc_obj() 
  %closure4973 = call %object*** @createclosure(i32 1) 
  %selfpp4976 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4976 
  call void @addtoclosure(%object*** %closure4973, %object** %selfpp4976) 
  call void @addclosuremethod(%object* %obj4972, i8* getelementptr([6 x i8]* @.str.methname4973, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4973), %object*** %closure4973) 
; compilenode returning %obj4972 
  store %object* %var_val_values4971, %object** %params_0 
  %iter4970 = call %object* @callmethod(%object* %var_val_values4971, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4970 
BeginFor4970: 
  %condobj4970 = call %object* @callmethod(%object* %iter4970, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4970_valp = call i1 @istrue(%object* %condobj4970) 
  %cond4970 = icmp eq i1 0, %cond4970_valp 
br i1 %cond4970, label %EndFor4970, label %ForBody4970 
ForBody4970: 
 %forval4970 = call %object* @callmethod(%object* %iter4970, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4970, %object** %params_0 
  call %object* @callmethod(%object* %obj4972, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4970 
EndFor4970: 
; compilenode returning %var_val_values4971 
  %str4977 = getelementptr [12 x i8]* @.str2635, i32 0, i32 0 
  %string4977 = call %object* @alloc_String(i8* %str4977) 
; compilenode returning %string4977 
  store %object* %string4977, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4978 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2636,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4978 
; compilenode returning %call4978 
  %str4979 = getelementptr [2 x i8]* @.str2637, i32 0, i32 0 
  %string4979 = call %object* @alloc_String(i8* %str4979) 
; compilenode returning %string4979 
  store %object* %string4979, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4980 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2638,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4980 
; compilenode returning %call4980 
  %str4981 = getelementptr [26 x i8]* @.str2639, i32 0, i32 0 
  %string4981 = call %object* @alloc_String(i8* %str4981) 
; compilenode returning %string4981 
  store %object* %string4981, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4982 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2640,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4982 
; compilenode returning %call4982 
  %str4983 = getelementptr [7 x i8]* @.str2641, i32 0, i32 0 
  %string4983 = call %object* @alloc_String(i8* %str4983) 
; compilenode returning %string4983 
  store %object* %string4983, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4984 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2642,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4984 
; compilenode returning %call4984 
  %str4985 = getelementptr [25 x i8]* @.str2643, i32 0, i32 0 
  %string4985 = call %object* @alloc_String(i8* %str4985) 
; compilenode returning %string4985 
  store %object* %string4985, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4986 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2644,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4986 
; compilenode returning %call4986 
  %str4987 = getelementptr [12 x i8]* @.str2645, i32 0, i32 0 
  %string4987 = call %object* @alloc_String(i8* %str4987) 
; compilenode returning %string4987 
  store %object* %string4987, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4988 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2646,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4988 
; compilenode returning %call4988 
  %str4989 = getelementptr [2 x i8]* @.str2647, i32 0, i32 0 
  %string4989 = call %object* @alloc_String(i8* %str4989) 
; compilenode returning %string4989 
  store %object* %string4989, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4990 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2648,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4990 
; compilenode returning %call4990 
  %str4991 = getelementptr [23 x i8]* @.str2649, i32 0, i32 0 
  %string4991 = call %object* @alloc_String(i8* %str4991) 
; compilenode returning %string4991 
  store %object* %string4991, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call4992 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2650,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call4992 
; compilenode returning %call4992 
  %var_val_constants4994 = load %object** %var_constants 
; compilenode returning %var_val_constants4994 
  %obj4995 = call %object* @alloc_obj() 
  %closure4996 = call %object*** @createclosure(i32 1) 
  %selfpp4999 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp4999 
  call void @addtoclosure(%object*** %closure4996, %object** %selfpp4999) 
  call void @addclosuremethod(%object* %obj4995, i8* getelementptr([6 x i8]* @.str.methname4996, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply4996), %object*** %closure4996) 
; compilenode returning %obj4995 
  store %object* %var_val_constants4994, %object** %params_0 
  %iter4993 = call %object* @callmethod(%object* %var_val_constants4994, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4993 
BeginFor4993: 
  %condobj4993 = call %object* @callmethod(%object* %iter4993, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond4993_valp = call i1 @istrue(%object* %condobj4993) 
  %cond4993 = icmp eq i1 0, %cond4993_valp 
br i1 %cond4993, label %EndFor4993, label %ForBody4993 
ForBody4993: 
 %forval4993 = call %object* @callmethod(%object* %iter4993, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval4993, %object** %params_0 
  call %object* @callmethod(%object* %obj4995, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor4993 
EndFor4993: 
; compilenode returning %var_val_constants4994 
  %str5000 = getelementptr [11 x i8]* @.str2653, i32 0, i32 0 
  %string5000 = call %object* @alloc_String(i8* %str5000) 
; compilenode returning %string5000 
  store %object* %string5000, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5001 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2654,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5001 
; compilenode returning %call5001 
  %str5002 = getelementptr [30 x i8]* @.str2655, i32 0, i32 0 
  %string5002 = call %object* @alloc_String(i8* %str5002) 
; compilenode returning %string5002 
  store %object* %string5002, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5003 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2656,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5003 
; compilenode returning %call5003 
  %str5004 = getelementptr [32 x i8]* @.str2657, i32 0, i32 0 
  %string5004 = call %object* @alloc_String(i8* %str5004) 
; compilenode returning %string5004 
  store %object* %string5004, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5005 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2658,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5005 
; compilenode returning %call5005 
  %str5006 = getelementptr [40 x i8]* @.str2659, i32 0, i32 0 
  %string5006 = call %object* @alloc_String(i8* %str5006) 
; compilenode returning %string5006 
  store %object* %string5006, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5007 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2660,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5007 
; compilenode returning %call5007 
  %str5008 = getelementptr [36 x i8]* @.str2661, i32 0, i32 0 
  %string5008 = call %object* @alloc_String(i8* %str5008) 
; compilenode returning %string5008 
  store %object* %string5008, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5009 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2662,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5009 
; compilenode returning %call5009 
  %str5010 = getelementptr [37 x i8]* @.str2663, i32 0, i32 0 
  %string5010 = call %object* @alloc_String(i8* %str5010) 
; compilenode returning %string5010 
  store %object* %string5010, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5011 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2664,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5011 
; compilenode returning %call5011 
  %str5012 = getelementptr [60 x i8]* @.str2665, i32 0, i32 0 
  %string5012 = call %object* @alloc_String(i8* %str5012) 
; compilenode returning %string5012 
  store %object* %string5012, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5013 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2666,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5013 
; compilenode returning %call5013 
  %str5014 = getelementptr [77 x i8]* @.str2667, i32 0, i32 0 
  %string5014 = call %object* @alloc_String(i8* %str5014) 
; compilenode returning %string5014 
  store %object* %string5014, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5015 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2668,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5015 
; compilenode returning %call5015 
  %str5016 = getelementptr [59 x i8]* @.str2669, i32 0, i32 0 
  %string5016 = call %object* @alloc_String(i8* %str5016) 
; compilenode returning %string5016 
  store %object* %string5016, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5017 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2670,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5017 
; compilenode returning %call5017 
  %str5018 = getelementptr [61 x i8]* @.str2671, i32 0, i32 0 
  %string5018 = call %object* @alloc_String(i8* %str5018) 
; compilenode returning %string5018 
  store %object* %string5018, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5019 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2672,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5019 
; compilenode returning %call5019 
  %str5020 = getelementptr [44 x i8]* @.str2673, i32 0, i32 0 
  %string5020 = call %object* @alloc_String(i8* %str5020) 
; compilenode returning %string5020 
  store %object* %string5020, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5021 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2674,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5021 
; compilenode returning %call5021 
  %str5022 = getelementptr [31 x i8]* @.str2675, i32 0, i32 0 
  %string5022 = call %object* @alloc_String(i8* %str5022) 
; compilenode returning %string5022 
  store %object* %string5022, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5023 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2676,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5023 
; compilenode returning %call5023 
  %str5024 = getelementptr [29 x i8]* @.str2677, i32 0, i32 0 
  %string5024 = call %object* @alloc_String(i8* %str5024) 
; compilenode returning %string5024 
  store %object* %string5024, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5025 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2678,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5025 
; compilenode returning %call5025 
  %str5026 = getelementptr [39 x i8]* @.str2679, i32 0, i32 0 
  %string5026 = call %object* @alloc_String(i8* %str5026) 
; compilenode returning %string5026 
  store %object* %string5026, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5027 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2680,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5027 
; compilenode returning %call5027 
  %str5028 = getelementptr [50 x i8]* @.str2681, i32 0, i32 0 
  %string5028 = call %object* @alloc_String(i8* %str5028) 
; compilenode returning %string5028 
  store %object* %string5028, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5029 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2682,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5029 
; compilenode returning %call5029 
  %str5030 = getelementptr [111 x i8]* @.str2683, i32 0, i32 0 
  %string5030 = call %object* @alloc_String(i8* %str5030) 
; compilenode returning %string5030 
  store %object* %string5030, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5031 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2684,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5031 
; compilenode returning %call5031 
  %str5032 = getelementptr [48 x i8]* @.str2685, i32 0, i32 0 
  %string5032 = call %object* @alloc_String(i8* %str5032) 
; compilenode returning %string5032 
  store %object* %string5032, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5033 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2686,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5033 
; compilenode returning %call5033 
  %str5034 = getelementptr [17 x i8]* @.str2687, i32 0, i32 0 
  %string5034 = call %object* @alloc_String(i8* %str5034) 
; compilenode returning %string5034 
  store %object* %string5034, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5035 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2688,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5035 
; compilenode returning %call5035 
  %str5036 = getelementptr [23 x i8]* @.str2689, i32 0, i32 0 
  %string5036 = call %object* @alloc_String(i8* %str5036) 
; compilenode returning %string5036 
  store %object* %string5036, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5037 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2690,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5037 
; compilenode returning %call5037 
  %str5038 = getelementptr [25 x i8]* @.str2691, i32 0, i32 0 
  %string5038 = call %object* @alloc_String(i8* %str5038) 
; compilenode returning %string5038 
  store %object* %string5038, %object** %params_0 
; WARNING: non-member calls not fully supported yet 
  %call5039 = call %object* @callmethod(%object* %self, i8* getelementptr([4 x i8]* @.str2692,i32 0,i32 0), i32 1, %object** %params) 
; compilecall giving return register %call5039 
; compilenode returning %call5039 
  %var_val_output5041 = load %object** %var_output 
; compilenode returning %var_val_output5041 
  %obj5042 = call %object* @alloc_obj() 
  %closure5043 = call %object*** @createclosure(i32 1) 
  %selfpp5046 = call %object** @alloc_var() 
  store %object* %self, %object** %selfpp5046 
  call void @addtoclosure(%object*** %closure5043, %object** %selfpp5046) 
  call void @addclosuremethod(%object* %obj5042, i8* getelementptr([6 x i8]* @.str.methname5043, i32 0, i32 0), %object*(%object*, i32, %object**, %object***)* getelementptr(%object* (%object*, i32, %object**, %object***)* @meth_apply5043), %object*** %closure5043) 
; compilenode returning %obj5042 
  store %object* %var_val_output5041, %object** %params_0 
  %iter5040 = call %object* @callmethod(%object* %var_val_output5041, i8* getelementptr([5 x i8]* @.str._iter,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor5040 
BeginFor5040: 
  %condobj5040 = call %object* @callmethod(%object* %iter5040, i8* getelementptr([9 x i8]* @.str._havemore,i32 0,i32 0), i32 1, %object** %params) 
  %cond5040_valp = call i1 @istrue(%object* %condobj5040) 
  %cond5040 = icmp eq i1 0, %cond5040_valp 
br i1 %cond5040, label %EndFor5040, label %ForBody5040 
ForBody5040: 
 %forval5040 = call %object* @callmethod(%object* %iter5040, i8* getelementptr([5 x i8]* @.str._next,i32 0,i32 0), i32 0, %object** %params) 
  store %object* %forval5040, %object** %params_0 
  call %object* @callmethod(%object* %obj5042, i8* getelementptr([6 x i8]* @.str._apply,i32 0,i32 0), i32 1, %object** %params) 
  br label %BeginFor5040 
EndFor5040: 
; compilenode returning %var_val_output5041 
  ret i32 0 
} 
define i32 @out(i8* %s) { 
entry: 
  call i32 @puts(i8* %s) 
  ret i32 0 
} 
; constant definitions 
@.str0 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str.methname5 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew5 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname7 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew7 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname2 = private unnamed_addr constant [14 x i8] c"identifiertok\00" 
@.str6 = private unnamed_addr constant [7 x i8] c"string\00" 
@.str.methname11 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew11 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname13 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew13 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname8 = private unnamed_addr constant [10 x i8] c"stringtok\00" 
@.str12 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str.methname17 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew17 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str15 = private unnamed_addr constant [2 x i8] c"{\00" 
@.str.methname19 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew19 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname14 = private unnamed_addr constant [10 x i8] c"lbracetok\00" 
@.str19 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str.methname23 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew23 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str22 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str.methname25 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew25 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname20 = private unnamed_addr constant [10 x i8] c"rbracetok\00" 
@.str26 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str.methname29 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew29 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str29 = private unnamed_addr constant [2 x i8] c"(\00" 
@.str.methname31 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew31 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname26 = private unnamed_addr constant [10 x i8] c"lparentok\00" 
@.str33 = private unnamed_addr constant [7 x i8] c"rparen\00" 
@.str.methname35 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew35 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str36 = private unnamed_addr constant [2 x i8] c")\00" 
@.str.methname37 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew37 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname32 = private unnamed_addr constant [10 x i8] c"rparentok\00" 
@.str40 = private unnamed_addr constant [8 x i8] c"lsquare\00" 
@.str.methname41 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew41 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str43 = private unnamed_addr constant [2 x i8] c"[\00" 
@.str.methname43 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew43 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname38 = private unnamed_addr constant [11 x i8] c"lsquaretok\00" 
@.str47 = private unnamed_addr constant [8 x i8] c"rsquare\00" 
@.str.methname47 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew47 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str50 = private unnamed_addr constant [2 x i8] c"]\00" 
@.str.methname49 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew49 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname44 = private unnamed_addr constant [11 x i8] c"rsquaretok\00" 
@.str54 = private unnamed_addr constant [6 x i8] c"comma\00" 
@.str.methname53 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew53 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str57 = private unnamed_addr constant [2 x i8] c",\00" 
@.str.methname55 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew55 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname50 = private unnamed_addr constant [9 x i8] c"commatok\00" 
@.str61 = private unnamed_addr constant [4 x i8] c"dot\00" 
@.str.methname59 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew59 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str64 = private unnamed_addr constant [2 x i8] c".\00" 
@.str.methname61 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew61 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname56 = private unnamed_addr constant [7 x i8] c"dottok\00" 
@.str68 = private unnamed_addr constant [4 x i8] c"num\00" 
@.str.methname65 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew65 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname67 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew67 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname62 = private unnamed_addr constant [7 x i8] c"numtok\00" 
@.str74 = private unnamed_addr constant [8 x i8] c"keyword\00" 
@.str.methname71 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew71 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname73 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew73 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname68 = private unnamed_addr constant [11 x i8] c"keywordtok\00" 
@.str80 = private unnamed_addr constant [3 x i8] c"op\00" 
@.str.methname77 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew77 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname79 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew79 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname74 = private unnamed_addr constant [6 x i8] c"optok\00" 
@.str86 = private unnamed_addr constant [6 x i8] c"arrow\00" 
@.str.methname83 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew83 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str89 = private unnamed_addr constant [3 x i8] c"->\00" 
@.str.methname85 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew85 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname80 = private unnamed_addr constant [9 x i8] c"arrowtok\00" 
@.str93 = private unnamed_addr constant [5 x i8] c"bind\00" 
@.str.methname89 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew89 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str96 = private unnamed_addr constant [3 x i8] c":=\00" 
@.str.methname91 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew91 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname86 = private unnamed_addr constant [8 x i8] c"bindtok\00" 
@.str100 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str101 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str102 = private unnamed_addr constant [2 x i8] c">\00" 
@.str103 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str104 = private unnamed_addr constant [2 x i8] c"i\00" 
@.str105 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str106 = private unnamed_addr constant [14 x i8] c"identifiertok\00" 
@.str107 = private unnamed_addr constant [7 x i8] c"object\00" 
@.str108 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str109 = private unnamed_addr constant [7 x i8] c"method\00" 
@.str110 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str111 = private unnamed_addr constant [4 x i8] c"var\00" 
@.str112 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str113 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str114 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str115 = private unnamed_addr constant [11 x i8] c"keywordtok\00" 
@.str116 = private unnamed_addr constant [4 x i8] c"and\00" 
@.str117 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str118 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str119 = private unnamed_addr constant [6 x i8] c"optok\00" 
@.str120 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str121 = private unnamed_addr constant [2 x i8] c"'\00" 
@.str122 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str123 = private unnamed_addr constant [10 x i8] c"stringtok\00" 
@.str124 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str125 = private unnamed_addr constant [2 x i8] c"\22\00" 
@.str126 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str127 = private unnamed_addr constant [10 x i8] c"stringtok\00" 
@.str128 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str129 = private unnamed_addr constant [2 x i8] c",\00" 
@.str130 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str131 = private unnamed_addr constant [9 x i8] c"commatok\00" 
@.str132 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str133 = private unnamed_addr constant [2 x i8] c".\00" 
@.str134 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str135 = private unnamed_addr constant [7 x i8] c"dottok\00" 
@.str136 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str137 = private unnamed_addr constant [2 x i8] c"{\00" 
@.str138 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str139 = private unnamed_addr constant [10 x i8] c"lbracetok\00" 
@.str140 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str141 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str142 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str143 = private unnamed_addr constant [10 x i8] c"rbracetok\00" 
@.str144 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str145 = private unnamed_addr constant [2 x i8] c"(\00" 
@.str146 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str147 = private unnamed_addr constant [10 x i8] c"lparentok\00" 
@.str148 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str149 = private unnamed_addr constant [2 x i8] c")\00" 
@.str150 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str151 = private unnamed_addr constant [10 x i8] c"rparentok\00" 
@.str152 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str153 = private unnamed_addr constant [2 x i8] c"[\00" 
@.str154 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str155 = private unnamed_addr constant [11 x i8] c"lsquaretok\00" 
@.str156 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str157 = private unnamed_addr constant [2 x i8] c"]\00" 
@.str158 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str159 = private unnamed_addr constant [11 x i8] c"rsquaretok\00" 
@.str160 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str161 = private unnamed_addr constant [2 x i8] c"m\00" 
@.str162 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str163 = private unnamed_addr constant [7 x i8] c"numtok\00" 
@.str164 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str165 = private unnamed_addr constant [2 x i8] c"o\00" 
@.str166 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str167 = private unnamed_addr constant [6 x i8] c"optok\00" 
@.str168 = private unnamed_addr constant [3 x i8] c"->\00" 
@.str169 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str170 = private unnamed_addr constant [9 x i8] c"arrowtok\00" 
@.str171 = private unnamed_addr constant [3 x i8] c":=\00" 
@.str172 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str173 = private unnamed_addr constant [8 x i8] c"bindtok\00" 
@.str174 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str175 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str176 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str177 = private unnamed_addr constant [2 x i8] c"c\00" 
@.str178 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str179 = private unnamed_addr constant [31 x i8] c"Lex error: no handler for mode\00" 
@.str180 = private unnamed_addr constant [11 x i8] c"with accum\00" 
@.str.methname92 = private unnamed_addr constant [11 x i8] c"modechange\00" 
@.str182 = private unnamed_addr constant [11 x i8] c"Reading...\00" 
@.str183 = private unnamed_addr constant [2 x i8] c"a\00" 
@.str184 = private unnamed_addr constant [2 x i8] c"b\00" 
@.str185 = private unnamed_addr constant [2 x i8] c"c\00" 
@.str186 = private unnamed_addr constant [2 x i8] c"d\00" 
@.str187 = private unnamed_addr constant [2 x i8] c"e\00" 
@.str188 = private unnamed_addr constant [2 x i8] c"f\00" 
@.str189 = private unnamed_addr constant [2 x i8] c"g\00" 
@.str190 = private unnamed_addr constant [2 x i8] c"h\00" 
@.str191 = private unnamed_addr constant [2 x i8] c"i\00" 
@.str192 = private unnamed_addr constant [2 x i8] c"j\00" 
@.str193 = private unnamed_addr constant [2 x i8] c"k\00" 
@.str194 = private unnamed_addr constant [2 x i8] c"l\00" 
@.str195 = private unnamed_addr constant [2 x i8] c"m\00" 
@.str196 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str197 = private unnamed_addr constant [2 x i8] c"o\00" 
@.str198 = private unnamed_addr constant [2 x i8] c"p\00" 
@.str199 = private unnamed_addr constant [2 x i8] c"q\00" 
@.str200 = private unnamed_addr constant [2 x i8] c"r\00" 
@.str201 = private unnamed_addr constant [2 x i8] c"s\00" 
@.str202 = private unnamed_addr constant [2 x i8] c"t\00" 
@.str203 = private unnamed_addr constant [2 x i8] c"u\00" 
@.str204 = private unnamed_addr constant [2 x i8] c"v\00" 
@.str205 = private unnamed_addr constant [2 x i8] c"w\00" 
@.str206 = private unnamed_addr constant [2 x i8] c"x\00" 
@.str207 = private unnamed_addr constant [2 x i8] c"y\00" 
@.str208 = private unnamed_addr constant [2 x i8] c"z\00" 
@.str209 = private unnamed_addr constant [2 x i8] c"0\00" 
@.str210 = private unnamed_addr constant [2 x i8] c"1\00" 
@.str211 = private unnamed_addr constant [2 x i8] c"2\00" 
@.str212 = private unnamed_addr constant [2 x i8] c"3\00" 
@.str213 = private unnamed_addr constant [2 x i8] c"4\00" 
@.str214 = private unnamed_addr constant [2 x i8] c"5\00" 
@.str215 = private unnamed_addr constant [2 x i8] c"6\00" 
@.str216 = private unnamed_addr constant [2 x i8] c"7\00" 
@.str217 = private unnamed_addr constant [2 x i8] c"8\00" 
@.str218 = private unnamed_addr constant [2 x i8] c"9\00" 
@.str219 = private unnamed_addr constant [2 x i8] c"+\00" 
@.str220 = private unnamed_addr constant [2 x i8] c"-\00" 
@.str221 = private unnamed_addr constant [2 x i8] c"/\00" 
@.str222 = private unnamed_addr constant [2 x i8] c"*\00" 
@.str223 = private unnamed_addr constant [2 x i8] c"=\00" 
@.str224 = private unnamed_addr constant [2 x i8] c":\00" 
@.str225 = private unnamed_addr constant [2 x i8] c"<\00" 
@.str226 = private unnamed_addr constant [2 x i8] c">\00" 
@.str227 = private unnamed_addr constant [2 x i8] c"%\00" 
@.str228 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str229 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str230 = private unnamed_addr constant [11 x i8] c"Tokenizing\00" 
@.str231 = private unnamed_addr constant [14 x i8] c"characters...\00" 
@.str232 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str233 = private unnamed_addr constant [1 x i8] c"\00" 
@.str234 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str235 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str236 = private unnamed_addr constant [2 x i8] c">\00" 
@.str237 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str238 = private unnamed_addr constant [21 x i8] c"Tokenizing character\00" 
@.str239 = private unnamed_addr constant [1 x i8] c"\00" 
@.str240 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str241 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str242 = private unnamed_addr constant [5 x i8] c"line\00" 
@.str.methname407 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew407 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname412 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew412 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str247 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str248 = private unnamed_addr constant [2 x i8] c"c\00" 
@.str249 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str250 = private unnamed_addr constant [2 x i8] c" \00" 
@.str251 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str252 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str253 = private unnamed_addr constant [2 x i8] c"'\00" 
@.str254 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str255 = private unnamed_addr constant [2 x i8] c"'\00" 
@.str256 = private unnamed_addr constant [2 x i8] c"\22\00" 
@.str257 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str258 = private unnamed_addr constant [2 x i8] c"\22\00" 
@.str259 = private unnamed_addr constant [9 x i8] c"contains\00" 
@.str260 = private unnamed_addr constant [2 x i8] c"i\00" 
@.str261 = private unnamed_addr constant [9 x i8] c"contains\00" 
@.str262 = private unnamed_addr constant [2 x i8] c"i\00" 
@.str263 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str264 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str265 = private unnamed_addr constant [2 x i8] c"m\00" 
@.str266 = private unnamed_addr constant [9 x i8] c"contains\00" 
@.str267 = private unnamed_addr constant [2 x i8] c"o\00" 
@.str268 = private unnamed_addr constant [2 x i8] c"(\00" 
@.str269 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str270 = private unnamed_addr constant [2 x i8] c")\00" 
@.str271 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str272 = private unnamed_addr constant [2 x i8] c",\00" 
@.str273 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str274 = private unnamed_addr constant [2 x i8] c".\00" 
@.str275 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str276 = private unnamed_addr constant [2 x i8] c"{\00" 
@.str277 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str278 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str279 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str280 = private unnamed_addr constant [2 x i8] c"[\00" 
@.str281 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str282 = private unnamed_addr constant [2 x i8] c"]\00" 
@.str283 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str284 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str285 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str286 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str287 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str288 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str289 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str290 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str291 = private unnamed_addr constant [2 x i8] c".\00" 
@.str292 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str293 = private unnamed_addr constant [2 x i8] c".\00" 
@.str294 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str295 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str296 = private unnamed_addr constant [2 x i8] c"o\00" 
@.str297 = private unnamed_addr constant [2 x i8] c"/\00" 
@.str298 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str299 = private unnamed_addr constant [2 x i8] c"/\00" 
@.str300 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str301 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str302 = private unnamed_addr constant [2 x i8] c"c\00" 
@.str303 = private unnamed_addr constant [2 x i8] c"\22\00" 
@.str304 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str305 = private unnamed_addr constant [2 x i8] c"\22\00" 
@.str306 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str307 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str308 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str309 = private unnamed_addr constant [2 x i8] c"'\00" 
@.str310 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str311 = private unnamed_addr constant [2 x i8] c"'\00" 
@.str312 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str313 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str314 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str315 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str316 = private unnamed_addr constant [11 x i8] c"modechange\00" 
@.str317 = private unnamed_addr constant [1 x i8] c"\00" 
@.str318 = private unnamed_addr constant [2 x i8] c"(\00" 
@.str319 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str320 = private unnamed_addr constant [2 x i8] c")\00" 
@.str321 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str322 = private unnamed_addr constant [2 x i8] c"[\00" 
@.str323 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str324 = private unnamed_addr constant [2 x i8] c"]\00" 
@.str325 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str326 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str327 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str328 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str329 = private unnamed_addr constant [11 x i8] c"modechange\00" 
@.str330 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str331 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str332 = private unnamed_addr constant [1 x i8] c"\00" 
@.str333 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str334 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str335 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str336 = private unnamed_addr constant [11 x i8] c"modechange\00" 
@.str337 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str338 = private unnamed_addr constant [2 x i8] c"n\00" 
@.str339 = private unnamed_addr constant [1 x i8] c"\00" 
@.str340 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname374 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str342 = private unnamed_addr constant [11 x i8] c"modechange\00" 
@.str.methname642 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str.methnamew642 = private unnamed_addr constant [6 x i8] c"sym:=\00" 
@.str345 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str346 = private unnamed_addr constant [2 x i8] c">\00" 
@.str347 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str348 = private unnamed_addr constant [6 x i8] c"sym:=\00" 
@.str349 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str350 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str351 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str352 = private unnamed_addr constant [13 x i8] c"remaining...\00" 
@.str353 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str354 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str355 = private unnamed_addr constant [5 x i8] c"line\00" 
@.str356 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str357 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str358 = private unnamed_addr constant [2 x i8] c">\00" 
@.str359 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str360 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str361 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str362 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str363 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str364 = private unnamed_addr constant [4 x i8] c"eof\00" 
@.str.methname693 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew693 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str367 = private unnamed_addr constant [6 x i8] c"sym:=\00" 
@.str.methname643 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str369 = private unnamed_addr constant [4 x i8] c"for\00" 
@.str.methname699 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew699 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname701 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew701 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname703 = private unnamed_addr constant [9 x i8] c"variable\00" 
@.str.methnamew703 = private unnamed_addr constant [11 x i8] c"variable:=\00" 
@.str.methname705 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str.methnamew705 = private unnamed_addr constant [7 x i8] c"body:=\00" 
@.str378 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname707 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew707 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str381 = private unnamed_addr constant [1 x i8] c"\00" 
@.str382 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str383 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str384 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname716 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str386 = private unnamed_addr constant [5 x i8] c"For(\00" 
@.str387 = private unnamed_addr constant [9 x i8] c"variable\00" 
@.str388 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str389 = private unnamed_addr constant [3 x i8] c")
\00" 
@.str390 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str391 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str392 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str393 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str394 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str395 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str396 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str397 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str398 = private unnamed_addr constant [6 x i8] c"Each:\00" 
@.str399 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str400 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str401 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str402 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str403 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str404 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str405 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str406 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname756 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname708 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname696 = private unnamed_addr constant [7 x i8] c"astfor\00" 
@.str410 = private unnamed_addr constant [6 x i8] c"while\00" 
@.str.methname777 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew777 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname779 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew779 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname781 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str.methnamew781 = private unnamed_addr constant [7 x i8] c"body:=\00" 
@.str417 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname783 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew783 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str420 = private unnamed_addr constant [1 x i8] c"\00" 
@.str421 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str422 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str423 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname792 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str425 = private unnamed_addr constant [7 x i8] c"While
\00" 
@.str426 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str427 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str428 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str429 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str430 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str431 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str432 = private unnamed_addr constant [4 x i8] c"Do:\00" 
@.str433 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str434 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str435 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str436 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str437 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str438 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str439 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str440 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname825 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname784 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname774 = private unnamed_addr constant [9 x i8] c"astwhile\00" 
@.str444 = private unnamed_addr constant [3 x i8] c"if\00" 
@.str.methname846 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew846 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname848 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew848 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname850 = private unnamed_addr constant [10 x i8] c"thenblock\00" 
@.str.methnamew850 = private unnamed_addr constant [12 x i8] c"thenblock:=\00" 
@.str.methname852 = private unnamed_addr constant [10 x i8] c"elseblock\00" 
@.str.methnamew852 = private unnamed_addr constant [12 x i8] c"elseblock:=\00" 
@.str453 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname854 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew854 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str456 = private unnamed_addr constant [1 x i8] c"\00" 
@.str457 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str458 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str459 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname863 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str461 = private unnamed_addr constant [4 x i8] c"If
\00" 
@.str462 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str463 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str464 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str465 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str466 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str467 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str468 = private unnamed_addr constant [6 x i8] c"Then:\00" 
@.str469 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str470 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str471 = private unnamed_addr constant [10 x i8] c"thenblock\00" 
@.str472 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str473 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str474 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str475 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str476 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname896 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str478 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str479 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str480 = private unnamed_addr constant [6 x i8] c"Else:\00" 
@.str481 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str482 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str483 = private unnamed_addr constant [10 x i8] c"elseblock\00" 
@.str484 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str485 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str486 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str487 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str488 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname927 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname855 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname843 = private unnamed_addr constant [6 x i8] c"astif\00" 
@.str492 = private unnamed_addr constant [7 x i8] c"method\00" 
@.str.methname948 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew948 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname950 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew950 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname952 = private unnamed_addr constant [7 x i8] c"params\00" 
@.str.methnamew952 = private unnamed_addr constant [9 x i8] c"params:=\00" 
@.str.methname954 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str.methnamew954 = private unnamed_addr constant [7 x i8] c"body:=\00" 
@.str.methname956 = private unnamed_addr constant [12 x i8] c"selfclosure\00" 
@.str.methnamew956 = private unnamed_addr constant [14 x i8] c"selfclosure:=\00" 
@.str503 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname958 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew958 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str506 = private unnamed_addr constant [1 x i8] c"\00" 
@.str507 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str508 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str509 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname967 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str511 = private unnamed_addr constant [8 x i8] c"Method
\00" 
@.str512 = private unnamed_addr constant [7 x i8] c"Name: \00" 
@.str513 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str514 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str515 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str516 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str517 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str518 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str519 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str520 = private unnamed_addr constant [12 x i8] c"Parameters:\00" 
@.str521 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str522 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str523 = private unnamed_addr constant [7 x i8] c"params\00" 
@.str524 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str525 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str526 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str527 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str528 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1003 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str530 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str531 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str532 = private unnamed_addr constant [6 x i8] c"Body:\00" 
@.str533 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str534 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str535 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str536 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str537 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str538 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str539 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str540 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1034 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname959 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname945 = private unnamed_addr constant [10 x i8] c"astmethod\00" 
@.str544 = private unnamed_addr constant [5 x i8] c"call\00" 
@.str.methname1055 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1055 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1057 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1057 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname1059 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str.methnamew1059 = private unnamed_addr constant [7 x i8] c"with:=\00" 
@.str.methname1064 = private unnamed_addr constant [5 x i8] c"line\00" 
@.str.methnamew1064 = private unnamed_addr constant [7 x i8] c"line:=\00" 
@.str553 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1066 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1066 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str556 = private unnamed_addr constant [1 x i8] c"\00" 
@.str557 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str558 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str559 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1075 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str561 = private unnamed_addr constant [6 x i8] c"Call
\00" 
@.str562 = private unnamed_addr constant [9 x i8] c"Method:
\00" 
@.str563 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str564 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str565 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str566 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str567 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str568 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str569 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str570 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str571 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str572 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str573 = private unnamed_addr constant [12 x i8] c"Parameters:\00" 
@.str574 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str575 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str576 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str577 = private unnamed_addr constant [4 x i8] c"
  \00" 
@.str578 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str579 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str580 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str581 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1118 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname1067 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1052 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str585 = private unnamed_addr constant [7 x i8] c"object\00" 
@.str.methname1139 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1139 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1141 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1141 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str590 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1143 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1143 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str593 = private unnamed_addr constant [1 x i8] c"\00" 
@.str594 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str595 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str596 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1152 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str598 = private unnamed_addr constant [7 x i8] c"Object\00" 
@.str599 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str600 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str601 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str602 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str603 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str604 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1162 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname1144 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1136 = private unnamed_addr constant [10 x i8] c"astobject\00" 
@.str608 = private unnamed_addr constant [6 x i8] c"array\00" 
@.str.methname1183 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1183 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1185 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1185 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str613 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1187 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1187 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str616 = private unnamed_addr constant [1 x i8] c"\00" 
@.str617 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str618 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str619 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1196 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str621 = private unnamed_addr constant [6 x i8] c"Array\00" 
@.str622 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str623 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str624 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str625 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str626 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str627 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1206 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str.methname1188 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1180 = private unnamed_addr constant [9 x i8] c"astarray\00" 
@.str631 = private unnamed_addr constant [7 x i8] c"member\00" 
@.str.methname1227 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1227 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1229 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1229 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname1231 = private unnamed_addr constant [3 x i8] c"in\00" 
@.str.methnamew1231 = private unnamed_addr constant [5 x i8] c"in:=\00" 
@.str638 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1233 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1233 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str641 = private unnamed_addr constant [1 x i8] c"\00" 
@.str642 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str643 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str644 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1242 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str646 = private unnamed_addr constant [8 x i8] c"Member(\00" 
@.str647 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str648 = private unnamed_addr constant [3 x i8] c")
\00" 
@.str649 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str650 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str651 = private unnamed_addr constant [3 x i8] c"in\00" 
@.str652 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str653 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str654 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1234 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1224 = private unnamed_addr constant [10 x i8] c"astmember\00" 
@.str657 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str.methname1270 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1270 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1272 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1272 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str662 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1274 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1274 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str665 = private unnamed_addr constant [12 x i8] c"Identifier(\00" 
@.str666 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str667 = private unnamed_addr constant [2 x i8] c")\00" 
@.str668 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str669 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1275 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1267 = private unnamed_addr constant [14 x i8] c"astidentifier\00" 
@.str672 = private unnamed_addr constant [7 x i8] c"string\00" 
@.str.methname1286 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1286 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1288 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1288 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str677 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1290 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1290 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str680 = private unnamed_addr constant [8 x i8] c"String(\00" 
@.str681 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str682 = private unnamed_addr constant [2 x i8] c")\00" 
@.str683 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str684 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1291 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1283 = private unnamed_addr constant [10 x i8] c"aststring\00" 
@.str687 = private unnamed_addr constant [4 x i8] c"num\00" 
@.str.methname1302 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1302 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1304 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1304 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str692 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1306 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1306 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str695 = private unnamed_addr constant [5 x i8] c"Num(\00" 
@.str696 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str697 = private unnamed_addr constant [2 x i8] c")\00" 
@.str698 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str699 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1307 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1299 = private unnamed_addr constant [7 x i8] c"astnum\00" 
@.str702 = private unnamed_addr constant [3 x i8] c"op\00" 
@.str.methname1318 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1318 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1320 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1320 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname1322 = private unnamed_addr constant [5 x i8] c"left\00" 
@.str.methnamew1322 = private unnamed_addr constant [7 x i8] c"left:=\00" 
@.str.methname1324 = private unnamed_addr constant [6 x i8] c"right\00" 
@.str.methnamew1324 = private unnamed_addr constant [8 x i8] c"right:=\00" 
@.str711 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1326 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1326 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str714 = private unnamed_addr constant [1 x i8] c"\00" 
@.str715 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str716 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str717 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1335 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str719 = private unnamed_addr constant [4 x i8] c"Op(\00" 
@.str720 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str721 = private unnamed_addr constant [2 x i8] c")\00" 
@.str722 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str723 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str724 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str725 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str726 = private unnamed_addr constant [5 x i8] c"left\00" 
@.str727 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str728 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str729 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str730 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str731 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str732 = private unnamed_addr constant [6 x i8] c"right\00" 
@.str733 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str734 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str735 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1327 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1315 = private unnamed_addr constant [6 x i8] c"astop\00" 
@.str738 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str.methname1384 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1384 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1386 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1386 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str.methname1388 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str.methnamew1388 = private unnamed_addr constant [8 x i8] c"index:=\00" 
@.str745 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1390 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1390 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str748 = private unnamed_addr constant [1 x i8] c"\00" 
@.str749 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str750 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str751 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1399 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str753 = private unnamed_addr constant [6 x i8] c"Index\00" 
@.str754 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str755 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str756 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str757 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str758 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str759 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str760 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str761 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str762 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str763 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str764 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str765 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1391 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1381 = private unnamed_addr constant [9 x i8] c"astindex\00" 
@.str768 = private unnamed_addr constant [5 x i8] c"bind\00" 
@.str.methname1442 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1442 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1444 = private unnamed_addr constant [5 x i8] c"dest\00" 
@.str.methnamew1444 = private unnamed_addr constant [7 x i8] c"dest:=\00" 
@.str.methname1446 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1446 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str775 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1448 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1448 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str778 = private unnamed_addr constant [1 x i8] c"\00" 
@.str779 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str780 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str781 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1457 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str783 = private unnamed_addr constant [5 x i8] c"Bind\00" 
@.str784 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str785 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str786 = private unnamed_addr constant [5 x i8] c"dest\00" 
@.str787 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str788 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str789 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str790 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str791 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str792 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str793 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str794 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str795 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1449 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1439 = private unnamed_addr constant [8 x i8] c"astbind\00" 
@.str798 = private unnamed_addr constant [7 x i8] c"vardec\00" 
@.str.methname1500 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1500 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str.methname1502 = private unnamed_addr constant [5 x i8] c"name\00" 
@.str.methnamew1502 = private unnamed_addr constant [7 x i8] c"name:=\00" 
@.str.methname1504 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew1504 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str805 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1506 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1506 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str808 = private unnamed_addr constant [1 x i8] c"\00" 
@.str809 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str810 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str811 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1515 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str813 = private unnamed_addr constant [7 x i8] c"VarDec\00" 
@.str814 = private unnamed_addr constant [2 x i8] c"
\00" 
@.str815 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str816 = private unnamed_addr constant [5 x i8] c"name\00" 
@.str817 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str818 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str819 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str820 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str821 = private unnamed_addr constant [6 x i8] c"
    \00" 
@.str822 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str823 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str824 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str825 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str826 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str.methname1507 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname1497 = private unnamed_addr constant [10 x i8] c"astvardec\00" 
@.str829 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str830 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str831 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str.methname1557 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str833 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str834 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str835 = private unnamed_addr constant [7 x i8] c"astnum\00" 
@.str836 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str837 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str.methname1564 = private unnamed_addr constant [8 x i8] c"pushnum\00" 
@.str839 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str840 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str841 = private unnamed_addr constant [10 x i8] c"aststring\00" 
@.str842 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str843 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str.methname1573 = private unnamed_addr constant [11 x i8] c"pushstring\00" 
@.str845 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str846 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str847 = private unnamed_addr constant [14 x i8] c"astidentifier\00" 
@.str848 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str849 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str.methname1582 = private unnamed_addr constant [15 x i8] c"pushidentifier\00" 
@.str851 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str852 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str853 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str854 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str855 = private unnamed_addr constant [3 x i8] c"if\00" 
@.str856 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str857 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str858 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str859 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str860 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str861 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str862 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str863 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str864 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str865 = private unnamed_addr constant [5 x i8] c"then\00" 
@.str866 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str867 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str868 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str869 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str870 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str871 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str872 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str873 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str874 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str875 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str876 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str877 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str878 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str879 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str880 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str881 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str882 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str883 = private unnamed_addr constant [5 x i8] c"else\00" 
@.str884 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str885 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str886 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str887 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str888 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str889 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str890 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str891 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str892 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str893 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str894 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str895 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str896 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str897 = private unnamed_addr constant [6 x i8] c"astif\00" 
@.str898 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1591 = private unnamed_addr constant [5 x i8] c"doif\00" 
@.str900 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str901 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str902 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str903 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str904 = private unnamed_addr constant [4 x i8] c"for\00" 
@.str905 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str906 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str907 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str908 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str909 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str910 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str911 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str912 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str913 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str914 = private unnamed_addr constant [5 x i8] c"each\00" 
@.str915 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str916 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str917 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str918 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str919 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str920 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str921 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str922 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str923 = private unnamed_addr constant [6 x i8] c"arrow\00" 
@.str924 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str925 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str926 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str927 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str928 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str929 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str930 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str931 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str932 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str933 = private unnamed_addr constant [7 x i8] c"astfor\00" 
@.str934 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1671 = private unnamed_addr constant [6 x i8] c"dofor\00" 
@.str936 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str937 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str938 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str939 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str940 = private unnamed_addr constant [6 x i8] c"while\00" 
@.str941 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str942 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str943 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str944 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str945 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str946 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str947 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str948 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str949 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str950 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str951 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str952 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str953 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str954 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str955 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str956 = private unnamed_addr constant [3 x i8] c"do\00" 
@.str957 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str958 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str959 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str960 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str961 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str962 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str963 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str964 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str965 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str966 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str967 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str968 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str969 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str970 = private unnamed_addr constant [9 x i8] c"astwhile\00" 
@.str971 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1731 = private unnamed_addr constant [8 x i8] c"dowhile\00" 
@.str973 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str974 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str975 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str976 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str977 = private unnamed_addr constant [3 x i8] c"if\00" 
@.str978 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str979 = private unnamed_addr constant [5 x i8] c"doif\00" 
@.str980 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str981 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str982 = private unnamed_addr constant [6 x i8] c"while\00" 
@.str983 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str984 = private unnamed_addr constant [8 x i8] c"dowhile\00" 
@.str985 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str986 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str987 = private unnamed_addr constant [4 x i8] c"for\00" 
@.str988 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str989 = private unnamed_addr constant [6 x i8] c"dofor\00" 
@.str990 = private unnamed_addr constant [15 x i8] c"pushidentifier\00" 
@.str.methname1790 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str992 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str993 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str994 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str995 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str996 = private unnamed_addr constant [7 x i8] c"rparen\00" 
@.str997 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str998 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str999 = private unnamed_addr constant [4 x i8] c"num\00" 
@.str1000 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1001 = private unnamed_addr constant [8 x i8] c"pushnum\00" 
@.str1002 = private unnamed_addr constant [7 x i8] c"string\00" 
@.str1003 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1004 = private unnamed_addr constant [11 x i8] c"pushstring\00" 
@.str1005 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str1006 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1007 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str1008 = private unnamed_addr constant [8 x i8] c"keyword\00" 
@.str1009 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1010 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1011 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1012 = private unnamed_addr constant [7 x i8] c"object\00" 
@.str1013 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1014 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str1015 = private unnamed_addr constant [9 x i8] c"doobject\00" 
@.str1016 = private unnamed_addr constant [8 x i8] c"lsquare\00" 
@.str1017 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1018 = private unnamed_addr constant [8 x i8] c"doarray\00" 
@.str1019 = private unnamed_addr constant [8 x i8] c"dotrest\00" 
@.str1020 = private unnamed_addr constant [14 x i8] c"postfixsquare\00" 
@.str1021 = private unnamed_addr constant [9 x i8] c"callrest\00" 
@.str1022 = private unnamed_addr constant [15 x i8] c"expressionrest\00" 
@.str.methname1819 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1024 = private unnamed_addr constant [8 x i8] c"lsquare\00" 
@.str1025 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1026 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1027 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1028 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1029 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1030 = private unnamed_addr constant [8 x i8] c"rsquare\00" 
@.str1031 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1032 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1033 = private unnamed_addr constant [9 x i8] c"astindex\00" 
@.str1034 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1861 = private unnamed_addr constant [14 x i8] c"postfixsquare\00" 
@.str1036 = private unnamed_addr constant [3 x i8] c"op\00" 
@.str1037 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1038 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1039 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1040 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1041 = private unnamed_addr constant [6 x i8] c"astop\00" 
@.str1042 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1043 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1044 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1045 = private unnamed_addr constant [8 x i8] c"right:=\00" 
@.str1046 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1881 = private unnamed_addr constant [15 x i8] c"expressionrest\00" 
@.str1048 = private unnamed_addr constant [4 x i8] c"dot\00" 
@.str1049 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1050 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1051 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1052 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str1053 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1054 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1055 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1056 = private unnamed_addr constant [10 x i8] c"astmember\00" 
@.str1057 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1058 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1059 = private unnamed_addr constant [4 x i8] c"dot\00" 
@.str1060 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1061 = private unnamed_addr constant [8 x i8] c"dotrest\00" 
@.str1062 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str1063 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1064 = private unnamed_addr constant [9 x i8] c"callrest\00" 
@.str.methname1902 = private unnamed_addr constant [8 x i8] c"dotrest\00" 
@.str1066 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str1067 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1068 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1069 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1070 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str.methname1938 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew1938 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str1073 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname1940 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew1940 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str1076 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1077 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1078 = private unnamed_addr constant [6 x i8] c"comma\00" 
@.str1079 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1080 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1081 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1082 = private unnamed_addr constant [7 x i8] c"rparen\00" 
@.str1083 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1084 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1085 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1086 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str1087 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str1088 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1089 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1090 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1091 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str1092 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1093 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1977 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1095 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str1096 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1097 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str.methname1929 = private unnamed_addr constant [9 x i8] c"callrest\00" 
@.str1099 = private unnamed_addr constant [8 x i8] c"keyword\00" 
@.str1100 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1101 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1102 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1103 = private unnamed_addr constant [4 x i8] c"var\00" 
@.str1104 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1105 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str1106 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1107 = private unnamed_addr constant [15 x i8] c"pushidentifier\00" 
@.str1108 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1109 = private unnamed_addr constant [5 x i8] c"bind\00" 
@.str1110 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1111 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1112 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1113 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1114 = private unnamed_addr constant [10 x i8] c"astvardec\00" 
@.str1115 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname1991 = private unnamed_addr constant [7 x i8] c"vardec\00" 
@.str1117 = private unnamed_addr constant [8 x i8] c"lsquare\00" 
@.str1118 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1119 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1120 = private unnamed_addr constant [8 x i8] c"lsquare\00" 
@.str.methname2028 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew2028 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str1123 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname2030 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew2030 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str1126 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1127 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1128 = private unnamed_addr constant [6 x i8] c"comma\00" 
@.str1129 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1130 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1131 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1132 = private unnamed_addr constant [8 x i8] c"rsquare\00" 
@.str1133 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1134 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1135 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1136 = private unnamed_addr constant [8 x i8] c"lsquare\00" 
@.str1137 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str1138 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1139 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1140 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1141 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str1142 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1143 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2067 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1145 = private unnamed_addr constant [9 x i8] c"astarray\00" 
@.str1146 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1147 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1148 = private unnamed_addr constant [37 x i8] c"Syntax error; expected rsquare, got \00" 
@.str1149 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1150 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1151 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1152 = private unnamed_addr constant [6 x i8] c"throw\00" 
@.str.methname2021 = private unnamed_addr constant [8 x i8] c"doarray\00" 
@.str1154 = private unnamed_addr constant [8 x i8] c"keyword\00" 
@.str1155 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1156 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1157 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1158 = private unnamed_addr constant [7 x i8] c"object\00" 
@.str1159 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1160 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str1161 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1162 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str1163 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1164 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str.methname2105 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew2105 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str1167 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname2107 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew2107 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str1170 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1171 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1172 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str1173 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1174 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str1175 = private unnamed_addr constant [7 x i8] c"vardec\00" 
@.str1176 = private unnamed_addr constant [10 x i8] c"methoddec\00" 
@.str1177 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1178 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1179 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1180 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str1181 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str1182 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1183 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1184 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1185 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str1186 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1187 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2143 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1189 = private unnamed_addr constant [10 x i8] c"astobject\00" 
@.str1190 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2087 = private unnamed_addr constant [9 x i8] c"doobject\00" 
@.str1192 = private unnamed_addr constant [8 x i8] c"keyword\00" 
@.str1193 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1194 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1195 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1196 = private unnamed_addr constant [7 x i8] c"method\00" 
@.str1197 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1198 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str1199 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1200 = private unnamed_addr constant [15 x i8] c"pushidentifier\00" 
@.str1201 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1202 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str1203 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1204 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1205 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str.methname2178 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew2178 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str1208 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname2180 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew2180 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str1211 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1212 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str1213 = private unnamed_addr constant [6 x i8] c"comma\00" 
@.str1214 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1215 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1216 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str1217 = private unnamed_addr constant [7 x i8] c"rparen\00" 
@.str1218 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1219 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1220 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1221 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1222 = private unnamed_addr constant [7 x i8] c"lparen\00" 
@.str1223 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str1224 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1225 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1226 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1227 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str1228 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1229 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2218 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1231 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str1232 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1233 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1234 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str.methname2232 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew2232 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str1237 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname2234 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew2234 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str1240 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1241 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str1242 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1243 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1244 = private unnamed_addr constant [7 x i8] c"lbrace\00" 
@.str1245 = private unnamed_addr constant [3 x i8] c"/=\00" 
@.str1246 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1247 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str1248 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1249 = private unnamed_addr constant [7 x i8] c"rbrace\00" 
@.str1250 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1251 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1252 = private unnamed_addr constant [35 x i8] c"Error: No statement but not end of\00" 
@.str1253 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1254 = private unnamed_addr constant [11 x i8] c"Have token\00" 
@.str1255 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1256 = private unnamed_addr constant [41 x i8] c"Error: no body in method declaration for\00" 
@.str1257 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1258 = private unnamed_addr constant [10 x i8] c"astmethod\00" 
@.str1259 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2155 = private unnamed_addr constant [10 x i8] c"methoddec\00" 
@.str1261 = private unnamed_addr constant [8 x i8] c"keyword\00" 
@.str1262 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1263 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1264 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1265 = private unnamed_addr constant [4 x i8] c"var\00" 
@.str1266 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1267 = private unnamed_addr constant [7 x i8] c"vardec\00" 
@.str1268 = private unnamed_addr constant [4 x i8] c"sym\00" 
@.str1269 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1270 = private unnamed_addr constant [7 x i8] c"method\00" 
@.str1271 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1272 = private unnamed_addr constant [10 x i8] c"methoddec\00" 
@.str1273 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1274 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1275 = private unnamed_addr constant [5 x i8] c"bind\00" 
@.str1276 = private unnamed_addr constant [7 x i8] c"accept\00" 
@.str1277 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1278 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1279 = private unnamed_addr constant [11 x i8] c"expression\00" 
@.str1280 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1281 = private unnamed_addr constant [8 x i8] c"astbind\00" 
@.str1282 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2275 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str1284 = private unnamed_addr constant [20 x i8] c"Reversing tokens...\00" 
@.str1285 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1286 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str1287 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1288 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2326 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1290 = private unnamed_addr constant [8 x i8] c"Parsing\00" 
@.str1291 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1292 = private unnamed_addr constant [10 x i8] c"tokens...\00" 
@.str1293 = private unnamed_addr constant [5 x i8] c"next\00" 
@.str1294 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1295 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1296 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1297 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str1298 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1299 = private unnamed_addr constant [2 x i8] c">\00" 
@.str1300 = private unnamed_addr constant [10 x i8] c"statement\00" 
@.str1301 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1302 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1303 = private unnamed_addr constant [25 x i8] c"Syntax error around line\00" 
@.str1304 = private unnamed_addr constant [16 x i8] c"with remaining:\00" 
@.str1305 = private unnamed_addr constant [12 x i8] c"Around line\00" 
@.str1306 = private unnamed_addr constant [14 x i8] c"Syntax error.\00" 
@.str1307 = private unnamed_addr constant [6 x i8] c"throw\00" 
@.str1308 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1309 = private unnamed_addr constant [1 x i8] c"\00" 
@.str1310 = private unnamed_addr constant [1 x i8] c"\00" 
@.str1311 = private unnamed_addr constant [7 x i8] c"Nodes:\00" 
@.str1312 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str.methname2389 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1314 = private unnamed_addr constant [34 x i8] c";-------------LLVM IR------------\00" 
@.str1315 = private unnamed_addr constant [6 x i8] c"entry\00" 
@.str1316 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname2403 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1318 = private unnamed_addr constant [2 x i8] c"%\00" 
@.str1319 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1320 = private unnamed_addr constant [2 x i8] c":\00" 
@.str1321 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1322 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname2407 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1324 = private unnamed_addr constant [9 x i8] c"  %array\00" 
@.str1325 = private unnamed_addr constant [32 x i8] c" = call %object* @alloc_Array()\00" 
@.str1326 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1327 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1328 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1329 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1330 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1331 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str1332 = private unnamed_addr constant [22 x i8] c", %object** %params_0\00" 
@.str1333 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1334 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1335 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1336 = private unnamed_addr constant [44 x i8] c"  call %object* @callmethod(%object* %array\00" 
@.str1337 = private unnamed_addr constant [42 x i8] c", i8* getelementptr([5 x i8]* @.str._push\00" 
@.str1338 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str1339 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1340 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1341 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1342 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname2436 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1344 = private unnamed_addr constant [7 x i8] c"%array\00" 
@.str1345 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1346 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname2417 = private unnamed_addr constant [13 x i8] c"compilearray\00" 
@.str1348 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str1349 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1350 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname2465 = private unnamed_addr constant [14 x i8] c"compilemember\00" 
@.str1352 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str1353 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1354 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1355 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1356 = private unnamed_addr constant [5 x i8] c"name\00" 
@.str1357 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1358 = private unnamed_addr constant [15 x i8] c"@.str.methname\00" 
@.str1359 = private unnamed_addr constant [25 x i8] c" = private unnamed_addr \00" 
@.str1360 = private unnamed_addr constant [11 x i8] c"constant [\00" 
@.str1361 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str1362 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str1363 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1364 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1365 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1366 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1367 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1368 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1369 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1370 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1371 = private unnamed_addr constant [18 x i8] c"; OBJECT VAR DEC \00" 
@.str1372 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1373 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1374 = private unnamed_addr constant [32 x i8] c"  call void @adddatum(%object* \00" 
@.str1375 = private unnamed_addr constant [12 x i8] c", %object* \00" 
@.str1376 = private unnamed_addr constant [7 x i8] c", i32 \00" 
@.str1377 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1378 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1379 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1380 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1381 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1382 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1383 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1384 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1385 = private unnamed_addr constant [25 x i8] c"define %object* @reader_\00" 
@.str1386 = private unnamed_addr constant [2 x i8] c"_\00" 
@.str1387 = private unnamed_addr constant [32 x i8] c"(%object* %self, i32 %nparams, \00" 
@.str1388 = private unnamed_addr constant [19 x i8] c"%object** %args) {\00" 
@.str1389 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1390 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1391 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1392 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1393 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1394 = private unnamed_addr constant [51 x i8] c"  %dt = getelementptr %object* %self, i32 0, i32 2\00" 
@.str1395 = private unnamed_addr constant [30 x i8] c"  %tmp1 = load %object*** %dt\00" 
@.str1396 = private unnamed_addr constant [50 x i8] c"  %arrayidx = getelementptr %object** %tmp1, i32 \00" 
@.str1397 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1398 = private unnamed_addr constant [35 x i8] c"  %tmp2 = load %object** %arrayidx\00" 
@.str1399 = private unnamed_addr constant [21 x i8] c"  ret %object* %tmp2\00" 
@.str1400 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str1401 = private unnamed_addr constant [33 x i8] c"  call void @addmethod(%object* \00" 
@.str1402 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str1403 = private unnamed_addr constant [23 x i8] c" x i8]* @.str.methname\00" 
@.str1404 = private unnamed_addr constant [18 x i8] c", i32 0, i32 0), \00" 
@.str1405 = private unnamed_addr constant [60 x i8] c"%object*(%object*, i32, %object**)* getelementptr(%object* \00" 
@.str1406 = private unnamed_addr constant [37 x i8] c"(%object*, i32, %object**)* @reader_\00" 
@.str1407 = private unnamed_addr constant [2 x i8] c"_\00" 
@.str1408 = private unnamed_addr constant [3 x i8] c"))\00" 
@.str1409 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1410 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1411 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1412 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1413 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1414 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1415 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1416 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1417 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1418 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1419 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1420 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1421 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1422 = private unnamed_addr constant [3 x i8] c":=\00" 
@.str1423 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1424 = private unnamed_addr constant [16 x i8] c"@.str.methnamew\00" 
@.str1425 = private unnamed_addr constant [25 x i8] c" = private unnamed_addr \00" 
@.str1426 = private unnamed_addr constant [11 x i8] c"constant [\00" 
@.str1427 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str1428 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str1429 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1430 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1431 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1432 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1433 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1434 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1435 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1436 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1437 = private unnamed_addr constant [25 x i8] c"define %object* @writer_\00" 
@.str1438 = private unnamed_addr constant [2 x i8] c"_\00" 
@.str1439 = private unnamed_addr constant [32 x i8] c"(%object* %self, i32 %nparams, \00" 
@.str1440 = private unnamed_addr constant [19 x i8] c"%object** %args) {\00" 
@.str1441 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1442 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1443 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1444 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1445 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1446 = private unnamed_addr constant [49 x i8] c"  %params = getelementptr %object** %args, i32 0\00" 
@.str1447 = private unnamed_addr constant [33 x i8] c"  %par0 = load %object** %params\00" 
@.str1448 = private unnamed_addr constant [51 x i8] c"  %dt = getelementptr %object* %self, i32 0, i32 2\00" 
@.str1449 = private unnamed_addr constant [30 x i8] c"  %tmp1 = load %object*** %dt\00" 
@.str1450 = private unnamed_addr constant [50 x i8] c"  %arrayidx = getelementptr %object** %tmp1, i32 \00" 
@.str1451 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1452 = private unnamed_addr constant [44 x i8] c"  store %object* %par0, %object** %arrayidx\00" 
@.str1453 = private unnamed_addr constant [21 x i8] c"  ret %object* %par0\00" 
@.str1454 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str1455 = private unnamed_addr constant [33 x i8] c"  call void @addmethod(%object* \00" 
@.str1456 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str1457 = private unnamed_addr constant [24 x i8] c" x i8]* @.str.methnamew\00" 
@.str1458 = private unnamed_addr constant [18 x i8] c", i32 0, i32 0), \00" 
@.str1459 = private unnamed_addr constant [60 x i8] c"%object*(%object*, i32, %object**)* getelementptr(%object* \00" 
@.str1460 = private unnamed_addr constant [37 x i8] c"(%object*, i32, %object**)* @writer_\00" 
@.str1461 = private unnamed_addr constant [2 x i8] c"_\00" 
@.str1462 = private unnamed_addr constant [3 x i8] c"))\00" 
@.str1463 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1464 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1465 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1466 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1467 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1468 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1469 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1470 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1471 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1472 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1473 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1474 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1475 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname2475 = private unnamed_addr constant [17 x i8] c"compileobjvardec\00" 
@.str1477 = private unnamed_addr constant [5 x i8] c"%obj\00" 
@.str1478 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1479 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1480 = private unnamed_addr constant [30 x i8] c" = call %object* @alloc_obj()\00" 
@.str1481 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1482 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1483 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1484 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1485 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1486 = private unnamed_addr constant [7 x i8] c"method\00" 
@.str1487 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1488 = private unnamed_addr constant [14 x i8] c"compilemethod\00" 
@.str1489 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str1490 = private unnamed_addr constant [7 x i8] c"vardec\00" 
@.str1491 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1492 = private unnamed_addr constant [17 x i8] c"compileobjvardec\00" 
@.str.methname2747 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1494 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname2724 = private unnamed_addr constant [14 x i8] c"compileobject\00" 
@.str1496 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1497 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1498 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1499 = private unnamed_addr constant [14 x i8] c"astidentifier\00" 
@.str1500 = private unnamed_addr constant [9 x i8] c"variable\00" 
@.str1501 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str1502 = private unnamed_addr constant [10 x i8] c"astmethod\00" 
@.str1503 = private unnamed_addr constant [14 x i8] c"selfclosure:=\00" 
@.str1504 = private unnamed_addr constant [10 x i8] c"astobject\00" 
@.str1505 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1506 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str1507 = private unnamed_addr constant [22 x i8] c", %object** %params_0\00" 
@.str1508 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1509 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1510 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1511 = private unnamed_addr constant [8 x i8] c"  %iter\00" 
@.str1512 = private unnamed_addr constant [39 x i8] c" = call %object* @callmethod(%object* \00" 
@.str1513 = private unnamed_addr constant [42 x i8] c", i8* getelementptr([5 x i8]* @.str._iter\00" 
@.str1514 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str1515 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1516 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1517 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1518 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1519 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1520 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1521 = private unnamed_addr constant [21 x i8] c"  br label %BeginFor\00" 
@.str1522 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1523 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1524 = private unnamed_addr constant [9 x i8] c"BeginFor\00" 
@.str1525 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1526 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1527 = private unnamed_addr constant [11 x i8] c"  %condobj\00" 
@.str1528 = private unnamed_addr constant [44 x i8] c" = call %object* @callmethod(%object* %iter\00" 
@.str1529 = private unnamed_addr constant [46 x i8] c", i8* getelementptr([9 x i8]* @.str._havemore\00" 
@.str1530 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str1531 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1532 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1533 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1534 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1535 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1536 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1537 = private unnamed_addr constant [6 x i8] c"%cond\00" 
@.str1538 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1539 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1540 = private unnamed_addr constant [42 x i8] c"_valp = call i1 @istrue(%object* %condobj\00" 
@.str1541 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1542 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1543 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1544 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1545 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1546 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1547 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1548 = private unnamed_addr constant [18 x i8] c" = icmp eq i1 0, \00" 
@.str1549 = private unnamed_addr constant [6 x i8] c"_valp\00" 
@.str1550 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1551 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1552 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1553 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1554 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1555 = private unnamed_addr constant [7 x i8] c"br i1 \00" 
@.str1556 = private unnamed_addr constant [16 x i8] c", label %EndFor\00" 
@.str1557 = private unnamed_addr constant [17 x i8] c", label %ForBody\00" 
@.str1558 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1559 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1560 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1561 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1562 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1563 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1564 = private unnamed_addr constant [8 x i8] c"ForBody\00" 
@.str1565 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1566 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1567 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str1568 = private unnamed_addr constant [6 x i8] c"ERROR\00" 
@.str1569 = private unnamed_addr constant [9 x i8] c" %forval\00" 
@.str1570 = private unnamed_addr constant [44 x i8] c" = call %object* @callmethod(%object* %iter\00" 
@.str1571 = private unnamed_addr constant [42 x i8] c", i8* getelementptr([5 x i8]* @.str._next\00" 
@.str1572 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 0, %object** %params)\00" 
@.str1573 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1574 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1575 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1576 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1577 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1578 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1579 = private unnamed_addr constant [25 x i8] c"  store %object* %forval\00" 
@.str1580 = private unnamed_addr constant [22 x i8] c", %object** %params_0\00" 
@.str1581 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1582 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1583 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1584 = private unnamed_addr constant [38 x i8] c"  call %object* @callmethod(%object* \00" 
@.str1585 = private unnamed_addr constant [43 x i8] c", i8* getelementptr([6 x i8]* @.str._apply\00" 
@.str1586 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str1587 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1588 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1589 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1590 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1591 = private unnamed_addr constant [21 x i8] c"  br label %BeginFor\00" 
@.str1592 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1593 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1594 = private unnamed_addr constant [7 x i8] c"EndFor\00" 
@.str1595 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1596 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1597 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname2775 = private unnamed_addr constant [11 x i8] c"compilefor\00" 
@.str1599 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1600 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1601 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1602 = private unnamed_addr constant [6 x i8] c"entry\00" 
@.str1603 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1604 = private unnamed_addr constant [4 x i8] c"pop\00" 
@.str1605 = private unnamed_addr constant [51 x i8] c"  %ptrsize_p = getelementptr %object** null, i32 1\00" 
@.str1606 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1607 = private unnamed_addr constant [50 x i8] c"  %ptrsize = ptrtoint %object** %ptrsize_p to i32\00" 
@.str1608 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1609 = private unnamed_addr constant [37 x i8] c"  %paramssize = mul i32 %ptrsize, 16\00" 
@.str1610 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1611 = private unnamed_addr constant [47 x i8] c"  %paramsu = call i8* @malloc(i32 %paramssize)\00" 
@.str1612 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1613 = private unnamed_addr constant [46 x i8] c"  %params = bitcast i8* %paramsu to %object**\00" 
@.str1614 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1615 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str1616 = private unnamed_addr constant [11 x i8] c"  %params_\00" 
@.str1617 = private unnamed_addr constant [41 x i8] c" = getelementptr %object** %params, i32 \00" 
@.str1618 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1619 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1620 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1621 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname2998 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1623 = private unnamed_addr constant [7 x i8] c"params\00" 
@.str1624 = private unnamed_addr constant [8 x i8] c"  %var_\00" 
@.str1625 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1626 = private unnamed_addr constant [35 x i8] c" = getelementptr %object** %args, \00" 
@.str1627 = private unnamed_addr constant [5 x i8] c"i32 \00" 
@.str1628 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1629 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1630 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1631 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1632 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1633 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1634 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname3016 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1636 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str1637 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str1638 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str.methname3047 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1640 = private unnamed_addr constant [16 x i8] c"  ret %object* \00" 
@.str1641 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1642 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1643 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str1644 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1645 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str.methname3069 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1647 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str.methname3084 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1649 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname3064 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1651 = private unnamed_addr constant [12 x i8] c"selfclosure\00" 
@.str1652 = private unnamed_addr constant [5 x i8] c"self\00" 
@.str1653 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1654 = private unnamed_addr constant [25 x i8] c";;;; METHOD DEFINITION: \00" 
@.str1655 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1656 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1657 = private unnamed_addr constant [2 x i8] c">\00" 
@.str1658 = private unnamed_addr constant [24 x i8] c"; have closure method: \00" 
@.str1659 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1660 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1661 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1662 = private unnamed_addr constant [12 x i8] c"selfclosure\00" 
@.str1663 = private unnamed_addr constant [23 x i8] c"define %object* @meth_\00" 
@.str1664 = private unnamed_addr constant [36 x i8] c"(%object* %realself, i32 %nparams, \00" 
@.str1665 = private unnamed_addr constant [40 x i8] c"%object** %args, %object*** %closure) {\00" 
@.str1666 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1667 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1668 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1669 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1670 = private unnamed_addr constant [23 x i8] c"define %object* @meth_\00" 
@.str1671 = private unnamed_addr constant [32 x i8] c"(%object* %self, i32 %nparams, \00" 
@.str1672 = private unnamed_addr constant [40 x i8] c"%object** %args, %object*** %closure) {\00" 
@.str1673 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1674 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1675 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1676 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1677 = private unnamed_addr constant [23 x i8] c"define %object* @meth_\00" 
@.str1678 = private unnamed_addr constant [32 x i8] c"(%object* %self, i32 %nparams, \00" 
@.str1679 = private unnamed_addr constant [19 x i8] c"%object** %args) {\00" 
@.str1680 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1681 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1682 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1683 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1684 = private unnamed_addr constant [6 x i8] c"entry\00" 
@.str1685 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1686 = private unnamed_addr constant [5 x i8] c"self\00" 
@.str1687 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1688 = private unnamed_addr constant [9 x i8] c"  %varc_\00" 
@.str1689 = private unnamed_addr constant [43 x i8] c" = getelementptr %object*** %closure, i32 \00" 
@.str1690 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1691 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1692 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1693 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1694 = private unnamed_addr constant [34 x i8] c"  %self2 = load %object*** %varc_\00" 
@.str1695 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1696 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1697 = private unnamed_addr constant [32 x i8] c"  %self = load %object** %self2\00" 
@.str1698 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1699 = private unnamed_addr constant [9 x i8] c"  %varc_\00" 
@.str1700 = private unnamed_addr constant [43 x i8] c" = getelementptr %object*** %closure, i32 \00" 
@.str1701 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1702 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1703 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1704 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1705 = private unnamed_addr constant [8 x i8] c"  %var_\00" 
@.str1706 = private unnamed_addr constant [26 x i8] c" = load %object*** %varc_\00" 
@.str1707 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1708 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1709 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1710 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname3164 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1712 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname3218 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1714 = private unnamed_addr constant [10 x i8] c";;;; ENDS\00" 
@.str1715 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname3227 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1717 = private unnamed_addr constant [15 x i8] c"@.str.methname\00" 
@.str1718 = private unnamed_addr constant [25 x i8] c" = private unnamed_addr \00" 
@.str1719 = private unnamed_addr constant [11 x i8] c"constant [\00" 
@.str1720 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str1721 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str1722 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1723 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1724 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1725 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1726 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1727 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1728 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1729 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1730 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1731 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1732 = private unnamed_addr constant [33 x i8] c"  call void @addmethod(%object* \00" 
@.str1733 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str1734 = private unnamed_addr constant [23 x i8] c" x i8]* @.str.methname\00" 
@.str1735 = private unnamed_addr constant [18 x i8] c", i32 0, i32 0), \00" 
@.str1736 = private unnamed_addr constant [60 x i8] c"%object*(%object*, i32, %object**)* getelementptr(%object* \00" 
@.str1737 = private unnamed_addr constant [35 x i8] c"(%object*, i32, %object**)* @meth_\00" 
@.str1738 = private unnamed_addr constant [3 x i8] c"))\00" 
@.str1739 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1740 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1741 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1742 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1743 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1744 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1745 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1746 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1747 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1748 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1749 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1750 = private unnamed_addr constant [11 x i8] c"  %closure\00" 
@.str1751 = private unnamed_addr constant [39 x i8] c" = call %object*** @createclosure(i32 \00" 
@.str1752 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1753 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1754 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1755 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1756 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1757 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1758 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1759 = private unnamed_addr constant [5 x i8] c"self\00" 
@.str1760 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1761 = private unnamed_addr constant [10 x i8] c"  %selfpp\00" 
@.str1762 = private unnamed_addr constant [4 x i8] c" = \00" 
@.str1763 = private unnamed_addr constant [28 x i8] c"call %object** @alloc_var()\00" 
@.str1764 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1765 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1766 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1767 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1768 = private unnamed_addr constant [42 x i8] c"  store %object* %self, %object** %selfpp\00" 
@.str1769 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1770 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1771 = private unnamed_addr constant [46 x i8] c"  call void @addtoclosure(%object*** %closure\00" 
@.str1772 = private unnamed_addr constant [3 x i8] c", \00" 
@.str1773 = private unnamed_addr constant [18 x i8] c"%object** %selfpp\00" 
@.str1774 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1775 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1776 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1777 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1778 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1779 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1780 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1781 = private unnamed_addr constant [46 x i8] c"  call void @addtoclosure(%object*** %closure\00" 
@.str1782 = private unnamed_addr constant [3 x i8] c", \00" 
@.str1783 = private unnamed_addr constant [16 x i8] c"%object** %var_\00" 
@.str1784 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1785 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1786 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1787 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1788 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1789 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1790 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname3321 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1792 = private unnamed_addr constant [40 x i8] c"  call void @addclosuremethod(%object* \00" 
@.str1793 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str1794 = private unnamed_addr constant [23 x i8] c" x i8]* @.str.methname\00" 
@.str1795 = private unnamed_addr constant [18 x i8] c", i32 0, i32 0), \00" 
@.str1796 = private unnamed_addr constant [72 x i8] c"%object*(%object*, i32, %object**, %object***)* getelementptr(%object* \00" 
@.str1797 = private unnamed_addr constant [47 x i8] c"(%object*, i32, %object**, %object***)* @meth_\00" 
@.str1798 = private unnamed_addr constant [23 x i8] c"), %object*** %closure\00" 
@.str1799 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1800 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1801 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1802 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1803 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1804 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1805 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1806 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1807 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1808 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1809 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1810 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1811 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1812 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname2958 = private unnamed_addr constant [14 x i8] c"compilemethod\00" 
@.str1814 = private unnamed_addr constant [23 x i8] c"  br label %BeginWhile\00" 
@.str1815 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1816 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1817 = private unnamed_addr constant [11 x i8] c"BeginWhile\00" 
@.str1818 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1819 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1820 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1821 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1822 = private unnamed_addr constant [6 x i8] c"%cond\00" 
@.str1823 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1824 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1825 = private unnamed_addr constant [34 x i8] c"_valp = call i1 @istrue(%object* \00" 
@.str1826 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1827 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1828 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1829 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1830 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1831 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1832 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1833 = private unnamed_addr constant [18 x i8] c" = icmp eq i1 0, \00" 
@.str1834 = private unnamed_addr constant [6 x i8] c"_valp\00" 
@.str1835 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1836 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1837 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1838 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1839 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1840 = private unnamed_addr constant [7 x i8] c"br i1 \00" 
@.str1841 = private unnamed_addr constant [18 x i8] c", label %EndWhile\00" 
@.str1842 = private unnamed_addr constant [19 x i8] c", label %WhileBody\00" 
@.str1843 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1844 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1845 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1846 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1847 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1848 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1849 = private unnamed_addr constant [10 x i8] c"WhileBody\00" 
@.str1850 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1851 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1852 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str1853 = private unnamed_addr constant [6 x i8] c"ERROR\00" 
@.str1854 = private unnamed_addr constant [5 x i8] c"body\00" 
@.str1855 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str.methname3499 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1857 = private unnamed_addr constant [23 x i8] c"  br label %BeginWhile\00" 
@.str1858 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1859 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1860 = private unnamed_addr constant [9 x i8] c"EndWhile\00" 
@.str1861 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1862 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1863 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname3420 = private unnamed_addr constant [13 x i8] c"compilewhile\00" 
@.str1865 = private unnamed_addr constant [20 x i8] c"  br label %BeginIf\00" 
@.str1866 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1867 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1868 = private unnamed_addr constant [8 x i8] c"BeginIf\00" 
@.str1869 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1870 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1871 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1872 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str1873 = private unnamed_addr constant [6 x i8] c"%cond\00" 
@.str1874 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1875 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1876 = private unnamed_addr constant [34 x i8] c"_valp = call i1 @istrue(%object* \00" 
@.str1877 = private unnamed_addr constant [2 x i8] c")\00" 
@.str1878 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1879 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1880 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1881 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1882 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1883 = private unnamed_addr constant [3 x i8] c"  \00" 
@.str1884 = private unnamed_addr constant [18 x i8] c" = icmp eq i1 0, \00" 
@.str1885 = private unnamed_addr constant [6 x i8] c"_valp\00" 
@.str1886 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1887 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1888 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1889 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1890 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1891 = private unnamed_addr constant [10 x i8] c"elseblock\00" 
@.str1892 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1893 = private unnamed_addr constant [2 x i8] c">\00" 
@.str1894 = private unnamed_addr constant [7 x i8] c"br i1 \00" 
@.str1895 = private unnamed_addr constant [21 x i8] c", label %FalseBranch\00" 
@.str1896 = private unnamed_addr constant [20 x i8] c", label %TrueBranch\00" 
@.str1897 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1898 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1899 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1900 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1901 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1902 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1903 = private unnamed_addr constant [7 x i8] c"br i1 \00" 
@.str1904 = private unnamed_addr constant [15 x i8] c", label %EndIf\00" 
@.str1905 = private unnamed_addr constant [20 x i8] c", label %TrueBranch\00" 
@.str1906 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1907 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1908 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1909 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1910 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1911 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1912 = private unnamed_addr constant [11 x i8] c"TrueBranch\00" 
@.str1913 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1914 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1915 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str1916 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str1917 = private unnamed_addr constant [6 x i8] c"ERROR\00" 
@.str1918 = private unnamed_addr constant [6 x i8] c"ERROR\00" 
@.str1919 = private unnamed_addr constant [10 x i8] c"thenblock\00" 
@.str1920 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str.methname3622 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1922 = private unnamed_addr constant [18 x i8] c"  br label %EndIf\00" 
@.str1923 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1924 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1925 = private unnamed_addr constant [10 x i8] c"elseblock\00" 
@.str1926 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1927 = private unnamed_addr constant [2 x i8] c">\00" 
@.str1928 = private unnamed_addr constant [12 x i8] c"FalseBranch\00" 
@.str1929 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1930 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1931 = private unnamed_addr constant [10 x i8] c"elseblock\00" 
@.str1932 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str.methname3648 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str1934 = private unnamed_addr constant [18 x i8] c"  br label %EndIf\00" 
@.str1935 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1936 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1937 = private unnamed_addr constant [6 x i8] c"EndIf\00" 
@.str1938 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1939 = private unnamed_addr constant [11 x i8] c"beginblock\00" 
@.str1940 = private unnamed_addr constant [10 x i8] c"elseblock\00" 
@.str1941 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str1942 = private unnamed_addr constant [2 x i8] c">\00" 
@.str1943 = private unnamed_addr constant [6 x i8] c"  %if\00" 
@.str1944 = private unnamed_addr constant [19 x i8] c" = phi %object* [ \00" 
@.str1945 = private unnamed_addr constant [3 x i8] c", \00" 
@.str1946 = private unnamed_addr constant [5 x i8] c"], [\00" 
@.str1947 = private unnamed_addr constant [3 x i8] c", \00" 
@.str1948 = private unnamed_addr constant [2 x i8] c"]\00" 
@.str1949 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1950 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1951 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1952 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1953 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1954 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1955 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1956 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1957 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1958 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1959 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1960 = private unnamed_addr constant [6 x i8] c"  %if\00" 
@.str1961 = private unnamed_addr constant [19 x i8] c" = phi %object* [ \00" 
@.str1962 = private unnamed_addr constant [3 x i8] c", \00" 
@.str1963 = private unnamed_addr constant [5 x i8] c"], [\00" 
@.str1964 = private unnamed_addr constant [11 x i8] c", %BeginIf\00" 
@.str1965 = private unnamed_addr constant [2 x i8] c"]\00" 
@.str1966 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1967 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1968 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1969 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1970 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1971 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1972 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1973 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1974 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1975 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1976 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1977 = private unnamed_addr constant [4 x i8] c"%if\00" 
@.str1978 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1979 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname3517 = private unnamed_addr constant [10 x i8] c"compileif\00" 
@.str1981 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str1982 = private unnamed_addr constant [5 x i8] c"self\00" 
@.str1983 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str1984 = private unnamed_addr constant [6 x i8] c"%self\00" 
@.str1985 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str1986 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str1987 = private unnamed_addr constant [12 x i8] c"  %var_val_\00" 
@.str1988 = private unnamed_addr constant [19 x i8] c" = load %object** \00" 
@.str1989 = private unnamed_addr constant [6 x i8] c"%var_\00" 
@.str1990 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1991 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1992 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1993 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1994 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1995 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str1996 = private unnamed_addr constant [10 x i8] c"%var_val_\00" 
@.str1997 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1998 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str1999 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname3740 = private unnamed_addr constant [18 x i8] c"compileidentifier\00" 
@.str2001 = private unnamed_addr constant [5 x i8] c"dest\00" 
@.str2002 = private unnamed_addr constant [1 x i8] c"\00" 
@.str2003 = private unnamed_addr constant [1 x i8] c"\00" 
@.str2004 = private unnamed_addr constant [1 x i8] c"\00" 
@.str2005 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2006 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str2007 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2008 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2009 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2010 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2011 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str2012 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str2013 = private unnamed_addr constant [18 x i8] c", %object** %var_\00" 
@.str2014 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2015 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2016 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2017 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2018 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2019 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2020 = private unnamed_addr constant [7 x i8] c"member\00" 
@.str2021 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2022 = private unnamed_addr constant [53 x i8] c"; WARNING: non-local assigns not yet fully supported\00" 
@.str2023 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2024 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2025 = private unnamed_addr constant [3 x i8] c":=\00" 
@.str2026 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2027 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str2028 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2029 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str2030 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2031 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2032 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2033 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str2034 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2035 = private unnamed_addr constant [5 x i8] c"[]:=\00" 
@.str2036 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2037 = private unnamed_addr constant [10 x i8] c"astmember\00" 
@.str2038 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str2039 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2040 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str2041 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2042 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname3784 = private unnamed_addr constant [12 x i8] c"compilebind\00" 
@.str2044 = private unnamed_addr constant [5 x i8] c"name\00" 
@.str2045 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2046 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str2047 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2048 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2049 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str.methname3881 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str.methnamew3881 = private unnamed_addr constant [7 x i8] c"type:=\00" 
@.str2052 = private unnamed_addr constant [6 x i8] c"false\00" 
@.str.methname3883 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str.methnamew3883 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str2055 = private unnamed_addr constant [1 x i8] c"\00" 
@.str.methname3885 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methnamew3885 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2058 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2059 = private unnamed_addr constant [8 x i8] c"  %var_\00" 
@.str2060 = private unnamed_addr constant [31 x i8] c" = call %object** @alloc_var()\00" 
@.str2061 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2062 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2063 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2064 = private unnamed_addr constant [8 x i8] c"  %var_\00" 
@.str2065 = private unnamed_addr constant [31 x i8] c"_dec = getelementptr %object* \00" 
@.str2066 = private unnamed_addr constant [8 x i8] c", i32 0\00" 
@.str2067 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2068 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2069 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2070 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2071 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2072 = private unnamed_addr constant [23 x i8] c"  store %object* %var_\00" 
@.str2073 = private unnamed_addr constant [22 x i8] c"_dec, %object** %var_\00" 
@.str2074 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2075 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2076 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2077 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname3866 = private unnamed_addr constant [14 x i8] c"compilevardec\00" 
@.str2079 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2080 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2081 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str2082 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2083 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str2084 = private unnamed_addr constant [22 x i8] c", %object** %params_0\00" 
@.str2085 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2086 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2087 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2088 = private unnamed_addr constant [10 x i8] c"  %idxres\00" 
@.str2089 = private unnamed_addr constant [39 x i8] c" = call %object* @callmethod(%object* \00" 
@.str2090 = private unnamed_addr constant [43 x i8] c", i8* getelementptr([3 x i8]* @.str._index\00" 
@.str2091 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str2092 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2093 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2094 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2095 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2096 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2097 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2098 = private unnamed_addr constant [8 x i8] c"%idxres\00" 
@.str2099 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2100 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname3920 = private unnamed_addr constant [13 x i8] c"compileindex\00" 
@.str2102 = private unnamed_addr constant [5 x i8] c"left\00" 
@.str2103 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2104 = private unnamed_addr constant [6 x i8] c"right\00" 
@.str2105 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2106 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2107 = private unnamed_addr constant [2 x i8] c"+\00" 
@.str2108 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2109 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2110 = private unnamed_addr constant [2 x i8] c"*\00" 
@.str2111 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2112 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2113 = private unnamed_addr constant [2 x i8] c"/\00" 
@.str2114 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2115 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2116 = private unnamed_addr constant [2 x i8] c"-\00" 
@.str2117 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2118 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2119 = private unnamed_addr constant [2 x i8] c"%\00" 
@.str2120 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2121 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str2122 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str2123 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str2124 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str2125 = private unnamed_addr constant [4 x i8] c"sum\00" 
@.str2126 = private unnamed_addr constant [5 x i8] c"plus\00" 
@.str2127 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2128 = private unnamed_addr constant [2 x i8] c"*\00" 
@.str2129 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2130 = private unnamed_addr constant [5 x i8] c"prod\00" 
@.str2131 = private unnamed_addr constant [9 x i8] c"asterisk\00" 
@.str2132 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2133 = private unnamed_addr constant [2 x i8] c"/\00" 
@.str2134 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2135 = private unnamed_addr constant [9 x i8] c"quotient\00" 
@.str2136 = private unnamed_addr constant [6 x i8] c"slash\00" 
@.str2137 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2138 = private unnamed_addr constant [2 x i8] c"-\00" 
@.str2139 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2140 = private unnamed_addr constant [5 x i8] c"diff\00" 
@.str2141 = private unnamed_addr constant [6 x i8] c"minus\00" 
@.str2142 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2143 = private unnamed_addr constant [2 x i8] c"%\00" 
@.str2144 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2145 = private unnamed_addr constant [8 x i8] c"modulus\00" 
@.str2146 = private unnamed_addr constant [8 x i8] c"percent\00" 
@.str2147 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str2148 = private unnamed_addr constant [22 x i8] c", %object** %params_0\00" 
@.str2149 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2150 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2151 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2152 = private unnamed_addr constant [4 x i8] c"  %\00" 
@.str2153 = private unnamed_addr constant [39 x i8] c" = call %object* @callmethod(%object* \00" 
@.str2154 = private unnamed_addr constant [38 x i8] c", i8* getelementptr([2 x i8]* @.str._\00" 
@.str2155 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str2156 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2157 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2158 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2159 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2160 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2161 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2162 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2163 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2164 = private unnamed_addr constant [2 x i8] c"%\00" 
@.str2165 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2166 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2167 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2168 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2169 = private unnamed_addr constant [6 x i8] c"@.str\00" 
@.str2170 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2171 = private unnamed_addr constant [25 x i8] c" = private unnamed_addr \00" 
@.str2172 = private unnamed_addr constant [11 x i8] c"constant [\00" 
@.str2173 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str2174 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2175 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str2176 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2177 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2178 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2179 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2180 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2181 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2182 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2183 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str2184 = private unnamed_addr constant [22 x i8] c", %object** %params_0\00" 
@.str2185 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2186 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2187 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2188 = private unnamed_addr constant [12 x i8] c"  %opresult\00" 
@.str2189 = private unnamed_addr constant [18 x i8] c" = call %object* \00" 
@.str2190 = private unnamed_addr constant [22 x i8] c"@callmethod(%object* \00" 
@.str2191 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str2192 = private unnamed_addr constant [14 x i8] c" x i8]* @.str\00" 
@.str2193 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2194 = private unnamed_addr constant [41 x i8] c",i32 0,i32 0), i32 1, %object** %params)\00" 
@.str2195 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2196 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2197 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2198 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2199 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2200 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2201 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2202 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2203 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2204 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2205 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str2206 = private unnamed_addr constant [10 x i8] c"%opresult\00" 
@.str2207 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2208 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str.methname3962 = private unnamed_addr constant [10 x i8] c"compileop\00" 
@.str2210 = private unnamed_addr constant [1 x i8] c"\00" 
@.str2211 = private unnamed_addr constant [1 x i8] c"\00" 
@.str2212 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str2213 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2214 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname4175 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2216 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2217 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str2218 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str2219 = private unnamed_addr constant [21 x i8] c", %object** %params_\00" 
@.str2220 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2221 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2222 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2223 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname4192 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2225 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2226 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2227 = private unnamed_addr constant [7 x i8] c"member\00" 
@.str2228 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2229 = private unnamed_addr constant [18 x i8] c"; handling member\00" 
@.str2230 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2231 = private unnamed_addr constant [3 x i8] c"in\00" 
@.str2232 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2233 = private unnamed_addr constant [18 x i8] c"; compiled in to \00" 
@.str2234 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2235 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2236 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2237 = private unnamed_addr constant [11 x i8] c"; got len \00" 
@.str2238 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2239 = private unnamed_addr constant [6 x i8] c"@.str\00" 
@.str2240 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2241 = private unnamed_addr constant [25 x i8] c" = private unnamed_addr \00" 
@.str2242 = private unnamed_addr constant [11 x i8] c"constant [\00" 
@.str2243 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str2244 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2245 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2246 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str2247 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2248 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2249 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2250 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2251 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2252 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2253 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2254 = private unnamed_addr constant [14 x i8] c"; created con\00" 
@.str2255 = private unnamed_addr constant [8 x i8] c"  %call\00" 
@.str2256 = private unnamed_addr constant [18 x i8] c" = call %object* \00" 
@.str2257 = private unnamed_addr constant [22 x i8] c"@callmethod(%object* \00" 
@.str2258 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str2259 = private unnamed_addr constant [14 x i8] c" x i8]* @.str\00" 
@.str2260 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2261 = private unnamed_addr constant [20 x i8] c",i32 0,i32 0), i32 \00" 
@.str2262 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2263 = private unnamed_addr constant [21 x i8] c", %object** %params)\00" 
@.str2264 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2265 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2266 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2267 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2268 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2269 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2270 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2271 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2272 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2273 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2274 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2275 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2276 = private unnamed_addr constant [19 x i8] c"; pushed statement\00" 
@.str2277 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str2278 = private unnamed_addr constant [52 x i8] c"; WARNING: non-member calls not fully supported yet\00" 
@.str2279 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2280 = private unnamed_addr constant [6 x i8] c"%self\00" 
@.str2281 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2282 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2283 = private unnamed_addr constant [6 x i8] c"@.str\00" 
@.str2284 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2285 = private unnamed_addr constant [25 x i8] c" = private unnamed_addr \00" 
@.str2286 = private unnamed_addr constant [11 x i8] c"constant [\00" 
@.str2287 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str2288 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2289 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2290 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str2291 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2292 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2293 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2294 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2295 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2296 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2297 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2298 = private unnamed_addr constant [8 x i8] c"  %call\00" 
@.str2299 = private unnamed_addr constant [18 x i8] c" = call %object* \00" 
@.str2300 = private unnamed_addr constant [22 x i8] c"@callmethod(%object* \00" 
@.str2301 = private unnamed_addr constant [22 x i8] c", i8* getelementptr([\00" 
@.str2302 = private unnamed_addr constant [14 x i8] c" x i8]* @.str\00" 
@.str2303 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2304 = private unnamed_addr constant [20 x i8] c",i32 0,i32 0), i32 \00" 
@.str2305 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2306 = private unnamed_addr constant [21 x i8] c", %object** %params)\00" 
@.str2307 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2308 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2309 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2310 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2311 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2312 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2313 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2314 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2315 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2316 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2317 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2318 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2319 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str2320 = private unnamed_addr constant [6 x i8] c"%call\00" 
@.str2321 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2322 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2323 = private unnamed_addr constant [38 x i8] c"; compilecall giving return register \00" 
@.str2324 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str2325 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2326 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname4166 = private unnamed_addr constant [12 x i8] c"compilecall\00" 
@.str2328 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2329 = private unnamed_addr constant [4 x i8] c"num\00" 
@.str2330 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2331 = private unnamed_addr constant [7 x i8] c"  %num\00" 
@.str2332 = private unnamed_addr constant [40 x i8] c" = call %object* @alloc_Float64(double \00" 
@.str2333 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2334 = private unnamed_addr constant [4 x i8] c".0)\00" 
@.str2335 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2336 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2337 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2338 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2339 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2340 = private unnamed_addr constant [5 x i8] c"%num\00" 
@.str2341 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2342 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2343 = private unnamed_addr constant [1 x i8] c"\00" 
@.str2344 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2345 = private unnamed_addr constant [7 x i8] c"string\00" 
@.str2346 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2347 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2348 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2349 = private unnamed_addr constant [8 x i8] c"_escape\00" 
@.str2350 = private unnamed_addr constant [8 x i8] c"value:=\00" 
@.str2351 = private unnamed_addr constant [7 x i8] c"  %str\00" 
@.str2352 = private unnamed_addr constant [19 x i8] c" = getelementptr [\00" 
@.str2353 = private unnamed_addr constant [14 x i8] c" x i8]* @.str\00" 
@.str2354 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2355 = private unnamed_addr constant [15 x i8] c", i32 0, i32 0\00" 
@.str2356 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2357 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2358 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2359 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2360 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2361 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2362 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2363 = private unnamed_addr constant [10 x i8] c"  %string\00" 
@.str2364 = private unnamed_addr constant [36 x i8] c" = call %object* @alloc_String(i8* \00" 
@.str2365 = private unnamed_addr constant [5 x i8] c"%str\00" 
@.str2366 = private unnamed_addr constant [2 x i8] c")\00" 
@.str2367 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2368 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2369 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2370 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2371 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2372 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2373 = private unnamed_addr constant [6 x i8] c"@.str\00" 
@.str2374 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2375 = private unnamed_addr constant [35 x i8] c" = private unnamed_addr constant [\00" 
@.str2376 = private unnamed_addr constant [10 x i8] c" x i8] c\22\00" 
@.str2377 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2378 = private unnamed_addr constant [5 x i8] c"\\00\22\00" 
@.str2379 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2380 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2381 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2382 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2383 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2384 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2385 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str2386 = private unnamed_addr constant [8 x i8] c"%string\00" 
@.str2387 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2388 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2389 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2390 = private unnamed_addr constant [6 x i8] c"index\00" 
@.str2391 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2392 = private unnamed_addr constant [13 x i8] c"compileindex\00" 
@.str2393 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2394 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str2395 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2396 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2397 = private unnamed_addr constant [5 x i8] c"true\00" 
@.str2398 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2399 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2400 = private unnamed_addr constant [6 x i8] c"false\00" 
@.str2401 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2402 = private unnamed_addr constant [2 x i8] c"|\00" 
@.str2403 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str2404 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2405 = private unnamed_addr constant [5 x i8] c"true\00" 
@.str2406 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2407 = private unnamed_addr constant [8 x i8] c"  %bool\00" 
@.str2408 = private unnamed_addr constant [18 x i8] c" = call %object* \00" 
@.str2409 = private unnamed_addr constant [20 x i8] c"@alloc_Boolean(i32 \00" 
@.str2410 = private unnamed_addr constant [2 x i8] c")\00" 
@.str2411 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2412 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2413 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2414 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2415 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2416 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2417 = private unnamed_addr constant [6 x i8] c"%bool\00" 
@.str2418 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2419 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2420 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2421 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str2422 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2423 = private unnamed_addr constant [18 x i8] c"compileidentifier\00" 
@.str2424 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2425 = private unnamed_addr constant [7 x i8] c"vardec\00" 
@.str2426 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2427 = private unnamed_addr constant [14 x i8] c"compilevardec\00" 
@.str2428 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2429 = private unnamed_addr constant [7 x i8] c"method\00" 
@.str2430 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2431 = private unnamed_addr constant [6 x i8] c"%self\00" 
@.str2432 = private unnamed_addr constant [14 x i8] c"compilemethod\00" 
@.str2433 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2434 = private unnamed_addr constant [6 x i8] c"array\00" 
@.str2435 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2436 = private unnamed_addr constant [13 x i8] c"compilearray\00" 
@.str2437 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2438 = private unnamed_addr constant [5 x i8] c"bind\00" 
@.str2439 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2440 = private unnamed_addr constant [12 x i8] c"compilebind\00" 
@.str2441 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2442 = private unnamed_addr constant [6 x i8] c"while\00" 
@.str2443 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2444 = private unnamed_addr constant [13 x i8] c"compilewhile\00" 
@.str2445 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2446 = private unnamed_addr constant [3 x i8] c"if\00" 
@.str2447 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2448 = private unnamed_addr constant [10 x i8] c"compileif\00" 
@.str2449 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2450 = private unnamed_addr constant [7 x i8] c"object\00" 
@.str2451 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2452 = private unnamed_addr constant [14 x i8] c"compileobject\00" 
@.str2453 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2454 = private unnamed_addr constant [7 x i8] c"member\00" 
@.str2455 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2456 = private unnamed_addr constant [14 x i8] c"compilemember\00" 
@.str2457 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2458 = private unnamed_addr constant [4 x i8] c"for\00" 
@.str2459 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2460 = private unnamed_addr constant [11 x i8] c"compilefor\00" 
@.str2461 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2462 = private unnamed_addr constant [5 x i8] c"call\00" 
@.str2463 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2464 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2465 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2466 = private unnamed_addr constant [6 x i8] c"print\00" 
@.str2467 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2468 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str2469 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2470 = private unnamed_addr constant [5 x i8] c"push\00" 
@.str.methname4682 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2472 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2473 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str2474 = private unnamed_addr constant [18 x i8] c"  store %object* \00" 
@.str2475 = private unnamed_addr constant [21 x i8] c", %object** %params_\00" 
@.str2476 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2477 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2478 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2479 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname4699 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2481 = private unnamed_addr constant [8 x i8] c"  %call\00" 
@.str2482 = private unnamed_addr constant [53 x i8] c" = call %object* @gracelib_print(%object* null, i32 \00" 
@.str2483 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2484 = private unnamed_addr constant [21 x i8] c", %object** %params)\00" 
@.str2485 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2486 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2487 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2488 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2489 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2490 = private unnamed_addr constant [6 x i8] c"%call\00" 
@.str2491 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2492 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2493 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2494 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2495 = private unnamed_addr constant [8 x i8] c"readall\00" 
@.str2496 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2497 = private unnamed_addr constant [8 x i8] c"  %call\00" 
@.str2498 = private unnamed_addr constant [18 x i8] c" = call %object* \00" 
@.str2499 = private unnamed_addr constant [41 x i8] c"@gracelib_readall(%object* null, i32 0, \00" 
@.str2500 = private unnamed_addr constant [16 x i8] c"%object** null)\00" 
@.str2501 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2502 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2503 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2504 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2505 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2506 = private unnamed_addr constant [6 x i8] c"%call\00" 
@.str2507 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2508 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2509 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2510 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2511 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str2512 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2513 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2514 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2515 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2516 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2517 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str2518 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str2519 = private unnamed_addr constant [7 x i8] c"length\00" 
@.str2520 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2521 = private unnamed_addr constant [13 x i8] c"; PP FOLLOWS\00" 
@.str2522 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2523 = private unnamed_addr constant [7 x i8] c"pretty\00" 
@.str2524 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2525 = private unnamed_addr constant [5 x i8] c"null\00" 
@.str2526 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str2527 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2528 = private unnamed_addr constant [8 x i8] c"  %call\00" 
@.str2529 = private unnamed_addr constant [18 x i8] c" = call %object* \00" 
@.str2530 = private unnamed_addr constant [27 x i8] c"@gracelib_length(%object* \00" 
@.str2531 = private unnamed_addr constant [2 x i8] c")\00" 
@.str2532 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2533 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2534 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2535 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2536 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2537 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2538 = private unnamed_addr constant [6 x i8] c"%call\00" 
@.str2539 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2540 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2541 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2542 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2543 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str2544 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2545 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2546 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2547 = private unnamed_addr constant [13 x i8] c"escapestring\00" 
@.str2548 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2549 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str2550 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str2551 = private unnamed_addr constant [8 x i8] c"_escape\00" 
@.str2552 = private unnamed_addr constant [10 x i8] c"astmember\00" 
@.str2553 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str2554 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2555 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2556 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2557 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2558 = private unnamed_addr constant [11 x i8] c"identifier\00" 
@.str2559 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2560 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2561 = private unnamed_addr constant [6 x i8] c"value\00" 
@.str2562 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str2563 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2564 = private unnamed_addr constant [2 x i8] c"&\00" 
@.str2565 = private unnamed_addr constant [5 x i8] c"with\00" 
@.str2566 = private unnamed_addr constant [4 x i8] c"not\00" 
@.str2567 = private unnamed_addr constant [10 x i8] c"astmember\00" 
@.str2568 = private unnamed_addr constant [8 x i8] c"astcall\00" 
@.str2569 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2570 = private unnamed_addr constant [11 x i8] c"register:=\00" 
@.str2571 = private unnamed_addr constant [12 x i8] c"compilecall\00" 
@.str2572 = private unnamed_addr constant [5 x i8] c"type\00" 
@.str2573 = private unnamed_addr constant [3 x i8] c"op\00" 
@.str2574 = private unnamed_addr constant [3 x i8] c"==\00" 
@.str2575 = private unnamed_addr constant [10 x i8] c"compileop\00" 
@.str2576 = private unnamed_addr constant [25 x i8] c"; compilenode returning \00" 
@.str2577 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str2578 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2579 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2580 = private unnamed_addr constant [9 x i8] c"register\00" 
@.str.methname4397 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str2582 = private unnamed_addr constant [59 x i8] c"@.str = private unnamed_addr constant [6 x i8] c\22Hello\\00\22\00" 
@.str2583 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2584 = private unnamed_addr constant [61 x i8] c"@.str._plus = private unnamed_addr constant [2 x i8] c\22+\\00\22\00" 
@.str2585 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2586 = private unnamed_addr constant [62 x i8] c"@.str._minus = private unnamed_addr constant [2 x i8] c\22-\\00\22\00" 
@.str2587 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2588 = private unnamed_addr constant [65 x i8] c"@.str._asterisk = private unnamed_addr constant [2 x i8] c\22*\\00\22\00" 
@.str2589 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2590 = private unnamed_addr constant [62 x i8] c"@.str._slash = private unnamed_addr constant [2 x i8] c\22/\\00\22\00" 
@.str2591 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2592 = private unnamed_addr constant [64 x i8] c"@.str._percent = private unnamed_addr constant [2 x i8] c\22%\\00\22\00" 
@.str2593 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2594 = private unnamed_addr constant [63 x i8] c"@.str._index = private unnamed_addr constant [3 x i8] c\22[]\\00\22\00" 
@.str2595 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2596 = private unnamed_addr constant [64 x i8] c"@.str._push = private unnamed_addr constant [5 x i8] c\22push\\00\22\00" 
@.str2597 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2598 = private unnamed_addr constant [64 x i8] c"@.str._iter = private unnamed_addr constant [5 x i8] c\22iter\\00\22\00" 
@.str2599 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2600 = private unnamed_addr constant [66 x i8] c"@.str._apply = private unnamed_addr constant [6 x i8] c\22apply\\00\22\00" 
@.str2601 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2602 = private unnamed_addr constant [72 x i8] c"@.str._havemore = private unnamed_addr constant [9 x i8] c\22havemore\\00\22\00" 
@.str2603 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2604 = private unnamed_addr constant [64 x i8] c"@.str._next = private unnamed_addr constant [5 x i8] c\22next\\00\22\00" 
@.str2605 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2606 = private unnamed_addr constant [71 x i8] c"@.str.asString = private unnamed_addr constant [9 x i8] c\22asString\\00\22\00" 
@.str2607 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2608 = private unnamed_addr constant [203 x i8] c"
%method = type { i8*, %object*(%object *, i32, %object**)*,
    %object***, %object*(%object *, i32, %object**,
        %object***)*}
%object = type { [32 x i8], %method**, %object**, i8**, i32, i32 }
\00" 
@.str2609 = private unnamed_addr constant [21 x i8] c"define i32 @main() {\00" 
@.str2610 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2611 = private unnamed_addr constant [7 x i8] c"entry:\00" 
@.str2612 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2613 = private unnamed_addr constant [51 x i8] c"  %ptrsize_p = getelementptr %object** null, i32 1\00" 
@.str2614 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2615 = private unnamed_addr constant [50 x i8] c"  %ptrsize = ptrtoint %object** %ptrsize_p to i32\00" 
@.str2616 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2617 = private unnamed_addr constant [37 x i8] c"  %paramssize = mul i32 %ptrsize, 16\00" 
@.str2618 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2619 = private unnamed_addr constant [47 x i8] c"  %paramsu = call i8* @malloc(i32 %paramssize)\00" 
@.str2620 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2621 = private unnamed_addr constant [46 x i8] c"  %params = bitcast i8* %paramsu to %object**\00" 
@.str2622 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2623 = private unnamed_addr constant [3 x i8] c"..\00" 
@.str2624 = private unnamed_addr constant [11 x i8] c"  %params_\00" 
@.str2625 = private unnamed_addr constant [41 x i8] c" = getelementptr %object** %params, i32 \00" 
@.str2626 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2627 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2628 = private unnamed_addr constant [3 x i8] c"++\00" 
@.str2629 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname4955 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2631 = private unnamed_addr constant [37 x i8] c"  %self = call %object* @alloc_obj()\00" 
@.str2632 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2633 = private unnamed_addr constant [12 x i8] c"compilenode\00" 
@.str.methname4973 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2635 = private unnamed_addr constant [12 x i8] c"  ret i32 0\00" 
@.str2636 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2637 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str2638 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2639 = private unnamed_addr constant [26 x i8] c"define i32 @out(i8* %s) {\00" 
@.str2640 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2641 = private unnamed_addr constant [7 x i8] c"entry:\00" 
@.str2642 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2643 = private unnamed_addr constant [25 x i8] c"  call i32 @puts(i8* %s)\00" 
@.str2644 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2645 = private unnamed_addr constant [12 x i8] c"  ret i32 0\00" 
@.str2646 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2647 = private unnamed_addr constant [2 x i8] c"}\00" 
@.str2648 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2649 = private unnamed_addr constant [23 x i8] c"; constant definitions\00" 
@.str2650 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2651 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname4996 = private unnamed_addr constant [6 x i8] c"apply\00" 
@.str2653 = private unnamed_addr constant [11 x i8] c"; gracelib\00" 
@.str2654 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2655 = private unnamed_addr constant [30 x i8] c"declare %object* @alloc_obj()\00" 
@.str2656 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2657 = private unnamed_addr constant [32 x i8] c"declare %object* @alloc_Array()\00" 
@.str2658 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2659 = private unnamed_addr constant [40 x i8] c"declare %object* @alloc_Float64(double)\00" 
@.str2660 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2661 = private unnamed_addr constant [36 x i8] c"declare %object* @alloc_String(i8*)\00" 
@.str2662 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2663 = private unnamed_addr constant [37 x i8] c"declare %object* @alloc_Boolean(i32)\00" 
@.str2664 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2665 = private unnamed_addr constant [60 x i8] c"declare %object* @callmethod(%object*, i8*, i32, %object**)\00" 
@.str2666 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2667 = private unnamed_addr constant [77 x i8] c"declare void @addmethod(%object*, i8*, %object*(%object *, i32, %object**)*)\00" 
@.str2668 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2669 = private unnamed_addr constant [59 x i8] c"declare %object* @gracelib_print(%object*, i32, %object**)\00" 
@.str2670 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2671 = private unnamed_addr constant [61 x i8] c"declare %object* @gracelib_readall(%object*, i32, %object**)\00" 
@.str2672 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2673 = private unnamed_addr constant [44 x i8] c"declare %object* @gracelib_length(%object*)\00" 
@.str2674 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2675 = private unnamed_addr constant [31 x i8] c"declare %object** @alloc_var()\00" 
@.str2676 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2677 = private unnamed_addr constant [29 x i8] c"declare i1 @istrue(%object*)\00" 
@.str2678 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2679 = private unnamed_addr constant [39 x i8] c"declare %object*** @createclosure(i32)\00" 
@.str2680 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2681 = private unnamed_addr constant [50 x i8] c"declare void @addtoclosure(%object***, %object**)\00" 
@.str2682 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2683 = private unnamed_addr constant [111 x i8] c"declare void @addclosuremethod(%object*, i8*, %object*(%object*,
    i32, %object**, %object***)*, %object***)\00" 
@.str2684 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2685 = private unnamed_addr constant [48 x i8] c"declare void @adddatum(%object*, %object*, i32)\00" 
@.str2686 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2687 = private unnamed_addr constant [17 x i8] c"; libc functions\00" 
@.str2688 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2689 = private unnamed_addr constant [23 x i8] c"declare i32 @puts(i8*)\00" 
@.str2690 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str2691 = private unnamed_addr constant [25 x i8] c"declare i8* @malloc(i32)\00" 
@.str2692 = private unnamed_addr constant [4 x i8] c"out\00" 
@.str.methname5043 = private unnamed_addr constant [6 x i8] c"apply\00" 
; gracelib 
declare %object* @alloc_obj() 
declare %object* @alloc_Array() 
declare %object* @alloc_Float64(double) 
declare %object* @alloc_String(i8*) 
declare %object* @alloc_Boolean(i32) 
declare %object* @callmethod(%object*, i8*, i32, %object**) 
declare void @addmethod(%object*, i8*, %object*(%object *, i32, %object**)*) 
declare %object* @gracelib_print(%object*, i32, %object**) 
declare %object* @gracelib_readall(%object*, i32, %object**) 
declare %object* @gracelib_length(%object*) 
declare %object** @alloc_var() 
declare i1 @istrue(%object*) 
declare %object*** @createclosure(i32) 
declare void @addtoclosure(%object***, %object**) 
declare void @addclosuremethod(%object*, i8*, %object*(%object*,
    i32, %object**, %object***)*, %object***) 
declare void @adddatum(%object*, %object*, i32) 
; libc functions 
declare i32 @puts(i8*) 
declare i8* @malloc(i32) 
